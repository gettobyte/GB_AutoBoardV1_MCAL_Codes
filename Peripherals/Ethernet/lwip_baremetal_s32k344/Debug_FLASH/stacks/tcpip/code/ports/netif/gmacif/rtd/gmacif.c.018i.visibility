
Marking local functions:


Marking externally visible functions: GmacIf_TxNotification/17 GmacIf_RxNotification/16 memcpy_custom/15 memcpy_64/14 gmacif_register_rx_buff_process_condition_handler/13 igmp_gmac_filter/12 mld_gmac_filter/11 gmac_ethernetif_shutdown/10 gmac_ethernetif_init/9


Marking externally visible variables: rx_bufs/5 tx_pbufs/4 gmacif_DataBuffer/3 g_netif/1


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Gmac_Ip_GetTransmitStatus/36 (Gmac_Ip_GetTransmitStatus) @066b17e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: GmacIf_TxNotification/17 
  Calls: 
Gmac_Ip_ReadFrame/35 (Gmac_Ip_ReadFrame) @066b1620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: GmacIf_RxNotification/16 
  Calls: 
memcpy/34 (memcpy) @066b1460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: memcpy_custom/15 memcpy_custom/15 memcpy_custom/15 memcpy_custom/15 
  Calls: 
Gmac_Ip_RemoveDstAddrFromHashFilter/33 (Gmac_Ip_RemoveDstAddrFromHashFilter) @066b1000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: igmp_gmac_filter/12 mld_gmac_filter/11 
  Calls: 
Gmac_Ip_AddDstAddrToHashFilter/32 (Gmac_Ip_AddDstAddrToHashFilter) @06673b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: igmp_gmac_filter/12 mld_gmac_filter/11 
  Calls: 
lwip_htonl/31 (lwip_htonl) @06673540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: mld_gmac_filter/11 mld_gmac_filter/11 mld_gmac_filter/11 mld_gmac_filter/11 
  Calls: 
Gmac_Ip_Deinit/30 (Gmac_Ip_Deinit) @06673e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: gmac_ethernetif_shutdown/10 
  Calls: 
ethip6_output/29 (ethip6_output) @06673c40
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: gmac_ethernetif_init/9 (addr) 
  Availability: not_available
  Function flags:
  Called by: 
  Calls: 
etharp_output/28 (etharp_output) @06673a80
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: gmac_ethernetif_init/9 (addr) 
  Availability: not_available
  Function flags:
  Called by: 
  Calls: 
netif_set_link_up/27 (netif_set_link_up) @066738c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: gmacif_low_level_init/8 
  Calls: 
Gmac_Ip_SetMulticastHashFilter/26 (Gmac_Ip_SetMulticastHashFilter) @066737e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: gmacif_low_level_init/8 
  Calls: 
Gmac_Ip_EnableController/25 (Gmac_Ip_EnableController) @06673700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: gmacif_low_level_init/8 
  Calls: 
Gmac_Ip_ProvideRxBuff/24 (Gmac_Ip_ProvideRxBuff) @06673620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: GmacIf_RxNotification/16 GmacIf_RxNotification/16 gmacif_low_level_init/8 
  Calls: 
pbuf_alloc/23 (pbuf_alloc) @06673380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: gmacif_input/7 
  Calls: 
pbuf_free/22 (pbuf_free) @066731c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: GmacIf_TxNotification/17 gmacif_input/7 gmacif_low_level_output/6 
  Calls: 
Gmac_Ip_SendMultiBufferFrame/21 (Gmac_Ip_SendMultiBufferFrame) @066730e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: gmacif_low_level_output/6 
  Calls: 
netif_cfg/20 (netif_cfg) @06667f30
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: gmacif_low_level_output/6 (read) gmacif_low_level_init/8 (read) gmacif_low_level_init/8 (read) gmacif_low_level_init/8 (read) gmacif_low_level_init/8 (read) gmacif_low_level_init/8 (read) gmac_ethernetif_init/9 (read) gmac_ethernetif_init/9 (read) gmac_ethernetif_init/9 (read) gmac_ethernetif_init/9 (read) gmac_ethernetif_init/9 (read) gmac_ethernetif_shutdown/10 (read) mld_gmac_filter/11 (read) mld_gmac_filter/11 (read) igmp_gmac_filter/12 (read) igmp_gmac_filter/12 (read) GmacIf_RxNotification/16 (read) 
  Availability: not_available
  Varpool flags:
pbuf_clen/19 (pbuf_clen) @06673000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: gmacif_low_level_output/6 
  Calls: 
pbuf_ref/18 (pbuf_ref) @0666ac40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: gmacif_low_level_output/6 
  Calls: 
GmacIf_TxNotification/17 (GmacIf_TxNotification) @0666ae00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: tx_pbufs/4 (read) tx_pbufs/4 (read) tx_pbufs/4 (read) tx_pbufs/4 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_free/22 Gmac_Ip_GetTransmitStatus/36 
GmacIf_RxNotification/16 (GmacIf_RxNotification) @0666ab60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: rx_buff_process_handler/2 (read) rx_buff_process_handler/2 (read) netif_cfg/20 (read) g_netif/1 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gmac_Ip_ProvideRxBuff/24 gmacif_input/7 Gmac_Ip_ProvideRxBuff/24 Gmac_Ip_ReadFrame/35 
   Indirect call Num speculative call targets: 0
memcpy_custom/15 (memcpy_custom) @0666a8c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: memcpy/34 memcpy/34 memcpy_64/14 memcpy/34 memcpy/34 
memcpy_64/14 (memcpy_64) @0666a620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: memcpy_custom/15 
  Calls: 
gmacif_register_rx_buff_process_condition_handler/13 (gmacif_register_rx_buff_process_condition_handler) @0666a380
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: rx_buff_process_handler/2 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
igmp_gmac_filter/12 (igmp_gmac_filter) @0666a0e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  Address is taken.
  References: netif_cfg/20 (read) netif_cfg/20 (read) 
  Referring: gmacif_low_level_init/8 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gmac_Ip_RemoveDstAddrFromHashFilter/33 Gmac_Ip_AddDstAddrToHashFilter/32 
mld_gmac_filter/11 (mld_gmac_filter) @0664aee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  Address is taken.
  References: netif_cfg/20 (read) netif_cfg/20 (read) 
  Referring: gmacif_low_level_init/8 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gmac_Ip_RemoveDstAddrFromHashFilter/33 Gmac_Ip_AddDstAddrToHashFilter/32 lwip_htonl/31 lwip_htonl/31 lwip_htonl/31 lwip_htonl/31 
gmac_ethernetif_shutdown/10 (gmac_ethernetif_shutdown) @0664a8c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: netif_cfg/20 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Gmac_Ip_Deinit/30 
gmac_ethernetif_init/9 (gmac_ethernetif_init) @0664a620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: tx_pbufs/4 (write) netif_cfg/20 (read) netif_cfg/20 (read) etharp_output/28 (addr) netif_cfg/20 (read) ethip6_output/29 (addr) gmacif_low_level_output/6 (addr) netif_cfg/20 (read) netif_cfg/20 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: gmacif_low_level_init/8 
gmacif_low_level_init/8 (gmacif_low_level_init) @0664a380
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: netif_cfg/20 (read) igmp_gmac_filter/12 (addr) g_netif/1 (write) gmacif_DataBuffer/3 (addr) netif_cfg/20 (read) rx_bufs/5 (write) netif_cfg/20 (read) netif_cfg/20 (read) netif_cfg/20 (read) mld_gmac_filter/11 (addr) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: gmac_ethernetif_init/9 
  Calls: netif_set_link_up/27 Gmac_Ip_SetMulticastHashFilter/26 Gmac_Ip_EnableController/25 Gmac_Ip_ProvideRxBuff/24 
   Indirect call Num speculative call targets: 0
gmacif_input/7 (gmacif_input) @0664a0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: GmacIf_RxNotification/16 
  Calls: pbuf_free/22 pbuf_alloc/23 
   Indirect call Num speculative call targets: 0
gmacif_low_level_output/6 (gmacif_low_level_output) @066ccee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: tx_pbufs/4 (read) netif_cfg/20 (read) tx_pbufs/4 (write) tx_pbufs/4 (write) 
  Referring: gmac_ethernetif_init/9 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_free/22 Gmac_Ip_SendMultiBufferFrame/21 pbuf_clen/19 pbuf_ref/18 
rx_bufs/5 (rx_bufs) @066c94c8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: gmacif_low_level_init/8 (write) 
  Availability: available
  Varpool flags:
tx_pbufs/4 (tx_pbufs) @066c9438
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: gmacif_low_level_output/6 (read) gmacif_low_level_output/6 (write) gmacif_low_level_output/6 (write) gmac_ethernetif_init/9 (write) GmacIf_TxNotification/17 (read) GmacIf_TxNotification/17 (read) GmacIf_TxNotification/17 (read) GmacIf_TxNotification/17 (write) 
  Availability: available
  Varpool flags:
gmacif_DataBuffer/3 (gmacif_DataBuffer) @066c93a8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: gmacif_low_level_init/8 (addr) 
  Availability: available
  Varpool flags:
rx_buff_process_handler/2 (rx_buff_process_handler) @066c9318
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: gmacif_register_rx_buff_process_condition_handler/13 (write) GmacIf_RxNotification/16 (read) GmacIf_RxNotification/16 (read) 
  Availability: available
  Varpool flags: initialized
g_netif/1 (g_netif) @066c9240
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: gmacif_low_level_init/8 (write) GmacIf_RxNotification/16 (read) 
  Availability: available
  Varpool flags: initialized
GmacIf_TxNotification (uint8 instance, uint8 channel)
{
  uint8_t i;

  <bb 2> :
  i = 0;
  i = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  _1 = (int) i;
  _2 = tx_pbufs[_1];
  if (_2 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _3 = (int) i;
  _4 = tx_pbufs[_3];
  _5 = _4->payload;
  _6 = Gmac_Ip_GetTransmitStatus (instance, channel, _5, 0B);
  if (_6 != 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _7 = (int) i;
  _8 = tx_pbufs[_7];
  pbuf_free (_8);
  _9 = (int) i;
  tx_pbufs[_9] = 0B;

  <bb 6> :
  i.10_10 = i;
  i = i.10_10 + 1;

  <bb 7> :
  if (i <= 4)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  return;

}


GmacIf_RxNotification (uint8 instance, uint8 channel)
{
  uint32_t i;
  err_t ret;
  Gmac_Ip_StatusType gmac_status;
  struct Gmac_Ip_RxInfoType info;
  struct Gmac_Ip_BufferType bd;

  <bb 2> :
  gmac_status = 2561;
  ret = -6;

  <bb 3> :
  gmac_status = Gmac_Ip_ReadFrame (instance, channel, &bd, &info);
  if (gmac_status == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 4> :
  _1 = info.ErrMask;
  if (_1 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  ret = -12;
  _2 = info.ErrMask;
  _3 = _2 | 2097152;
  if (_3 != 2097152)
    goto <bb 6>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 6> :
  Gmac_Ip_ProvideRxBuff (instance, channel, &bd);
  goto <bb 14>; [INV]

  <bb 7> :
  rx_buff_process_handler.8_4 = rx_buff_process_handler;
  if (rx_buff_process_handler.8_4 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  rx_buff_process_handler.9_5 = rx_buff_process_handler;
  _6 = rx_buff_process_handler.9_5 (instance, &bd);
  if (_6 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  i = 0;
  goto <bb 13>; [INV]

  <bb 10> :
  _7 = netif_cfg[i];
  _8 = _7->num;
  if (instance == _8)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _9 = g_netif[i];
  _10 = bd.Data;
  _11 = bd.Length;
  ret = gmacif_input (_9, _10, _11);
  goto <bb 14>; [INV]

  <bb 12> :
  i = i + 1;

  <bb 13> :
  if (i == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  Gmac_Ip_ProvideRxBuff (instance, channel, &bd);

  <bb 15> :
  if (gmac_status == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  bd = {CLOBBER};
  info = {CLOBBER};
  return;

}


memcpy_custom (void * dst, const void * src, unsigned int len)
{
  unsigned int alignment;
  const char * ps;
  char * pd;
  unsigned int last_dest;
  unsigned int last_src;

  <bb 2> :
  if (len <= 32)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  memcpy (dst, src, len);
  goto <bb 8>; [INV]

  <bb 4> :
  last_src = (unsigned int) src;
  last_dest = (unsigned int) dst;
  pd = dst;
  ps = src;
  _1 = last_src ^ last_dest;
  _2 = _1 & 15;
  if (_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  alignment = last_dest & 15;
  alignment = 16 - alignment;
  memcpy (pd, ps, alignment);
  pd = pd + alignment;
  ps = ps + alignment;
  len = len - alignment;
  memcpy_64 (pd, ps, len);
  _3 = len & 15;
  if (_3 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _4 = len & 4294967288;
  pd = pd + _4;
  _5 = len & 4294967288;
  ps = ps + _5;
  _6 = len & 15;
  memcpy (pd, ps, _6);
  goto <bb 8>; [INV]

  <bb 7> :
  memcpy (dst, src, len);

  <bb 8> :
  return;

}


memcpy_64 (uint64_t * dst, uint64_t * src, unsigned int len)
{
  <bb 2> :
  len = len >> 3;
  goto <bb 4>; [INV]

  <bb 3> :
  src.5_1 = src;
  src = src.5_1 + 8;
  dst.6_2 = dst;
  dst = dst.6_2 + 8;
  _3 = *src.5_1;
  *dst.6_2 = _3;

  <bb 4> :
  len.7_4 = len;
  len = len.7_4 + 4294967295;
  if (len.7_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


gmacif_register_rx_buff_process_condition_handler (unsigned int (*rx_buff_process_condition_handler_t) (uint8_t, struct Gmac_Ip_BufferType *) handler)
{
  <bb 2> :
  rx_buff_process_handler = handler;
  return;

}


igmp_gmac_filter (struct netif * netif, const struct ip4_addr_t * group, netif_mac_filter_action action)
{
  uint8_t group_MAC[6];
  err_t D.8581;

  <bb 2> :
  group_MAC[0] = 1;
  group_MAC[1] = 0;
  group_MAC[2] = 94;
  _1 = &group->addr;
  _2 = _1 + 1;
  _3 = *_2;
  _4 = _3 & 127;
  group_MAC[3] = _4;
  _5 = &group->addr;
  _6 = _5 + 2;
  _7 = *_6;
  group_MAC[4] = _7;
  _8 = &group->addr;
  _9 = _8 + 3;
  _10 = *_9;
  group_MAC[5] = _10;
  if (action != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _11 = netif->num;
  _12 = (int) _11;
  _13 = netif_cfg[_12];
  _14 = _13->num;
  Gmac_Ip_AddDstAddrToHashFilter (_14, &group_MAC);
  goto <bb 5>; [INV]

  <bb 4> :
  _15 = netif->num;
  _16 = (int) _15;
  _17 = netif_cfg[_16];
  _18 = _17->num;
  Gmac_Ip_RemoveDstAddrFromHashFilter (_18, &group_MAC);

  <bb 5> :
  D.8581 = 0;
  group_MAC = {CLOBBER};

  <bb 6> :
<L4>:
  return D.8581;

}


mld_gmac_filter (struct netif * netif, const struct ip6_addr_t * group, netif_mac_filter_action action)
{
  uint8_t group_MAC[6];
  err_t D.8575;

  <bb 2> :
  group_MAC[0] = 51;
  group_MAC[1] = 51;
  _1 = group->addr[3];
  _2 = lwip_htonl (_1);
  _3 = _2 >> 16;
  _4 = (short unsigned int) _3;
  _5 = _4 >> 8;
  _6 = (unsigned char) _5;
  group_MAC[2] = _6;
  _7 = group->addr[3];
  _8 = lwip_htonl (_7);
  _9 = _8 >> 16;
  _10 = (unsigned char) _9;
  group_MAC[3] = _10;
  _11 = group->addr[3];
  _12 = lwip_htonl (_11);
  _13 = (short unsigned int) _12;
  _14 = _13 >> 8;
  _15 = (unsigned char) _14;
  group_MAC[4] = _15;
  _16 = group->addr[3];
  _17 = lwip_htonl (_16);
  _18 = (unsigned char) _17;
  group_MAC[5] = _18;
  if (action != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _19 = netif->num;
  _20 = (int) _19;
  _21 = netif_cfg[_20];
  _22 = _21->num;
  Gmac_Ip_AddDstAddrToHashFilter (_22, &group_MAC);
  goto <bb 5>; [INV]

  <bb 4> :
  _23 = netif->num;
  _24 = (int) _23;
  _25 = netif_cfg[_24];
  _26 = _25->num;
  Gmac_Ip_RemoveDstAddrFromHashFilter (_26, &group_MAC);

  <bb 5> :
  D.8575 = 0;
  group_MAC = {CLOBBER};

  <bb 6> :
<L4>:
  return D.8575;

}


gmac_ethernetif_shutdown (struct netif * netif)
{
  <bb 2> :
  _1 = netif->num;
  _2 = (int) _1;
  _3 = netif_cfg[_2];
  _4 = _3->num;
  Gmac_Ip_Deinit (_4);
  return;

}


gmac_ethernetif_init (struct netif * netif)
{
  uint8_t i;
  err_t ret;
  err_t D.8570;

  <bb 2> :
  ret = 0;
  if (netif == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  i = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  _1 = (int) i;
  tx_pbufs[_1] = 0B;
  i.4_2 = i;
  i = i.4_2 + 1;

  <bb 6> :
  if (i <= 4)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _3 = netif->num;
  _4 = (int) _3;
  _5 = netif_cfg[_4];
  _6 = _5->name[0];
  netif->name[0] = _6;
  _7 = netif->num;
  _8 = (int) _7;
  _9 = netif_cfg[_8];
  _10 = _9->name[1];
  netif->name[1] = _10;
  netif->output = etharp_output;
  _11 = netif->num;
  _12 = (int) _11;
  _13 = netif_cfg[_12];
  _14 = _13->has_IPv6;
  if (_14 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  netif->output_ip6 = ethip6_output;

  <bb 9> :
  netif->linkoutput = gmacif_low_level_output;
  _15 = netif->num;
  _16 = (int) _15;
  _17 = netif_cfg[_16];
  _18 = _17->hostname;
  if (_18 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _19 = netif->num;
  _20 = (int) _19;
  _21 = netif_cfg[_20];
  _22 = _21->hostname;
  netif->hostname = _22;

  <bb 11> :
  netif->link_type = 6;
  netif->link_speed = 100000000;
  netif->ts = 0;
  netif->mib2_counters.ifinoctets = 0;
  netif->mib2_counters.ifinucastpkts = 0;
  netif->mib2_counters.ifinnucastpkts = 0;
  netif->mib2_counters.ifindiscards = 0;
  netif->mib2_counters.ifinerrors = 0;
  netif->mib2_counters.ifinunknownprotos = 0;
  netif->mib2_counters.ifoutoctets = 0;
  netif->mib2_counters.ifoutucastpkts = 0;
  netif->mib2_counters.ifoutnucastpkts = 0;
  netif->mib2_counters.ifoutdiscards = 0;
  netif->mib2_counters.ifouterrors = 0;
  gmacif_low_level_init (netif);
  D.8570 = ret;

  <bb 12> :
<L10>:
  return D.8570;

}


gmacif_low_level_init (struct netif * netif)
{
  struct ip6_addr_t ip6_allnodes_ll;
  uint8_t i;
  uint8_t i;
  struct Gmac_Ip_BufferType bd;

  <bb 2> :
  i = 0;
  netif->hwaddr_len = 6;
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = netif->num;
  _2 = (int) _1;
  _3 = netif_cfg[_2];
  _4 = (int) i;
  _5 = (int) i;
  _6 = _3->hwaddr[_4];
  netif->hwaddr[_5] = _6;
  i.2_7 = i;
  i = i.2_7 + 1;

  <bb 4> :
  if (i <= 5)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  netif->mtu = 1500;
  netif->flags = 26;
  _8 = netif->flags;
  _9 = _8 | 32;
  netif->flags = _9;
  netif->igmp_mac_filter = igmp_gmac_filter;
  _10 = netif->num;
  _11 = (int) _10;
  g_netif[_11] = netif;
  i = 0;
  goto <bb 7>; [INV]

  <bb 6> :
  _12 = (int) i;
  _13 = _12 * 1536;
  _14 = &gmacif_DataBuffer[_13];
  bd.Data = _14;
  _15 = netif->num;
  _16 = (int) _15;
  _17 = netif_cfg[_16];
  _18 = _17->num;
  Gmac_Ip_ProvideRxBuff (_18, 0, &bd);
  _19 = (int) i;
  rx_bufs[_19] = 0B;
  i.3_20 = i;
  i = i.3_20 + 1;

  <bb 7> :
  if (i <= 4)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _21 = netif->num;
  _22 = (int) _21;
  _23 = netif_cfg[_22];
  _24 = _23->num;
  Gmac_Ip_EnableController (_24);
  _25 = netif->num;
  _26 = (int) _25;
  _27 = netif_cfg[_26];
  _28 = _27->num;
  Gmac_Ip_SetMulticastHashFilter (_28, 1);
  _29 = netif->num;
  _30 = (int) _29;
  _31 = netif_cfg[_30];
  _32 = _31->has_IPv6;
  if (_32 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _33 = netif->flags;
  _34 = _33 | 64;
  netif->flags = _34;
  netif->mld_mac_filter = mld_gmac_filter;
  ip6_allnodes_ll.addr[0] = 767;
  ip6_allnodes_ll.addr[1] = 0;
  ip6_allnodes_ll.addr[2] = 0;
  ip6_allnodes_ll.addr[3] = 16777216;
  ip6_allnodes_ll.zone = 0;
  _35 = netif->mld_mac_filter;
  _35 (netif, &ip6_allnodes_ll, 1);
  ip6_allnodes_ll = {CLOBBER};

  <bb 10> :
  netif_set_link_up (netif);
  bd = {CLOBBER};
  return;

}


gmacif_input (struct netif * netif, uint8_t * data, uint16_t size)
{
  struct pbuf * p;
  err_t ret;
  err_t D.8560;

  <bb 2> :
  ret = -1;
  p = pbuf_alloc (0, size, 65);
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  ret = 0;
  p->payload = data;
  _1 = netif->input;
  _2 = _1 (p, netif);
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  pbuf_free (p);

  <bb 5> :
  D.8560 = ret;

  <bb 6> :
<L4>:
  return D.8560;

}


gmacif_low_level_output (struct netif * netif, struct pbuf * p)
{
  uint8_t i;
  uint8_t bufs_num;
  struct Gmac_Ip_BufferType bd_array[24];
  uint64_t retries;
  uint8_t pbuf_chain_type;
  struct Gmac_Ip_TxOptionsType options;
  struct Gmac_Ip_BufferType bd;
  err_t pbuf_status;
  Gmac_Ip_StatusType status;
  struct pbuf * q;
  err_t D.8553;

  <bb 2> :
  status = 1;
  pbuf_status = 0;
  pbuf_chain_type = 1;
  retries = 0;
  if (p == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  pbuf_ref (p);
  options.NoInt = 1;
  options.CrcPadIns = 0;
  options.ChecksumIns = 3;
  options.NoInt = 0;
  pbuf_status = -2;
  _1 = pbuf_clen (p);
  bufs_num = (uint8_t) _1;
  if (bufs_num > 24)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  q = p;
  i = 0;

  <bb 7> :
  _2 = (int) i;
  _3 = q->payload;
  bd_array[_2].Data = _3;
  _4 = (int) i;
  _5 = q->len;
  bd_array[_4].Length = _5;
  i.0_6 = i;
  i = i.0_6 + 1;
  q = q->next;
  if (q != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  goto <bb 17>; [INV]

  <bb 9> :
  i = 0;
  goto <bb 16>; [INV]

  <bb 10> :
  _7 = (int) i;
  _8 = tx_pbufs[_7];
  if (_8 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  __asm__ __volatile__(" cpsid i");
  _9 = netif->num;
  _10 = (int) _9;
  _11 = netif_cfg[_10];
  _12 = _11->num;
  _13 = (long unsigned int) bufs_num;
  status = Gmac_Ip_SendMultiBufferFrame (_12, 0, &bd_array, &options, _13);
  if (status != 2562)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _14 = (int) i;
  tx_pbufs[_14] = p;
  pbuf_status = 0;

  <bb 13> :
  __asm__ __volatile__(" cpsie i");
  if (pbuf_status == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  goto <bb 17>; [INV]

  <bb 15> :
  i.1_15 = i;
  i = i.1_15 + 1;

  <bb 16> :
  if (i <= 4)
    goto <bb 10>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  if (pbuf_status == -2)
    goto <bb 9>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  if (status != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  pbuf_free (p);
  _16 = (int) i;
  tx_pbufs[_16] = 0B;

  <bb 20> :
  D.8553 = pbuf_status;
  bd = {CLOBBER};
  options = {CLOBBER};
  bd_array = {CLOBBER};

  <bb 21> :
<L23>:
  return D.8553;

}


