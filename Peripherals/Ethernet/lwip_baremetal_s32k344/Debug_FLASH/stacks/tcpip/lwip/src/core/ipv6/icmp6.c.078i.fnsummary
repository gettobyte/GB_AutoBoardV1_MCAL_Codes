Symbol table:

pbuf_take_at/22 (pbuf_take_at) @06c74380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: icmp6_send_response_with_addrs_and_netif/9 
  Calls: 
lwip_htonl/21 (lwip_htonl) @06c742a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: icmp6_send_response_with_addrs_and_netif/9 
  Calls: 
ip6_route/20 (ip6_route) @06c740e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: icmp6_send_response_with_addrs/8 
  Calls: 
ip6_select_source_address/19 (ip6_select_source_address) @06c26460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: icmp6_send_response/7 
  Calls: 
ip6_output_if/18 (ip6_output_if) @06c269a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: icmp6_send_response_with_addrs_and_netif/9 icmp6_input/1 
  Calls: 
pbuf_copy/17 (pbuf_copy) @06c268c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: icmp6_input/1 
  Calls: 
pbuf_alloc/16 (pbuf_alloc) @06c267e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: icmp6_send_response_with_addrs_and_netif/9 icmp6_input/1 
  Calls: 
mld6_input/15 (mld6_input) @06c26700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: icmp6_input/1 
  Calls: 
nd6_input/14 (nd6_input) @06c26620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: icmp6_input/1 
  Calls: 
ip_data/13 (ip_data) @06c2b438
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: icmp6_input/1 (addr) icmp6_input/1 (addr) icmp6_send_response/7 (addr) icmp6_input/1 (addr) icmp6_input/1 (addr) icmp6_input/1 (read) icmp6_input/1 (addr) icmp6_send_response/7 (read) icmp6_param_problem/6 (read) 
  Availability: not_available
  Varpool flags:
ip6_chksum_pseudo/12 (ip6_chksum_pseudo) @06c26540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: icmp6_send_response_with_addrs_and_netif/9 icmp6_input/1 icmp6_input/1 
  Calls: 
pbuf_free/11 (pbuf_free) @06c26380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: icmp6_send_response_with_addrs_and_netif/9 icmp6_input/1 icmp6_input/1 icmp6_input/1 icmp6_input/1 icmp6_input/1 icmp6_input/1 icmp6_input/1 icmp6_input/1 
  Calls: 
lwip_stats/10 (lwip_stats) @06c2b360
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: icmp6_send_response_with_addrs_and_netif/9 (read) icmp6_send_response_with_addrs_and_netif/9 (write) icmp6_input/1 (read) icmp6_input/1 (write) icmp6_send_response/7 (read) icmp6_send_response/7 (write) icmp6_input/1 (read) icmp6_input/1 (write) icmp6_input/1 (read) icmp6_input/1 (write) icmp6_input/1 (read) icmp6_input/1 (write) icmp6_input/1 (read) icmp6_input/1 (write) icmp6_input/1 (read) icmp6_input/1 (write) icmp6_input/1 (read) icmp6_input/1 (write) icmp6_input/1 (read) icmp6_input/1 (write) icmp6_input/1 (read) icmp6_input/1 (write) icmp6_input/1 (read) icmp6_input/1 (write) icmp6_input/1 (read) icmp6_input/1 (write) icmp6_send_response_with_addrs_and_netif/9 (read) icmp6_send_response_with_addrs_and_netif/9 (write) icmp6_send_response_with_addrs/8 (read) icmp6_send_response_with_addrs/8 (write) 
  Availability: not_available
  Varpool flags:
icmp6_send_response_with_addrs_and_netif/9 (icmp6_send_response_with_addrs_and_netif) @06c1e8c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: lwip_stats/10 (read) lwip_stats/10 (write) lwip_stats/10 (read) lwip_stats/10 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: icmp6_send_response_with_addrs/8 icmp6_send_response/7 
  Calls: pbuf_free/11 ip6_output_if/18 ip6_chksum_pseudo/12 pbuf_take_at/22 lwip_htonl/21 pbuf_alloc/16 
icmp6_send_response_with_addrs/8 (icmp6_send_response_with_addrs) @06c1e380
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: lwip_stats/10 (read) lwip_stats/10 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: icmp6_time_exceeded_with_addrs/5 
  Calls: icmp6_send_response_with_addrs_and_netif/9 ip6_route/20 
icmp6_send_response/7 (icmp6_send_response) @06c1eee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: ip_data/13 (read) ip_data/13 (addr) lwip_stats/10 (read) lwip_stats/10 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: icmp6_param_problem/6 icmp6_time_exceeded/4 icmp6_packet_too_big/3 icmp6_dest_unreach/2 
  Calls: icmp6_send_response_with_addrs_and_netif/9 ip6_select_source_address/19 
icmp6_param_problem/6 (icmp6_param_problem) @06c1ea80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: ip_data/13 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: icmp6_send_response/7 
icmp6_time_exceeded_with_addrs/5 (icmp6_time_exceeded_with_addrs) @06c1e7e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: icmp6_send_response_with_addrs/8 
icmp6_time_exceeded/4 (icmp6_time_exceeded) @06c1e540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: icmp6_send_response/7 
icmp6_packet_too_big/3 (icmp6_packet_too_big) @06c1e2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: icmp6_send_response/7 
icmp6_dest_unreach/2 (icmp6_dest_unreach) @06c1e000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: icmp6_send_response/7 
icmp6_input/1 (icmp6_input) @06c13ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: lwip_stats/10 (read) lwip_stats/10 (write) lwip_stats/10 (read) lwip_stats/10 (write) lwip_stats/10 (read) lwip_stats/10 (write) ip_data/13 (addr) ip_data/13 (addr) lwip_stats/10 (read) lwip_stats/10 (write) lwip_stats/10 (read) lwip_stats/10 (write) ip_data/13 (read) lwip_stats/10 (read) lwip_stats/10 (write) lwip_stats/10 (read) lwip_stats/10 (write) lwip_stats/10 (read) lwip_stats/10 (write) ip_data/13 (addr) ip_data/13 (addr) lwip_stats/10 (read) lwip_stats/10 (write) ip_data/13 (addr) lwip_stats/10 (read) lwip_stats/10 (write) lwip_stats/10 (read) lwip_stats/10 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_free/11 pbuf_free/11 ip6_output_if/18 ip6_chksum_pseudo/12 pbuf_free/11 pbuf_free/11 pbuf_copy/17 pbuf_free/11 pbuf_alloc/16 pbuf_free/11 mld6_input/15 nd6_input/14 pbuf_free/11 ip6_chksum_pseudo/12 pbuf_free/11 
icmp6_send_response_with_addrs_and_netif (struct pbuf * p, u8_t code, u32_t data, u8_t type, const struct ip6_addr_t * reply_src, const struct ip6_addr_t * reply_dest, struct netif * netif)
{
  err_t res;
  u16_t len;
  u16_t offset;
  u16_t datalen;
  struct icmp6_hdr * icmp6hdr;
  struct pbuf * q;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  long unsigned int _6;
  short unsigned int _7;
  void * _8;
  short unsigned int _9;
  short unsigned int _10;
  short unsigned int _11;
  short unsigned int _12;

  <bb 2> :
  _1 = p_21(D)->tot_len;
  datalen_22 = MIN_EXPR <_1, 1232>;
  _2 = datalen_22 + 8;
  q_24 = pbuf_alloc (54, _2, 640);
  if (q_24 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _3 = lwip_stats.icmp6.memerr;
  _4 = _3 + 1;
  lwip_stats.icmp6.memerr = _4;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 4> :
  _5 = q_24->len;
  if (_5 <= 7)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  icmp6hdr_25 = q_24->payload;
  icmp6hdr_25->type = type_26(D);
  icmp6hdr_25->code = code_28(D);
  _6 = lwip_htonl (data_30(D));
  icmp6hdr_25->data = _6;
  offset_33 = 8;
  goto <bb 10>; [INV]

  <bb 7> :
  _7 = p_13->len;
  len_34 = MIN_EXPR <datalen_14, _7>;
  _8 = p_13->payload;
  res_36 = pbuf_take_at (q_24, _8, len_34, offset_15);
  if (res_36 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  goto <bb 12>; [INV]

  <bb 9> :
  datalen_37 = datalen_14 - len_34;
  offset_38 = offset_15 + len_34;
  p_39 = p_13->next;

  <bb 10> :
  # p_13 = PHI <p_21(D)(6), p_39(9)>
  # datalen_14 = PHI <datalen_22(6), datalen_37(9)>
  # offset_15 = PHI <offset_33(6), offset_38(9)>
  if (p_13 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  if (datalen_14 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  icmp6hdr_25->chksum = 0;
  _9 = q_24->tot_len;
  _10 = ip6_chksum_pseudo (q_24, 58, _9, reply_src_41(D), reply_dest_42(D));
  icmp6hdr_25->chksum = _10;
  _11 = lwip_stats.icmp6.xmit;
  _12 = _11 + 1;
  lwip_stats.icmp6.xmit = _12;
  ip6_output_if (q_24, reply_src_41(D), reply_dest_42(D), 255, 0, 58, netif_46(D));
  pbuf_free (q_24);

  <bb 13> :
<L11>:
  return;

}


icmp6_send_response_with_addrs (struct pbuf * p, u8_t code, u32_t data, u8_t type, const struct ip6_addr_t * src_addr, const struct ip6_addr_t * dest_addr)
{
  struct netif * netif;
  const struct ip6_addr * reply_dest;
  const struct ip6_addr * reply_src;
  short unsigned int _1;
  short unsigned int _2;

  <bb 2> :
  if (src_addr_6(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  if (dest_addr_8(D) == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  reply_dest_9 = src_addr_6(D);
  reply_src_10 = dest_addr_8(D);
  netif_12 = ip6_route (reply_src_10, reply_dest_9);
  if (netif_12 == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _1 = lwip_stats.icmp6.rterr;
  _2 = _1 + 1;
  lwip_stats.icmp6.rterr = _2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  icmp6_send_response_with_addrs_and_netif (p_13(D), code_14(D), data_15(D), type_16(D), reply_src_10, reply_dest_9, netif_12);

  <bb 9> :
<L8>:
  return;

}


icmp6_send_response (struct pbuf * p, u8_t code, u32_t data, u8_t type)
{
  struct netif * netif;
  const struct ip6_addr * reply_dest;
  const struct ip6_addr * reply_src;
  const struct ip_addr_t * _1;
  short unsigned int _2;
  short unsigned int _3;

  <bb 2> :
  netif_7 = ip_data.current_netif;
  if (netif_7 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  reply_dest_8 = &ip_data.current_iphdr_src.u_addr.ip6;
  _1 = ip6_select_source_address (netif_7, reply_dest_8);
  reply_src_10 = &_1->u_addr.ip6;
  if (reply_src_10 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _2 = lwip_stats.icmp6.rterr;
  _3 = _2 + 1;
  lwip_stats.icmp6.rterr = _3;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  icmp6_send_response_with_addrs_and_netif (p_11(D), code_12(D), data_13(D), type_14(D), reply_src_10, reply_dest_8, netif_7);

  <bb 7> :
<L5>:
  return;

}


icmp6_param_problem (struct pbuf * p, icmp6_pp_code c, const void * pointer)
{
  u32_t pointer_u32;
  struct ip6_hdr * _1;
  int _2;
  unsigned char _3;

  <bb 2> :
  _1 = ip_data.current_ip6_header;
  _2 = pointer_5(D) - _1;
  pointer_u32_6 = (u32_t) _2;
  _3 = (unsigned char) c_7(D);
  icmp6_send_response (p_8(D), _3, pointer_u32_6, 4);
  return;

}


icmp6_time_exceeded_with_addrs (struct pbuf * p, icmp6_te_code c, const struct ip6_addr_t * src_addr, const struct ip6_addr_t * dest_addr)
{
  unsigned char _1;

  <bb 2> :
  _1 = (unsigned char) c_2(D);
  icmp6_send_response_with_addrs (p_4(D), _1, 0, 3, src_addr_5(D), dest_addr_6(D));
  return;

}


icmp6_time_exceeded (struct pbuf * p, icmp6_te_code c)
{
  unsigned char _1;

  <bb 2> :
  _1 = (unsigned char) c_2(D);
  icmp6_send_response (p_4(D), _1, 0, 3);
  return;

}


icmp6_packet_too_big (struct pbuf * p, u32_t mtu)
{
  <bb 2> :
  icmp6_send_response (p_2(D), 0, mtu_3(D), 2);
  return;

}


icmp6_dest_unreach (struct pbuf * p, icmp6_dur_code c)
{
  unsigned char _1;

  <bb 2> :
  _1 = (unsigned char) c_2(D);
  icmp6_send_response (p_4(D), _1, 0, 1);
  return;

}


icmp6_input (struct pbuf * p, struct netif * inp)
{
  const struct ip6_addr_t * reply_src;
  struct pbuf * r;
  struct icmp6_hdr * icmp6hdr;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  short unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  short unsigned int _9;
  short unsigned int _10;
  short unsigned int _11;
  short unsigned int _12;
  short unsigned int _13;
  unsigned char _14;
  int _15;
  long unsigned int _16;
  long unsigned int _17;
  short unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  short unsigned int _21;
  short unsigned int _22;
  signed char _23;
  short unsigned int _24;
  short unsigned int _25;
  void * _26;
  void * _27;
  short unsigned int _28;
  void * _29;
  short unsigned int _30;
  short unsigned int _31;
  short unsigned int _32;
  short unsigned int _33;
  short unsigned int _34;
  short unsigned int _35;
  short unsigned int _36;

  <bb 2> :
  _1 = lwip_stats.icmp6.recv;
  _2 = _1 + 1;
  lwip_stats.icmp6.recv = _2;
  _3 = p_41(D)->len;
  if (_3 <= 7)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  pbuf_free (p_41(D));
  _4 = lwip_stats.icmp6.lenerr;
  _5 = _4 + 1;
  lwip_stats.icmp6.lenerr = _5;
  _6 = lwip_stats.icmp6.drop;
  _7 = _6 + 1;
  lwip_stats.icmp6.drop = _7;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 4> :
  icmp6hdr_42 = p_41(D)->payload;
  _8 = p_41(D)->tot_len;
  _9 = ip6_chksum_pseudo (p_41(D), 58, _8, &ip_data.current_iphdr_src.u_addr.ip6, &ip_data.current_iphdr_dest.u_addr.ip6);
  if (_9 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  pbuf_free (p_41(D));
  _10 = lwip_stats.icmp6.chkerr;
  _11 = _10 + 1;
  lwip_stats.icmp6.chkerr = _11;
  _12 = lwip_stats.icmp6.drop;
  _13 = _12 + 1;
  lwip_stats.icmp6.drop = _13;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 6> :
  _14 = icmp6hdr_42->type;
  _15 = (int) _14;
  switch (_15) <default: <L20> [INV], case 2: <L4> [INV], case 128: <L13> [INV], case 130 ... 132: <L10> [INV], case 133: <L9> [INV], case 134 ... 137: <L4> [INV]>

  <bb 7> :
<L4>:
  nd6_input (p_41(D), inp_44(D));
  goto <bb 19>; [INV]

  <bb 8> :
<L9>:
  goto <bb 18>; [INV]

  <bb 9> :
<L10>:
  mld6_input (p_41(D), inp_44(D));
  goto <bb 19>; [INV]

  <bb 10> :
<L13>:
  _16 = ip_data.current_iphdr_dest.u_addr.ip6.addr[0];
  _17 = _16 & 255;
  if (_17 == 255)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  pbuf_free (p_41(D));
  _18 = lwip_stats.icmp6.drop;
  _19 = _18 + 1;
  lwip_stats.icmp6.drop = _19;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 12> :
  _20 = p_41(D)->tot_len;
  r_47 = pbuf_alloc (54, _20, 640);
  if (r_47 == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  pbuf_free (p_41(D));
  _21 = lwip_stats.icmp6.memerr;
  _22 = _21 + 1;
  lwip_stats.icmp6.memerr = _22;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 14> :
  _23 = pbuf_copy (r_47, p_41(D));
  if (_23 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  pbuf_free (p_41(D));
  pbuf_free (r_47);
  _24 = lwip_stats.icmp6.err;
  _25 = _24 + 1;
  lwip_stats.icmp6.err = _25;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 19>; [INV]

  <bb 16> :
  reply_src_49 = &ip_data.current_iphdr_dest.u_addr.ip6;
  _26 = r_47->payload;
  MEM[(struct icmp6_echo_hdr *)_26].type = 129;
  _27 = r_47->payload;
  MEM[(struct icmp6_echo_hdr *)_27].chksum = 0;
  _28 = r_47->tot_len;
  _29 = r_47->payload;
  _30 = ip6_chksum_pseudo (r_47, 58, _28, reply_src_49, &ip_data.current_iphdr_src.u_addr.ip6);
  MEM[(struct icmp6_echo_hdr *)_29].chksum = _30;
  _31 = lwip_stats.icmp6.xmit;
  _32 = _31 + 1;
  lwip_stats.icmp6.xmit = _32;
  ip6_output_if (r_47, reply_src_49, &ip_data.current_iphdr_src.u_addr.ip6, 255, 0, 58, inp_44(D));
  pbuf_free (r_47);
  goto <bb 18>; [INV]

  <bb 17> :
<L20>:
  _33 = lwip_stats.icmp6.proterr;
  _34 = _33 + 1;
  lwip_stats.icmp6.proterr = _34;
  _35 = lwip_stats.icmp6.drop;
  _36 = _35 + 1;
  lwip_stats.icmp6.drop = _36;

  <bb 18> :
  pbuf_free (p_41(D));

  <bb 19> :
<L22>:
  return;

}


