fs_bytes_left (struct fs_file * file)
{
  int D.6587;
  int _1;
  int _2;
  int _5;

  <bb 2> :
  _1 = file_4(D)->len;
  _2 = file_4(D)->index;
  _5 = _1 - _2;

  <bb 3> :
<L0>:
  return _5;

}


fs_close (struct fs_file * file)
{
  <bb 2> :
  return;

}


fs_open (struct fs_file * file, const char * name)
{
  const struct fsdata_file * f;
  err_t D.6583;
  const unsigned char * _1;
  int _2;
  const unsigned char * _3;
  int _4;
  int _5;
  unsigned char _6;
  err_t _8;
  err_t _13;
  err_t _21;
  err_t _22;

  <bb 2> :
  if (file_10(D) == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (name_11(D) == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _22 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 5> :
  f_12 = &file__index_html;
  goto <bb 9>; [INV]

  <bb 6> :
  _1 = f_7->name;
  _2 = strcmp (name_11(D), _1);
  if (_2 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _3 = f_7->data;
  file_10(D)->data = _3;
  _4 = f_7->len;
  file_10(D)->len = _4;
  _5 = f_7->len;
  file_10(D)->index = _5;
  file_10(D)->pextension = 0B;
  _6 = f_7->flags;
  file_10(D)->flags = _6;
  _21 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  f_15 = f_7->next;

  <bb 9> :
  # f_7 = PHI <f_12(5), f_15(8)>
  if (f_7 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _13 = -6;

  <bb 11> :
  # _8 = PHI <_22(4), _21(7), _13(10)>
<L8>:
  return _8;

}


