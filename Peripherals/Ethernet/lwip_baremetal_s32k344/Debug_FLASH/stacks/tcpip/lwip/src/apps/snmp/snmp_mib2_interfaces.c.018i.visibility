
Marking local functions:


Marking externally visible functions:


Marking externally visible variables: snmp_mib2_interface_root/16


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

snmp_table_get_next_instance/28 (snmp_table_get_next_instance) @061099a0
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: interfaces_Table/14 (addr) 
  Availability: not_available
  Function flags:
  Called by: 
  Calls: 
snmp_table_get_instance/27 (snmp_table_get_instance) @061098c0
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: interfaces_Table/14 (addr) 
  Availability: not_available
  Function flags:
  Called by: 
  Calls: 
snmp_scalar_get_next_instance/26 (snmp_scalar_get_next_instance) @061097e0
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: interfaces_Number/12 (addr) 
  Availability: not_available
  Function flags:
  Called by: 
  Calls: 
snmp_scalar_get_instance/25 (snmp_scalar_get_instance) @06109700
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: interfaces_Number/12 (addr) 
  Availability: not_available
  Function flags:
  Called by: 
  Calls: 
snmp_zero_dot_zero/24 (snmp_zero_dot_zero) @0610dd80
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: interfaces_Table_get_value/11 (read) interfaces_Table_get_value/11 (read) 
  Availability: not_available
  Varpool flags: read-only
memcpy/23 (memcpy) @06109620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: interfaces_Table_get_value/11 interfaces_Table_get_value/11 interfaces_Table_get_value/11 
  Calls: 
snmp_oid_assign/22 (snmp_oid_assign) @061092a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: interfaces_Table_get_next_cell_instance/10 
  Calls: 
snmp_next_oid_check/21 (snmp_next_oid_check) @061091c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: interfaces_Table_get_next_cell_instance/10 
  Calls: 
snmp_next_oid_init/20 (snmp_next_oid_init) @061090e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: interfaces_Table_get_next_cell_instance/10 
  Calls: 
netif_to_num/19 (netif_to_num) @06104ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: interfaces_Table_get_value/11 interfaces_Table_get_next_cell_instance/10 interfaces_Table_get_cell_instance/9 
  Calls: 
snmp_oid_in_range/18 (snmp_oid_in_range) @06104e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: interfaces_Table_get_cell_instance/9 
  Calls: 
netif_list/17 (netif_list) @060ec828
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: interfaces_get_value/1 (read) interfaces_Table_get_cell_instance/9 (read) interfaces_Table_get_next_cell_instance/10 (read) 
  Availability: not_available
  Varpool flags:
snmp_mib2_interface_root/16 (snmp_mib2_interface_root) @060ec3a8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: interface_nodes/15 (addr) 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
interface_nodes/15 (interface_nodes) @060ec318
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: interfaces_Number/12 (addr) interfaces_Table/14 (addr) 
  Referring: snmp_mib2_interface_root/16 (addr) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
interfaces_Table/14 (interfaces_Table) @060ec288
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: snmp_table_get_instance/27 (addr) snmp_table_get_next_instance/28 (addr) interfaces_Table_columns/13 (addr) interfaces_Table_get_cell_instance/9 (addr) interfaces_Table_get_next_cell_instance/10 (addr) interfaces_Table_get_value/11 (addr) 
  Referring: interface_nodes/15 (addr) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
interfaces_Table_columns/13 (interfaces_Table_columns) @060ec1b0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: interfaces_Table/14 (addr) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
interfaces_Number/12 (interfaces_Number) @060ec0d8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: snmp_scalar_get_instance/25 (addr) snmp_scalar_get_next_instance/26 (addr) interfaces_get_value/1 (addr) 
  Referring: interface_nodes/15 (addr) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
interfaces_Table_get_value/11 (interfaces_Table_get_value) @060e3700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: snmp_zero_dot_zero/24 (read) snmp_zero_dot_zero/24 (read) 
  Referring: interfaces_Table/14 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: memcpy/23 memcpy/23 memcpy/23 netif_to_num/19 
interfaces_Table_get_next_cell_instance/10 (interfaces_Table_get_next_cell_instance) @060e30e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: netif_list/17 (read) 
  Referring: interfaces_Table/14 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: snmp_oid_assign/22 snmp_next_oid_check/21 netif_to_num/19 snmp_next_oid_init/20 
interfaces_Table_get_cell_instance/9 (interfaces_Table_get_cell_instance) @060b8a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: interfaces_Table_oid_ranges/2 (addr) netif_list/17 (read) 
  Referring: interfaces_Table/14 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: netif_to_num/19 snmp_oid_in_range/18 
iftable_ifAdminStatus_down/8 (iftable_ifAdminStatus_down) @060b2b40
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
iftable_ifAdminStatus_lowerLayerDown/7 (iftable_ifAdminStatus_lowerLayerDown) @060b2ab0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
iftable_ifAdminStatus_up/6 (iftable_ifAdminStatus_up) @060b2a20
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
iftable_ifOperStatus_down/5 (iftable_ifOperStatus_down) @060b2990
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
iftable_ifOperStatus_up/4 (iftable_ifOperStatus_up) @060b2900
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
iftable_ifOutQLen/3 (iftable_ifOutQLen) @060b2870
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
interfaces_Table_oid_ranges/2 (interfaces_Table_oid_ranges) @060b27e0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: interfaces_Table_get_cell_instance/9 (addr) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
interfaces_get_value/1 (interfaces_get_value) @060afb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: netif_list/17 (read) 
  Referring: interfaces_Number/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
interfaces_Table_get_value (struct snmp_node_instance * instance, void * value)
{
  u16_t value_len;
  s32_t * value_s32;
  u32_t * value_u32;
  struct netif * netif;
  s16_t D.7649;

  <bb 2> :
  netif = instance->reference.ptr;
  value_u32 = value;
  value_s32 = value;
  _1 = instance->instance_oid.id[1];
  switch (_1) <default: <L31> [INV], case 1: <L0> [INV], case 2: <L1> [INV], case 3: <L2> [INV], case 4: <L3> [INV], case 5: <L4> [INV], case 6: <L5> [INV], case 7: <L6> [INV], case 8: <L10> [INV], case 9: <L17> [INV], case 10: <L18> [INV], case 11: <L19> [INV], case 12: <L20> [INV], case 13: <L21> [INV], case 14: <L22> [INV], case 15: <L23> [INV], case 16: <L24> [INV], case 17: <L25> [INV], case 18: <L26> [INV], case 19: <L27> [INV], case 20: <L28> [INV], case 21: <L29> [INV], case 22: <L30> [INV]>

  <bb 3> :
<L0>:
  _2 = netif_to_num (netif);
  _3 = (long int) _2;
  *value_s32 = _3;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 4> :
<L1>:
  value_len = 2;
  _4 = &netif->name;
  _5 = (unsigned int) value_len;
  memcpy (value, _4, _5);
  goto <bb 34>; [INV]

  <bb 5> :
<L2>:
  _6 = netif->link_type;
  _7 = (long int) _6;
  *value_s32 = _7;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 6> :
<L3>:
  _8 = netif->mtu;
  _9 = (long int) _8;
  *value_s32 = _9;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 7> :
<L4>:
  _10 = netif->link_speed;
  *value_u32 = _10;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 8> :
<L5>:
  value_len = 6;
  _11 = &netif->hwaddr;
  _12 = (unsigned int) value_len;
  memcpy (value, _11, _12);
  goto <bb 34>; [INV]

  <bb 9> :
<L6>:
  _13 = netif->flags;
  _14 = (_Bool) _13;
  if (_14 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftable_ifOperStatus_up.0_15 = 1;
  _16 = (long int) iftable_ifOperStatus_up.0_15;
  *value_s32 = _16;
  goto <bb 12>; [INV]

  <bb 11> :
  iftable_ifOperStatus_down.1_17 = 2;
  _18 = (long int) iftable_ifOperStatus_down.1_17;
  *value_s32 = _18;

  <bb 12> :
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 13> :
<L10>:
  _19 = netif->flags;
  _20 = (_Bool) _19;
  if (_20 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  _21 = netif->flags;
  _22 = (unsigned int) _21;
  _23 = _22 >> 2;
  _24 = (_Bool) _23;
  if (_24 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftable_ifAdminStatus_up.2_25 = 1;
  _26 = (long int) iftable_ifAdminStatus_up.2_25;
  *value_s32 = _26;
  goto <bb 18>; [INV]

  <bb 16> :
  iftable_ifAdminStatus_lowerLayerDown.3_27 = 7;
  _28 = (long int) iftable_ifAdminStatus_lowerLayerDown.3_27;
  *value_s32 = _28;
  goto <bb 18>; [INV]

  <bb 17> :
  iftable_ifAdminStatus_down.4_29 = 2;
  _30 = (long int) iftable_ifAdminStatus_down.4_29;
  *value_s32 = _30;

  <bb 18> :
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 19> :
<L17>:
  _31 = netif->ts;
  *value_u32 = _31;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 20> :
<L18>:
  _32 = netif->mib2_counters.ifinoctets;
  *value_u32 = _32;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 21> :
<L19>:
  _33 = netif->mib2_counters.ifinucastpkts;
  *value_u32 = _33;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 22> :
<L20>:
  _34 = netif->mib2_counters.ifinnucastpkts;
  *value_u32 = _34;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 23> :
<L21>:
  _35 = netif->mib2_counters.ifindiscards;
  *value_u32 = _35;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 24> :
<L22>:
  _36 = netif->mib2_counters.ifinerrors;
  *value_u32 = _36;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 25> :
<L23>:
  _37 = netif->mib2_counters.ifinunknownprotos;
  *value_u32 = _37;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 26> :
<L24>:
  _38 = netif->mib2_counters.ifoutoctets;
  *value_u32 = _38;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 27> :
<L25>:
  _39 = netif->mib2_counters.ifoutucastpkts;
  *value_u32 = _39;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 28> :
<L26>:
  _40 = netif->mib2_counters.ifoutnucastpkts;
  *value_u32 = _40;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 29> :
<L27>:
  _41 = netif->mib2_counters.ifoutdiscards;
  *value_u32 = _41;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 30> :
<L28>:
  _42 = netif->mib2_counters.ifouterrors;
  *value_u32 = _42;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 31> :
<L29>:
  iftable_ifOutQLen.5_43 = 0;
  _44 = (long unsigned int) iftable_ifOutQLen.5_43;
  *value_u32 = _44;
  value_len = 4;
  goto <bb 34>; [INV]

  <bb 32> :
<L30>:
  _45 = snmp_zero_dot_zero.len;
  _46 = (short unsigned int) _45;
  value_len = _46 * 4;
  _47 = snmp_zero_dot_zero.id;
  _48 = (unsigned int) value_len;
  memcpy (value, _47, _48);
  goto <bb 34>; [INV]

  <bb 33> :
<L31>:
  D.7649 = 0;
  goto <bb 35>; [INV]

  <bb 34> :
  D.7649 = (s16_t) value_len;

  <bb 35> :
<L33>:
  return D.7649;

}


interfaces_Table_get_next_cell_instance (const u32_t * column, struct snmp_obj_id * row_oid, struct snmp_node_instance * cell_instance)
{
  u32_t test_oid[1];
  u32_t result_temp[1];
  struct snmp_next_oid_state state;
  struct netif * netif;
  snmp_err_t D.7637;

  <bb 2> :
  _1 = &row_oid->id;
  _2 = row_oid->len;
  snmp_next_oid_init (&state, _1, _2, &result_temp, 1);
  netif = netif_list;
  goto <bb 4>; [INV]

  <bb 3> :
  _3 = netif_to_num (netif);
  _4 = (long unsigned int) _3;
  test_oid[0] = _4;
  snmp_next_oid_check (&state, &test_oid, 1, netif);
  test_oid = {CLOBBER};
  netif = netif->next;

  <bb 4> :
  if (netif != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _5 = state.status;
  if (_5 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _6 = state.next_oid;
  _7 = state.next_oid_len;
  snmp_oid_assign (row_oid, _6, _7);
  _8 = state.reference;
  cell_instance->reference.ptr = _8;
  D.7637 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  D.7637 = 241;

  <bb 8> :
  state = {CLOBBER};
  result_temp = {CLOBBER};

  <bb 9> :
<L6>:
  return D.7637;

}


interfaces_Table_get_cell_instance (const u32_t * column, const u32_t * row_oid, u8_t row_oid_len, struct snmp_node_instance * cell_instance)
{
  struct netif * netif;
  u32_t ifIndex;
  snmp_err_t D.7631;

  <bb 2> :
  _1 = snmp_oid_in_range (row_oid, row_oid_len, &interfaces_Table_oid_ranges, 1);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7631 = 241;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 4> :
  ifIndex = *row_oid;
  netif = netif_list;
  goto <bb 8>; [INV]

  <bb 5> :
  _2 = netif_to_num (netif);
  _3 = (long unsigned int) _2;
  if (ifIndex == _3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  cell_instance->reference.ptr = netif;
  D.7631 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 7> :
  netif = netif->next;

  <bb 8> :
  if (netif != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  D.7631 = 241;

  <bb 10> :
<L7>:
  return D.7631;

}


interfaces_get_value (struct snmp_node_instance * instance, void * value)
{
  struct netif * netif;
  s32_t num_netifs;
  s32_t * sint_ptr;
  s16_t D.7627;

  <bb 2> :
  _1 = instance->node;
  _2 = _1->oid;
  if (_2 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  sint_ptr = value;
  num_netifs = 0;
  netif = netif_list;
  goto <bb 5>; [INV]

  <bb 4> :
  num_netifs = num_netifs + 1;
  netif = netif->next;

  <bb 5> :
  if (netif != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  *sint_ptr = num_netifs;
  D.7627 = 4;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  D.7627 = 0;

  <bb 8> :
<L5>:
  return D.7627;

}


