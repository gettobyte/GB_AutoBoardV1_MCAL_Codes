system_set_value (const struct snmp_scalar_array_node_def * node, u16_t len, void * value)
{
  u16_t * var_wr_len;
  u8_t * var_wr;
  snmp_err_t D.7194;
  long unsigned int _1;
  unsigned int _2;
  sizetype _3;
  u8_t * _4;
  snmp_err_t _7;
  snmp_err_t _25;
  snmp_err_t _27;

  <bb 2> :
  var_wr_11 = 0B;
  _1 = node_13(D)->oid;
  switch (_1) <default: <L3> [INV], case 4: <L0> [INV], case 5: <L1> [INV], case 6: <L2> [INV]>

  <bb 3> :
<L0>:
  var_wr_18 = syscontact_wr;
  var_wr_len_19 = syscontact_wr_len;
  goto <bb 7>; [INV]

  <bb 4> :
<L1>:
  var_wr_16 = sysname_wr;
  var_wr_len_17 = sysname_wr_len;
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  var_wr_14 = syslocation_wr;
  var_wr_len_15 = syslocation_wr_len;
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  _27 = 5;
  goto <bb 13>; [INV]

  <bb 7> :
  # var_wr_5 = PHI <var_wr_18(3), var_wr_16(4), var_wr_14(5)>
  # var_wr_len_6 = PHI <var_wr_len_19(3), var_wr_len_17(4), var_wr_len_15(5)>
  if (var_wr_5 == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 8>; [INV]

  <bb 9> :
  _2 = (unsigned int) len_20(D);
  memcpy (var_wr_5, value_21(D), _2);
  if (var_wr_len_6 == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _3 = (sizetype) len_20(D);
  _4 = var_wr_5 + _3;
  *_4 = 0;
  goto <bb 12>; [INV]

  <bb 11> :
  *var_wr_len_6 = len_20(D);

  <bb 12> :
  _25 = 0;

  <bb 13> :
  # _7 = PHI <_27(6), _25(12)>
<L11>:
  return _7;

}


system_set_test (const struct snmp_scalar_array_node_def * node, u16_t len, void * value)
{
  const u16_t * var_wr_len;
  const u16_t * var_bufsize;
  snmp_err_t ret;
  snmp_err_t D.7182;
  long unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  snmp_err_t _8;
  snmp_err_t _23;
  snmp_err_t _24;

  <bb 2> :
  ret_9 = 10;
  var_bufsize_10 = 0B;
  _1 = node_12(D)->oid;
  switch (_1) <default: <L3> [INV], case 4: <L0> [INV], case 5: <L1> [INV], case 6: <L2> [INV]>

  <bb 3> :
<L0>:
  var_bufsize_17 = &syscontact_bufsize;
  var_wr_len_18 = syscontact_wr_len;
  goto <bb 7>; [INV]

  <bb 4> :
<L1>:
  var_bufsize_15 = &sysname_bufsize;
  var_wr_len_16 = sysname_wr_len;
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  var_bufsize_13 = &syslocation_bufsize;
  var_wr_len_14 = syslocation_wr_len;
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  _24 = ret_9;
  goto <bb 15>; [INV]

  <bb 7> :
  # var_bufsize_6 = PHI <var_bufsize_17(3), var_bufsize_15(4), var_bufsize_13(5)>
  # var_wr_len_7 = PHI <var_wr_len_18(3), var_wr_len_16(4), var_wr_len_14(5)>
  _2 = *var_bufsize_6;
  if (_2 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 8> :
  if (var_wr_len_7 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _3 = *var_bufsize_6;
  if (len_20(D) < _3)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  ret_22 = 0;
  goto <bb 14>; [INV]

  <bb 11> :
  _4 = *var_bufsize_6;
  if (len_20(D) <= _4)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  ret_21 = 0;
  goto <bb 14>; [INV]

  <bb 13> :
  ret_19 = 17;

  <bb 14> :
  # ret_5 = PHI <ret_9(11), ret_19(13), ret_22(10), ret_9(9), ret_21(12)>
  _23 = ret_5;

  <bb 15> :
  # _8 = PHI <_24(6), _23(14)>
<L15>:
  return _8;

}


system_get_value (const struct snmp_scalar_array_node_def * node, void * value)
{
  const struct snmp_obj_id * dev_enterprise_oid;
  u16_t result;
  const s16_t * var_len;
  const u8_t * var;
  s16_t D.7175;
  long unsigned int _1;
  const u32_t[50] * _2;
  unsigned char _3;
  unsigned int _4;
  unsigned int _5;
  unsigned char _6;
  unsigned short _7;
  unsigned short _8;
  long unsigned int _9;
  long unsigned int _10;
  unsigned int _11;
  short int _12;
  unsigned int _13;
  s16_t _17;
  s16_t _25;
  s16_t _34;
  s16_t _38;
  s16_t _44;
  s16_t _46;

  <bb 2> :
  var_20 = 0B;
  _1 = node_22(D)->oid;
  switch (_1) <default: <L7> [INV], case 1: <L0> [INV], case 2: <L1> [INV], case 3: <L2> [INV], case 4: <L3> [INV], case 5: <L4> [INV], case 6: <L5> [INV], case 7: <L6> [INV]>

  <bb 3> :
<L0>:
  var_39 = sysdescr;
  var_len_40 = sysdescr_len;
  goto <bb 11>; [INV]

  <bb 4> :
<L1>:
  dev_enterprise_oid_36 = snmp_get_device_enterprise_oid ();
  _2 = &dev_enterprise_oid_36->id;
  _3 = dev_enterprise_oid_36->len;
  _4 = (unsigned int) _3;
  _5 = _4 * 4;
  memcpy (value_23(D), _2, _5);
  _6 = dev_enterprise_oid_36->len;
  _7 = (unsigned short) _6;
  _8 = _7 * 4;
  _38 = (s16_t) _8;
  goto <bb 17>; [INV]

  <bb 5> :
<L2>:
  _9 = sys_now ();
  _10 = _9 / 10;
  MEM[(u32_t *)value_23(D)] = _10;
  _34 = 4;
  goto <bb 17>; [INV]

  <bb 6> :
<L3>:
  var_30 = syscontact;
  var_len_31 = syscontact_len;
  goto <bb 11>; [INV]

  <bb 7> :
<L4>:
  var_28 = sysname;
  var_len_29 = sysname_len;
  goto <bb 11>; [INV]

  <bb 8> :
<L5>:
  var_26 = syslocation;
  var_len_27 = syslocation_len;
  goto <bb 11>; [INV]

  <bb 9> :
<L6>:
  MEM[(s32_t *)value_23(D)] = 72;
  _25 = 4;
  goto <bb 17>; [INV]

  <bb 10> :
<L7>:
  _46 = 0;
  goto <bb 17>; [INV]

  <bb 11> :
  # var_14 = PHI <var_39(3), var_30(6), var_28(7), var_26(8)>
  # var_len_15 = PHI <var_len_40(3), var_len_31(6), var_len_29(7), var_len_27(8)>
  if (value_23(D) == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 12>; [INV]

  <bb 13> :
  if (var_len_15 == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _11 = strlen (var_14);
  result_42 = (u16_t) _11;
  goto <bb 16>; [INV]

  <bb 15> :
  _12 = *var_len_15;
  result_41 = (u16_t) _12;

  <bb 16> :
  # result_16 = PHI <result_42(14), result_41(15)>
  _13 = (unsigned int) result_16;
  memcpy (value_23(D), var_14, _13);
  _44 = (s16_t) result_16;

  <bb 17> :
  # _17 = PHI <_38(4), _34(5), _25(9), _46(10), _44(16)>
<L15>:
  return _17;

}


snmp_mib2_set_syslocation_readonly (const u8_t * ocstr, const u16_t * ocstrlen)
{
  <bb 2> :
  if (ocstr_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  syslocation = ocstr_2(D);
  syslocation_len = ocstrlen_5(D);
  syslocation_wr = 0B;
  syslocation_wr_len = 0B;
  syslocation_bufsize = 0;

  <bb 4> :
  return;

}


snmp_mib2_set_syslocation (u8_t * ocstr, u16_t * ocstrlen, u16_t bufsize)
{
  <bb 2> :
  if (ocstr_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  syslocation = ocstr_2(D);
  syslocation_wr = ocstr_2(D);
  syslocation_len = ocstrlen_6(D);
  syslocation_wr_len = ocstrlen_6(D);
  syslocation_bufsize = bufsize_9(D);

  <bb 4> :
  return;

}


snmp_mib2_set_sysname_readonly (const u8_t * ocstr, const u16_t * ocstrlen)
{
  <bb 2> :
  if (ocstr_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  sysname = ocstr_2(D);
  sysname_len = ocstrlen_5(D);
  sysname_wr = 0B;
  sysname_wr_len = 0B;
  sysname_bufsize = 0;

  <bb 4> :
  return;

}


snmp_mib2_set_sysname (u8_t * ocstr, u16_t * ocstrlen, u16_t bufsize)
{
  <bb 2> :
  if (ocstr_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  sysname = ocstr_2(D);
  sysname_wr = ocstr_2(D);
  sysname_len = ocstrlen_6(D);
  sysname_wr_len = ocstrlen_6(D);
  sysname_bufsize = bufsize_9(D);

  <bb 4> :
  return;

}


snmp_mib2_set_syscontact_readonly (const u8_t * ocstr, const u16_t * ocstrlen)
{
  <bb 2> :
  if (ocstr_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  syscontact = ocstr_2(D);
  syscontact_len = ocstrlen_5(D);
  syscontact_wr = 0B;
  syscontact_wr_len = 0B;
  syscontact_bufsize = 0;

  <bb 4> :
  return;

}


snmp_mib2_set_syscontact (u8_t * ocstr, u16_t * ocstrlen, u16_t bufsize)
{
  <bb 2> :
  if (ocstr_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  syscontact = ocstr_2(D);
  syscontact_wr = ocstr_2(D);
  syscontact_len = ocstrlen_6(D);
  syscontact_wr_len = ocstrlen_6(D);
  syscontact_bufsize = bufsize_9(D);

  <bb 4> :
  return;

}


snmp_mib2_set_sysdescr (const u8_t * str, const u16_t * len)
{
  <bb 2> :
  if (str_2(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  sysdescr = str_2(D);
  sysdescr_len = len_5(D);

  <bb 4> :
  return;

}


