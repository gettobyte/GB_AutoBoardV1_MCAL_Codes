ethernet_output (struct netif * netif, struct pbuf * p, const struct eth_addr * src, const struct eth_addr * dst, u16_t eth_type)
{
  u16_t eth_type_be;
  struct eth_hdr * ethhdr;
  err_t D.7405;

  <bb 2> :
  eth_type_be = lwip_htons (eth_type);
  _1 = pbuf_add_header (p, 14);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by goto predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  ethhdr = p->payload;
  ethhdr->type = eth_type_be;
  _2 = &ethhdr->dest;
  memcpy (_2, dst, 6);
  _3 = &ethhdr->src;
  memcpy (_3, src, 6);
  _4 = netif->hwaddr_len;
  if (_4 != 6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  _5 = netif->linkoutput;
  D.7405 = _5 (netif, p);
  goto <bb 8>; [INV]

  <bb 7> :
pbuf_header_failed:
  _6 = lwip_stats.link.lenerr;
  _7 = _6 + 1;
  lwip_stats.link.lenerr = _7;
  D.7405 = -2;

  <bb 8> :
<L6>:
  return D.7405;

}


ethernet_input (struct pbuf * p, struct netif * netif)
{
  u16_t next_hdr_offset;
  u16_t type;
  struct eth_hdr * ethhdr;
  err_t D.7399;

  <bb 2> :
  next_hdr_offset = 14;
  _1 = p->len;
  if (_1 <= 14)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = lwip_stats.etharp.proterr;
  _3 = _2 + 1;
  lwip_stats.etharp.proterr = _3;
  _4 = lwip_stats.etharp.drop;
  _5 = _4 + 1;
  lwip_stats.etharp.drop = _5;
  _6 = netif->mib2_counters.ifinerrors;
  _7 = _6 + 1;
  netif->mib2_counters.ifinerrors = _7;
  // predicted unlikely by goto predictor.
  goto <bb 33>; [INV]

  <bb 4> :
  _8 = p->if_idx;
  if (_8 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _9 = netif->num;
  _10 = _9 + 1;
  p->if_idx = _10;

  <bb 6> :
  ethhdr = p->payload;
  type = ethhdr->type;
  _11 = ethhdr->dest.addr[0];
  _12 = (int) _11;
  _13 = _12 & 1;
  if (_13 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 7> :
  _14 = ethhdr->dest.addr[0];
  if (_14 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _15 = ethhdr->dest.addr[1];
  if (_15 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  _16 = ethhdr->dest.addr[2];
  if (_16 == 94)
    goto <bb 10>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 10> :
  _17 = p->flags;
  _18 = _17 | 16;
  p->flags = _18;
  goto <bb 16>; [INV]

  <bb 11> :
  _19 = ethhdr->dest.addr[0];
  if (_19 == 51)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  _20 = ethhdr->dest.addr[1];
  if (_20 == 51)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _21 = p->flags;
  _22 = _21 | 16;
  p->flags = _22;
  goto <bb 16>; [INV]

  <bb 14> :
  _23 = &ethhdr->dest.addr;
  _24 = memcmp (_23, &ethbroadcast.addr, 6);
  if (_24 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _25 = p->flags;
  _26 = _25 | 8;
  p->flags = _26;

  <bb 16> :
  _27 = (int) type;
  switch (_27) <default: <L33> [INV], case 8: <L19> [INV], case 1544: <L24> [INV], case 56710: <L29> [INV]>

  <bb 17> :
<L19>:
  _28 = netif->flags;
  _29 = (unsigned int) _28;
  _30 = _29 & 8;
  if (_30 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  // predicted unlikely by goto predictor.
  goto <bb 33>; [INV]

  <bb 19> :
  _31 = (unsigned int) next_hdr_offset;
  _32 = pbuf_remove_header (p, _31);
  if (_32 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  // predicted unlikely by goto predictor.
  goto <bb 33>; [INV]

  <bb 21> :
  ip4_input (p, netif);
  goto <bb 32>; [INV]

  <bb 22> :
<L24>:
  _33 = netif->flags;
  _34 = (unsigned int) _33;
  _35 = _34 & 8;
  if (_35 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  // predicted unlikely by goto predictor.
  goto <bb 33>; [INV]

  <bb 24> :
  _36 = (unsigned int) next_hdr_offset;
  _37 = pbuf_remove_header (p, _36);
  if (_37 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _38 = lwip_stats.etharp.lenerr;
  _39 = _38 + 1;
  lwip_stats.etharp.lenerr = _39;
  _40 = lwip_stats.etharp.drop;
  _41 = _40 + 1;
  lwip_stats.etharp.drop = _41;
  // predicted unlikely by goto predictor.
  goto <bb 33>; [INV]

  <bb 26> :
  etharp_input (p, netif);
  goto <bb 32>; [INV]

  <bb 27> :
<L29>:
  _42 = p->len;
  if (next_hdr_offset > _42)
    goto <bb 29>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  _43 = (unsigned int) next_hdr_offset;
  _44 = pbuf_remove_header (p, _43);
  if (_44 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  // predicted unlikely by goto predictor.
  goto <bb 33>; [INV]

  <bb 30> :
  ip6_input (p, netif);
  goto <bb 32>; [INV]

  <bb 31> :
<L33>:
  _45 = lwip_stats.etharp.proterr;
  _46 = _45 + 1;
  lwip_stats.etharp.proterr = _46;
  _47 = lwip_stats.etharp.drop;
  _48 = _47 + 1;
  lwip_stats.etharp.drop = _48;
  _49 = netif->mib2_counters.ifinunknownprotos;
  _50 = _49 + 1;
  netif->mib2_counters.ifinunknownprotos = _50;
  // predicted unlikely by goto predictor.
  goto <bb 33>; [INV]

  <bb 32> :
  D.7399 = 0;
  goto <bb 34>; [INV]

  <bb 33> :
free_and_return:
  pbuf_free (p);
  D.7399 = 0;

  <bb 34> :
<L36>:
  return D.7399;

}


