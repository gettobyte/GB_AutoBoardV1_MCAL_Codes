
Marking local functions:


Marking externally visible functions: bridgeif_add_port/11 bridgeif_init/10 bridgeif_fdb_remove/3 bridgeif_fdb_add/2


Marking externally visible variables: bridgeif_netif_client_id/1


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

ethip6_output/24 (ethip6_output) @06d241c0
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: bridgeif_init/10 (addr) 
  Availability: not_available
  Function flags:
  Called by: 
  Calls: 
etharp_output/23 (etharp_output) @06d240e0
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: bridgeif_init/10 (addr) 
  Availability: not_available
  Function flags:
  Called by: 
  Calls: 
mem_free/22 (mem_free) @06d24000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: bridgeif_init/10 
  Calls: 
bridgeif_fdb_init/21 (bridgeif_fdb_init) @06ccbee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: bridgeif_init/10 
  Calls: 
mem_calloc/20 (mem_calloc) @06ccbe00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: bridgeif_init/10 
  Calls: 
netif_alloc_client_data_id/19 (netif_alloc_client_data_id) @06ccbd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: bridgeif_init/10 
  Calls: 
pbuf_free/18 (pbuf_free) @06ccba80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: bridgeif_input/9 bridgeif_input/9 bridgeif_input/9 
  Calls: 
bridgeif_fdb_update_src/17 (bridgeif_fdb_update_src) @06ccb9a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: bridgeif_input/9 
  Calls: 
lwip_stats/16 (lwip_stats) @06d19630
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: bridgeif_output/8 (read) bridgeif_output/8 (write) 
  Availability: not_available
  Varpool flags:
bridgeif_fdb_get_dst_ports/15 (bridgeif_fdb_get_dst_ports) @06ccb380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: bridgeif_find_dst_ports/4 
  Calls: 
memset/14 (memset) @06ccb1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: bridgeif_fdb_remove/3 
  Calls: 
memcmp/13 (memcmp) @06ccb0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: bridgeif_is_local_mac/5 bridgeif_is_local_mac/5 bridgeif_find_dst_ports/4 bridgeif_fdb_remove/3 bridgeif_fdb_remove/3 
  Calls: 
memcpy/12 (memcpy) @06cafa80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: bridgeif_init/10 bridgeif_init/10 bridgeif_fdb_add/2 
  Calls: 
bridgeif_add_port/11 (bridgeif_add_port) @06cafc40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: bridgeif_input/9 (addr) bridgeif_netif_client_id/1 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
bridgeif_init/10 (bridgeif_init) @06caf9a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: bridgeif_netif_client_id/1 (read) bridgeif_netif_client_id/1 (write) etharp_output/23 (addr) ethip6_output/24 (addr) bridgeif_output/8 (addr) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: memcpy/12 mem_free/22 bridgeif_fdb_init/21 memcpy/12 mem_calloc/20 netif_alloc_client_data_id/19 
   Indirect call Num speculative call targets: 0
bridgeif_input/9 (bridgeif_input) @06caf620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: bridgeif_netif_client_id/1 (read) 
  Referring: bridgeif_add_port/11 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_free/18 bridgeif_send_to_ports/7 bridgeif_find_dst_ports/4 bridgeif_is_local_mac/5 pbuf_free/18 pbuf_free/18 bridgeif_send_to_ports/7 bridgeif_find_dst_ports/4 bridgeif_fdb_update_src/17 
   Indirect call Num speculative call targets: 0
   Indirect call Num speculative call targets: 0
bridgeif_output/8 (bridgeif_output) @06caf380
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: lwip_stats/16 (read) lwip_stats/16 (write) 
  Referring: bridgeif_init/10 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: bridgeif_send_to_ports/7 bridgeif_find_dst_ports/4 
bridgeif_send_to_ports/7 (bridgeif_send_to_ports) @06ca1000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: bridgeif_input/9 bridgeif_input/9 bridgeif_output/8 
  Calls: bridgeif_send_to_port/6 
bridgeif_send_to_port/6 (bridgeif_send_to_port) @06ca1d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: bridgeif_send_to_ports/7 
  Calls: 
   Indirect call Num speculative call targets: 0
bridgeif_is_local_mac/5 (bridgeif_is_local_mac) @06ca19a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: bridgeif_input/9 
  Calls: memcmp/13 memcmp/13 
bridgeif_find_dst_ports/4 (bridgeif_find_dst_ports) @06ca1700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: bridgeif_input/9 bridgeif_input/9 bridgeif_output/8 
  Calls: bridgeif_fdb_get_dst_ports/15 memcmp/13 
bridgeif_fdb_remove/3 (bridgeif_fdb_remove) @06ca1460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: memset/14 memcmp/13 memcmp/13 
bridgeif_fdb_add/2 (bridgeif_fdb_add) @06ca11c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: memcpy/12 
bridgeif_netif_client_id/1 (bridgeif_netif_client_id) @06c9d678
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: bridgeif_input/9 (read) bridgeif_init/10 (read) bridgeif_init/10 (write) bridgeif_add_port/11 (read) 
  Availability: available
  Varpool flags: initialized
bridgeif_add_port (struct netif * bridgeif, struct netif * portif)
{
  struct bridgeif_port_t * port;
  struct bridgeif_private_t * br;
  err_t D.7624;

  <bb 2> :
  if (bridgeif == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  _1 = bridgeif->state;
  if (_1 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  if (portif == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 7>; [INV]

  <bb 8> :
  _2 = portif->flags;
  _3 = (unsigned int) _2;
  _4 = _3 & 8;
  if (_4 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _5 = portif->flags;
  _6 = (unsigned int) _5;
  _7 = _6 & 16;
  if (_7 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  D.7624 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 11> :
  br = bridgeif->state;
  _8 = br->num_ports;
  _9 = br->max_ports;
  if (_8 >= _9)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.7624 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 13> :
  _10 = br->ports;
  _11 = br->num_ports;
  _12 = (unsigned int) _11;
  _13 = _12 * 12;
  port = _10 + _13;
  port->port_netif = portif;
  _14 = br->num_ports;
  port->port_num = _14;
  port->bridge = br;
  _15 = br->num_ports;
  _16 = _15;
  _17 = _16 + 1;
  br->num_ports = _17;
  portif->input = bridgeif_input;
  bridgeif_netif_client_id.18_18 = bridgeif_netif_client_id;
  _19 = (int) bridgeif_netif_client_id.18_18;
  portif->client_data[_19] = port;
  _20 = portif->flags;
  _21 = _20 & 247;
  portif->flags = _21;
  D.7624 = 0;

  <bb 14> :
<L14>:
  return D.7624;

}


bridgeif_init (struct netif * netif)
{
  struct ip6_addr_t ip6_allnodes_ll;
  mem_size_t alloc_len;
  size_t alloc_len_sizet;
  struct bridgeif_private_t * br;
  struct bridgeif_initdata_t * init_data;
  err_t D.7609;

  <bb 2> :
  if (netif == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  _1 = netif->input;
  if (_1 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  bridgeif_netif_client_id.17_2 = bridgeif_netif_client_id;
  if (bridgeif_netif_client_id.17_2 == 255)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _3 = netif_alloc_client_data_id ();
  bridgeif_netif_client_id = _3;

  <bb 8> :
  init_data = netif->state;
  if (init_data == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 9>; [INV]

  <bb 10> :
  _4 = init_data->max_ports;
  if (_4 > 7)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 11>; [INV]

  <bb 12> :
  _5 = init_data->max_ports;
  _6 = (unsigned int) _5;
  _7 = _6 * 12;
  _8 = init_data->max_fdb_static_entries;
  _9 = (unsigned int) _8;
  _10 = _9 * 8;
  _11 = _7 + _10;
  alloc_len_sizet = _11 + 32;
  alloc_len = (mem_size_t) alloc_len_sizet;
  _12 = (unsigned int) alloc_len;
  if (alloc_len_sizet != _12)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 13>; [INV]

  <bb 14> :
  br = mem_calloc (1, alloc_len);
  if (br == 0B)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  D.7609 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 16> :
  _13 = &br->ethaddr;
  _14 = &init_data->ethaddr;
  memcpy (_13, _14, 6);
  br->netif = netif;
  _15 = init_data->max_ports;
  br->max_ports = _15;
  _16 = br + 32;
  br->ports = _16;
  _17 = init_data->max_fdb_static_entries;
  br->max_fdbs_entries = _17;
  _18 = br + 32;
  _19 = init_data->max_ports;
  _20 = (unsigned int) _19;
  _21 = _20 * 12;
  _22 = _18 + _21;
  br->fdbs = _22;
  _23 = init_data->max_fdb_dynamic_entries;
  br->max_fdbd_entries = _23;
  _24 = init_data->max_fdb_dynamic_entries;
  _25 = bridgeif_fdb_init (_24);
  br->fdbd = _25;
  _26 = br->fdbd;
  if (_26 == 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  mem_free (br);
  D.7609 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 18> :
  netif->hostname = "lwip";
  netif->link_type = 6;
  netif->link_speed = 0;
  netif->ts = 0;
  netif->mib2_counters.ifinoctets = 0;
  netif->mib2_counters.ifinucastpkts = 0;
  netif->mib2_counters.ifinnucastpkts = 0;
  netif->mib2_counters.ifindiscards = 0;
  netif->mib2_counters.ifinerrors = 0;
  netif->mib2_counters.ifinunknownprotos = 0;
  netif->mib2_counters.ifoutoctets = 0;
  netif->mib2_counters.ifoutucastpkts = 0;
  netif->mib2_counters.ifoutnucastpkts = 0;
  netif->mib2_counters.ifoutdiscards = 0;
  netif->mib2_counters.ifouterrors = 0;
  netif->state = br;
  netif->name[0] = 98;
  netif->name[1] = 114;
  netif->output = etharp_output;
  netif->output_ip6 = ethip6_output;
  netif->linkoutput = bridgeif_output;
  netif->hwaddr_len = 6;
  _27 = &netif->hwaddr;
  _28 = &br->ethaddr;
  memcpy (_27, _28, 6);
  netif->mtu = 1500;
  netif->flags = 126;
  _29 = netif->mld_mac_filter;
  if (_29 != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  ip6_allnodes_ll.addr[0] = 767;
  ip6_allnodes_ll.addr[1] = 0;
  ip6_allnodes_ll.addr[2] = 0;
  ip6_allnodes_ll.addr[3] = 16777216;
  ip6_allnodes_ll.zone = 0;
  _30 = netif->mld_mac_filter;
  _30 (netif, &ip6_allnodes_ll, 1);
  ip6_allnodes_ll = {CLOBBER};

  <bb 20> :
  D.7609 = 0;

  <bb 21> :
<L23>:
  return D.7609;

}


bridgeif_input (struct pbuf * p, struct netif * netif)
{
  struct bridgeif_port_t * port;
  struct bridgeif_private_t * br;
  struct eth_addr * dst;
  struct eth_addr * src;
  bridgeif_portmask_t dstports;
  u8_t rx_idx;
  err_t D.7577;

  <bb 2> :
  if (p == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (netif == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.7577 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 5> :
  bridgeif_netif_client_id.15_1 = bridgeif_netif_client_id;
  _2 = (int) bridgeif_netif_client_id.15_1;
  port = netif->client_data[_2];
  if (port == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 6>; [INV]

  <bb 7> :
  if (port == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _3 = port->bridge;
  if (_3 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.7577 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 10> :
  br = port->bridge;
  _4 = netif->num;
  rx_idx = _4 + 1;
  p->if_idx = rx_idx;
  dst = p->payload;
  _5 = p->payload;
  src = _5 + 6;
  _6 = src->addr[0];
  _7 = (int) _6;
  _8 = _7 & 1;
  if (_8 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _9 = br->fdbd;
  _10 = port->port_num;
  bridgeif_fdb_update_src (_9, src, _10);

  <bb 12> :
  _11 = dst->addr[0];
  _12 = (int) _11;
  _13 = _12 & 1;
  if (_13 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 13> :
  dstports = bridgeif_find_dst_ports (br, dst);
  bridgeif_send_to_ports (br, p, dstports);
  dstports.16_14 = (signed char) dstports;
  if (dstports.16_14 < 0)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  _15 = br->netif;
  _16 = _15->input;
  _17 = br->netif;
  _18 = _16 (p, _17);
  if (_18 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 15> :
  pbuf_free (p);
  goto <bb 17>; [INV]

  <bb 16> :
  pbuf_free (p);

  <bb 17> :
  D.7577 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 18> :
  _19 = bridgeif_is_local_mac (br, dst);
  if (_19 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _20 = br->netif;
  _21 = _20->input;
  _22 = br->netif;
  D.7577 = _21 (p, _22);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 20> :
  dstports = bridgeif_find_dst_ports (br, dst);
  bridgeif_send_to_ports (br, p, dstports);
  pbuf_free (p);
  D.7577 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 21> :
<L20>:
  return D.7577;

}


bridgeif_output (struct netif * netif, struct pbuf * p)
{
  bridgeif_portmask_t dstports;
  struct eth_addr * dst;
  struct bridgeif_private_t * br;
  err_t err;
  err_t D.7572;

  <bb 2> :
  br = netif->state;
  dst = p->payload;
  dstports = bridgeif_find_dst_ports (br, dst);
  err = bridgeif_send_to_ports (br, p, dstports);
  _1 = netif->mib2_counters.ifoutoctets;
  _2 = p->tot_len;
  _3 = (long unsigned int) _2;
  _4 = _1 + _3;
  netif->mib2_counters.ifoutoctets = _4;
  _5 = p->payload;
  _6 = MEM[(u8_t *)_5];
  _7 = (int) _6;
  _8 = _7 & 1;
  if (_8 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _9 = netif->mib2_counters.ifoutnucastpkts;
  _10 = _9 + 1;
  netif->mib2_counters.ifoutnucastpkts = _10;
  goto <bb 5>; [INV]

  <bb 4> :
  _11 = netif->mib2_counters.ifoutucastpkts;
  _12 = _11 + 1;
  netif->mib2_counters.ifoutucastpkts = _12;

  <bb 5> :
  _13 = lwip_stats.link.xmit;
  _14 = _13 + 1;
  lwip_stats.link.xmit = _14;
  D.7572 = err;

  <bb 6> :
<L3>:
  return D.7572;

}


bridgeif_send_to_ports (struct bridgeif_private_t * br, struct pbuf * p, bridgeif_portmask_t dstports)
{
  bridgeif_portmask_t mask;
  u8_t i;
  err_t ret_err;
  err_t err;
  err_t D.7567;

  <bb 2> :
  ret_err = 0;
  mask = 1;
  i = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  _1 = dstports & mask;
  if (_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  err = bridgeif_send_to_port (br, p, i);
  if (err != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  ret_err = err;

  <bb 6> :
  i.14_2 = i;
  i = i.14_2 + 1;
  mask = mask << 1;

  <bb 7> :
  if (i <= 6)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.7567 = ret_err;

  <bb 9> :
<L7>:
  return D.7567;

}


bridgeif_send_to_port (struct bridgeif_private_t * br, struct pbuf * p, u8_t dstport_idx)
{
  struct netif * portif;
  err_t D.7558;

  <bb 2> :
  if (dstport_idx <= 6)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  _1 = br->max_ports;
  if (dstport_idx < _1)
    goto <bb 4>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 4> :
  _2 = br->ports;
  _3 = (unsigned int) dstport_idx;
  _4 = _3 * 12;
  _5 = _2 + _4;
  portif = _5->port_netif;
  if (portif != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 5> :
  _6 = portif->linkoutput;
  if (_6 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  _7 = portif->num;
  _8 = _7 + 1;
  _9 = p->if_idx;
  if (_8 != _9)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 7> :
  _10 = portif->flags;
  _11 = (unsigned int) _10;
  _12 = _11 >> 2;
  _13 = (_Bool) _12;
  if (_13 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 8> :
  _14 = portif->linkoutput;
  D.7558 = _14 (portif, p);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 9> :
  if (dstport_idx != 7)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 10>; [INV]

  <bb 11> :
  D.7558 = 0;

  <bb 12> :
<L16>:
  return D.7558;

}


bridgeif_is_local_mac (struct bridgeif_private_t * br, struct eth_addr * addr)
{
  struct netif * portif;
  int i;
  int D.7540;

  <bb 2> :
  _1 = br->netif;
  _2 = &_1->hwaddr;
  _3 = memcmp (_2, addr, 6);
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7540 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 4> :
  i = 0;
  goto <bb 9>; [INV]

  <bb 5> :
  _4 = br->ports;
  i.13_5 = (unsigned int) i;
  _6 = i.13_5 * 12;
  _7 = _4 + _6;
  portif = _7->port_netif;
  if (portif != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _8 = &portif->hwaddr;
  _9 = memcmp (_8, addr, 6);
  if (_9 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.7540 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  i = i + 1;

  <bb 9> :
  _10 = br->num_ports;
  _11 = (int) _10;
  if (i < _11)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  D.7540 = 0;

  <bb 11> :
<L9>:
  return D.7540;

}


bridgeif_find_dst_ports (struct bridgeif_private_t * br, struct eth_addr * dst_addr)
{
  bridgeif_portmask_t ret;
  int i;
  bridgeif_portmask_t D.7534;

  <bb 2> :
  i = 0;
  goto <bb 7>; [INV]

  <bb 3> :
  _1 = br->fdbs;
  i.10_2 = (unsigned int) i;
  _3 = i.10_2 * 8;
  _4 = _1 + _3;
  _5 = _4->used;
  if (_5 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  _6 = br->fdbs;
  i.11_7 = (unsigned int) i;
  _8 = i.11_7 * 8;
  _9 = _6 + _8;
  _10 = &_9->addr;
  _11 = memcmp (_10, dst_addr, 6);
  if (_11 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _12 = br->fdbs;
  i.12_13 = (unsigned int) i;
  _14 = i.12_13 * 8;
  _15 = _12 + _14;
  ret = _15->dst_ports;
  D.7534 = ret;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 6> :
  i = i + 1;

  <bb 7> :
  _16 = br->max_fdbs_entries;
  _17 = (int) _16;
  if (i < _17)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _18 = dst_addr->addr[0];
  _19 = (int) _18;
  _20 = _19 & 1;
  if (_20 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.7534 = 255;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 10> :
  _21 = br->fdbd;
  D.7534 = bridgeif_fdb_get_dst_ports (_21, dst_addr);

  <bb 11> :
<L9>:
  return D.7534;

}


bridgeif_fdb_remove (struct netif * bridgeif, const struct eth_addr * addr)
{
  struct bridgeif_private_t * br;
  int i;
  err_t D.7528;

  <bb 2> :
  if (bridgeif == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  br = bridgeif->state;
  if (br == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  i = 0;
  goto <bb 13>; [INV]

  <bb 7> :
  _1 = br->fdbs;
  i.5_2 = (unsigned int) i;
  _3 = i.5_2 * 8;
  _4 = _1 + _3;
  _5 = _4->used;
  if (_5 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  _6 = br->fdbs;
  i.6_7 = (unsigned int) i;
  _8 = i.6_7 * 8;
  _9 = _6 + _8;
  _10 = &_9->addr;
  _11 = memcmp (_10, addr, 6);
  if (_11 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _12 = br->fdbs;
  i.7_13 = (unsigned int) i;
  _14 = i.7_13 * 8;
  _15 = _12 + _14;
  _16 = _15->used;
  if (_16 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _17 = br->fdbs;
  i.8_18 = (unsigned int) i;
  _19 = i.8_18 * 8;
  _20 = _17 + _19;
  _21 = &_20->addr;
  _22 = memcmp (_21, addr, 6);
  if (_22 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _23 = br->fdbs;
  i.9_24 = (unsigned int) i;
  _25 = i.9_24 * 8;
  _26 = _23 + _25;
  memset (_26, 0, 8);
  D.7528 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 12> :
  i = i + 1;

  <bb 13> :
  _27 = br->max_fdbs_entries;
  _28 = (int) _27;
  if (i < _28)
    goto <bb 7>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.7528 = -6;

  <bb 15> :
<L17>:
  return D.7528;

}


bridgeif_fdb_add (struct netif * bridgeif, const struct eth_addr * addr, bridgeif_portmask_t ports)
{
  struct bridgeif_private_t * br;
  int i;
  err_t D.7514;

  <bb 2> :
  if (bridgeif == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  br = bridgeif->state;
  if (br == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  i = 0;
  goto <bb 11>; [INV]

  <bb 7> :
  _1 = br->fdbs;
  i.0_2 = (unsigned int) i;
  _3 = i.0_2 * 8;
  _4 = _1 + _3;
  _5 = _4->used;
  if (_5 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  _6 = br->fdbs;
  i.1_7 = (unsigned int) i;
  _8 = i.1_7 * 8;
  _9 = _6 + _8;
  _10 = _9->used;
  if (_10 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _11 = br->fdbs;
  i.2_12 = (unsigned int) i;
  _13 = i.2_12 * 8;
  _14 = _11 + _13;
  _14->used = 1;
  _15 = br->fdbs;
  i.3_16 = (unsigned int) i;
  _17 = i.3_16 * 8;
  _18 = _15 + _17;
  _18->dst_ports = ports;
  _19 = br->fdbs;
  i.4_20 = (unsigned int) i;
  _21 = i.4_20 * 8;
  _22 = _19 + _21;
  _23 = &_22->addr;
  memcpy (_23, addr, 6);
  D.7514 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  i = i + 1;

  <bb 11> :
  _24 = br->max_fdbs_entries;
  _25 = (int) _24;
  if (i < _25)
    goto <bb 7>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  D.7514 = -1;

  <bb 13> :
<L13>:
  return D.7514;

}


