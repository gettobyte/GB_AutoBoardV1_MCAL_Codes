
Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

ip_addr_any/34 (ip_addr_any) @06d004c8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: sntp_getserver/18 (addr) 
  Availability: not_available
  Varpool flags: read-only
udp_remove/33 (udp_remove) @06cfd540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_stop/12 
  Calls: 
ip_addr_any_type/32 (ip_addr_any_type) @06cf95e8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: sntp_init/11 (addr) 
  Availability: not_available
  Varpool flags: read-only
udp_bind/31 (udp_bind) @06cfd2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_init/11 
  Calls: 
rand/30 (rand) @06cfd1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_init/11 
  Calls: 
udp_recv/29 (udp_recv) @06cfd0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_init/11 
  Calls: 
udp_new_ip_type/28 (udp_new_ip_type) @06cb19a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_init/11 
  Calls: 
udp_sendto/27 (udp_sendto) @06cb1c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_send_request/9 
  Calls: 
pbuf_alloc/26 (pbuf_alloc) @06cb1b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_send_request/9 
  Calls: 
pbuf_free/25 (pbuf_free) @06cb18c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_send_request/9 sntp_recv/8 
  Calls: 
pbuf_copy_partial/24 (pbuf_copy_partial) @06cb17e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_recv/8 
  Calls: 
pbuf_get_at/23 (pbuf_get_at) @06cb1700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_recv/8 sntp_recv/8 
  Calls: 
sys_timeout/22 (sys_timeout) @06cb1380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_init/11 sntp_request/10 sntp_send_request/9 sntp_send_request/9 sntp_recv/8 sntp_retry/7 
  Calls: 
sys_untimeout/21 (sys_untimeout) @06cb12a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_stop/12 sntp_stop/12 sntp_request/10 sntp_send_request/9 sntp_send_request/9 sntp_recv/8 sntp_recv/8 sntp_retry/7 
  Calls: 
memset/20 (memset) @06cb10e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_initialize_request/6 
  Calls: 
lwip_htonl/19 (lwip_htonl) @06ca7e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: sntp_process/5 sntp_process/5 
  Calls: 
sntp_getserver/18 (sntp_getserver) @06ca7000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: sntp_servers/3 (addr) ip_addr_any/34 (addr) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
sntp_setserver/17 (sntp_setserver) @06ca7d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: sntp_servers/3 (write) sntp_servers/3 (write) sntp_servers/3 (write) sntp_servers/3 (write) sntp_servers/3 (write) sntp_servers/3 (write) sntp_servers/3 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
sntp_getreachability/16 (sntp_getreachability) @06ca79a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: sntp_servers/3 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
sntp_getoperatingmode/15 (sntp_getoperatingmode) @06ca7700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: sntp_opmode/1 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
sntp_setoperatingmode/14 (sntp_setoperatingmode) @06ca7460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: sntp_pcb/2 (read) sntp_opmode/1 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
sntp_enabled/13 (sntp_enabled) @06ca71c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: sntp_pcb/2 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
sntp_stop/12 (sntp_stop) @06c95d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: sntp_pcb/2 (read) sntp_servers/3 (write) sntp_request/10 (addr) sntp_retry/7 (addr) sntp_pcb/2 (read) sntp_pcb/2 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: udp_remove/33 sys_untimeout/21 sys_untimeout/21 
sntp_init/11 (sntp_init) @06c95ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: sntp_pcb/2 (read) sntp_pcb/2 (write) sntp_pcb/2 (read) sntp_pcb/2 (read) sntp_pcb/2 (read) sntp_recv/8 (addr) sntp_opmode/1 (read) sntp_retry_timeout/4 (write) sntp_request/10 (addr) sntp_opmode/1 (read) sntp_pcb/2 (read) sntp_pcb/2 (read) sntp_pcb/2 (read) ip_addr_any_type/32 (addr) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: udp_bind/31 sys_timeout/22 rand/30 udp_recv/29 udp_new_ip_type/28 
sntp_request/10 (sntp_request) @06c95c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: sntp_servers/3 (read) sntp_retry/7 (addr) sntp_retry/7 (addr) 
  Referring: sntp_recv/8 (addr) sntp_send_request/9 (addr) sntp_recv/8 (addr) sntp_init/11 (addr) sntp_retry/7 (addr) sntp_retry/7 (addr) sntp_send_request/9 (addr) sntp_stop/12 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: sys_timeout/22 sys_untimeout/21 sntp_send_request/9 
sntp_send_request/9 (sntp_send_request) @06c957e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: sntp_pcb/2 (read) sntp_servers/3 (read) sntp_servers/3 (write) sntp_retry/7 (addr) sntp_retry/7 (addr) sntp_request/10 (addr) sntp_request/10 (addr) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: sntp_request/10 
  Calls: sys_timeout/22 sys_untimeout/21 sys_timeout/22 sys_untimeout/21 pbuf_free/25 udp_sendto/27 sntp_initialize_request/6 pbuf_alloc/26 
sntp_recv/8 (sntp_recv) @06c95540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: sntp_opmode/1 (read) sntp_opmode/1 (read) sntp_servers/3 (read) sntp_servers/3 (write) sntp_opmode/1 (read) sntp_retry/7 (addr) sntp_request/10 (addr) sntp_retry_timeout/4 (write) sntp_request/10 (addr) sntp_opmode/1 (read) 
  Referring: sntp_init/11 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: sntp_retry/7 sys_timeout/22 sys_untimeout/21 sys_untimeout/21 sntp_process/5 pbuf_free/25 pbuf_copy_partial/24 pbuf_get_at/23 pbuf_get_at/23 
sntp_retry/7 (sntp_retry) @06c952a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: sntp_request/10 (addr) sntp_retry_timeout/4 (read) sntp_request/10 (addr) sntp_retry_timeout/4 (read) sntp_retry_timeout/4 (read) sntp_retry_timeout/4 (write) sntp_retry_timeout/4 (write) 
  Referring: sntp_send_request/9 (addr) sntp_recv/8 (addr) sntp_request/10 (addr) sntp_send_request/9 (addr) sntp_request/10 (addr) sntp_stop/12 (addr) 
  Availability: available
  Function flags: body
  Called by: sntp_recv/8 
  Calls: sys_timeout/22 sys_untimeout/21 
sntp_initialize_request/6 (sntp_initialize_request) @06c95000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: sntp_send_request/9 
  Calls: memset/20 
sntp_process/5 (sntp_process) @06c8fd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: sntp_recv/8 
  Calls: lwip_htonl/19 lwip_htonl/19 
sntp_retry_timeout/4 (sntp_retry_timeout) @06c911b0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: sntp_retry/7 (write) sntp_recv/8 (write) sntp_retry/7 (read) sntp_retry/7 (read) sntp_retry/7 (read) sntp_retry/7 (write) sntp_init/11 (write) 
  Availability: available
  Varpool flags:
sntp_servers/3 (sntp_servers) @06c8df78
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: sntp_stop/12 (write) sntp_getreachability/16 (read) sntp_send_request/9 (read) sntp_setserver/17 (write) sntp_recv/8 (write) sntp_send_request/9 (write) sntp_request/10 (read) sntp_recv/8 (read) sntp_setserver/17 (write) sntp_setserver/17 (write) sntp_setserver/17 (write) sntp_setserver/17 (write) sntp_setserver/17 (write) sntp_setserver/17 (write) sntp_getserver/18 (addr) 
  Availability: available
  Varpool flags:
sntp_pcb/2 (sntp_pcb) @06c8de58
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: sntp_stop/12 (write) sntp_send_request/9 (read) sntp_init/11 (read) sntp_enabled/13 (read) sntp_init/11 (read) sntp_init/11 (read) sntp_init/11 (read) sntp_init/11 (write) sntp_init/11 (read) sntp_init/11 (read) sntp_init/11 (read) sntp_stop/12 (read) sntp_stop/12 (read) sntp_setoperatingmode/14 (read) 
  Availability: available
  Varpool flags:
sntp_opmode/1 (sntp_opmode) @06c8ddc8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: sntp_recv/8 (read) sntp_setoperatingmode/14 (write) sntp_recv/8 (read) sntp_init/11 (read) sntp_recv/8 (read) sntp_recv/8 (read) sntp_init/11 (read) sntp_getoperatingmode/15 (read) 
  Availability: available
  Varpool flags:
sntp_getserver (u8_t idx)
{
  const struct ip_addr_t * D.7573;
  int _1;
  const struct ip_addr_t * _2;
  const struct ip_addr_t * _4;
  const struct ip_addr_t * _5;

  <bb 2> :
  if (idx_3(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (int) idx_3(D);
  _5 = &sntp_servers[_1].addr;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = &ip_addr_any;

  <bb 5> :
  # _2 = PHI <_5(3), _4(4)>
<L2>:
  return _2;

}


sntp_setserver (u8_t idx, const struct ip_addr_t * server)
{
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;

  <bb 2> :
  if (idx_9(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  if (server_11(D) != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _1 = (int) idx_9(D);
  sntp_servers[_1].addr = *server_11(D);
  goto <bb 7>; [INV]

  <bb 5> :
  _2 = (int) idx_9(D);
  sntp_servers[_2].addr.u_addr.ip6.addr[0] = 0;
  _3 = (int) idx_9(D);
  sntp_servers[_3].addr.u_addr.ip6.addr[1] = 0;
  _4 = (int) idx_9(D);
  sntp_servers[_4].addr.u_addr.ip6.addr[2] = 0;
  _5 = (int) idx_9(D);
  sntp_servers[_5].addr.u_addr.ip6.addr[3] = 0;
  _6 = (int) idx_9(D);
  sntp_servers[_6].addr.u_addr.ip6.zone = 0;

  <bb 6> :
  _7 = (int) idx_9(D);
  sntp_servers[_7].addr.type = 0;

  <bb 7> :
  return;

}


sntp_getreachability (u8_t idx)
{
  u8_t D.7562;
  int _1;
  u8_t _2;
  u8_t _4;
  u8_t _6;

  <bb 2> :
  if (idx_3(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (int) idx_3(D);
  _6 = sntp_servers[_1].reachability;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = 0;

  <bb 5> :
  # _2 = PHI <_6(3), _4(4)>
<L2>:
  return _2;

}


sntp_getoperatingmode ()
{
  u8_t D.7558;
  u8_t _2;

  <bb 2> :
  _2 = sntp_opmode;

  <bb 3> :
<L0>:
  return _2;

}


sntp_setoperatingmode (u8_t operating_mode)
{
  struct udp_pcb * sntp_pcb.25_1;

  <bb 2> :
  if (operating_mode_4(D) > 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  sntp_pcb.25_1 = sntp_pcb;
  if (sntp_pcb.25_1 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  sntp_opmode = operating_mode_4(D);
  return;

}


sntp_enabled ()
{
  u8_t D.7552;
  struct udp_pcb * sntp_pcb.24_1;
  _Bool _2;
  u8_t _4;

  <bb 2> :
  sntp_pcb.24_1 = sntp_pcb;
  _2 = sntp_pcb.24_1 != 0B;
  _4 = (u8_t) _2;

  <bb 3> :
<L0>:
  return _4;

}


sntp_stop ()
{
  u8_t i;
  struct udp_pcb * sntp_pcb.21_1;
  int _2;
  unsigned char i.22_3;
  struct udp_pcb * sntp_pcb.23_4;

  <bb 2> :
  sntp_pcb.21_1 = sntp_pcb;
  if (sntp_pcb.21_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  i_9 = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = (int) i_5;
  sntp_servers[_2].reachability = 0;
  i.22_3 = i_5;
  i_15 = i.22_3 + 1;

  <bb 5> :
  # i_5 = PHI <i_9(3), i_15(4)>
  if (i_5 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  sys_untimeout (sntp_request, 0B);
  sys_untimeout (sntp_retry, 0B);
  sntp_pcb.23_4 = sntp_pcb;
  udp_remove (sntp_pcb.23_4);
  sntp_pcb = 0B;

  <bb 7> :
  return;

}


sntp_init ()
{
  struct udp_pcb * sntp_pcb.12_1;
  struct udp_pcb * _2;
  struct udp_pcb * sntp_pcb.13_3;
  struct udp_pcb * sntp_pcb.14_4;
  struct udp_pcb * sntp_pcb.15_5;
  unsigned char sntp_opmode.16_6;
  int _7;
  long unsigned int _8;
  long unsigned int _9;
  unsigned char sntp_opmode.17_10;
  struct udp_pcb * sntp_pcb.18_11;
  unsigned char _12;
  struct udp_pcb * sntp_pcb.19_13;
  unsigned char _14;
  struct udp_pcb * sntp_pcb.20_15;

  <bb 2> :
  sntp_pcb.12_1 = sntp_pcb;
  if (sntp_pcb.12_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  _2 = udp_new_ip_type (46);
  sntp_pcb = _2;
  sntp_pcb.13_3 = sntp_pcb;
  if (sntp_pcb.13_3 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 4>; [INV]

  <bb 5> :
  sntp_pcb.14_4 = sntp_pcb;
  if (sntp_pcb.14_4 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 6> :
  sntp_pcb.15_5 = sntp_pcb;
  udp_recv (sntp_pcb.15_5, sntp_recv, 0B);
  sntp_opmode.16_6 = sntp_opmode;
  if (sntp_opmode.16_6 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  sntp_retry_timeout = 15000;
  _7 = rand ();
  _8 = (long unsigned int) _7;
  _9 = _8 % 5000;
  sys_timeout (_9, sntp_request, 0B);
  goto <bb 10>; [INV]

  <bb 8> :
  sntp_opmode.17_10 = sntp_opmode;
  if (sntp_opmode.17_10 == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  sntp_pcb.18_11 = sntp_pcb;
  _12 = sntp_pcb.18_11->so_options;
  sntp_pcb.19_13 = sntp_pcb;
  _14 = _12 | 32;
  sntp_pcb.19_13->so_options = _14;
  sntp_pcb.20_15 = sntp_pcb;
  udp_bind (sntp_pcb.20_15, &ip_addr_any_type, 123);

  <bb 10> :
  return;

}


sntp_request (void * arg)
{
  err_t err;
  struct ip_addr_t sntp_server_address;
  int iftmp.11;
  _Bool iftmp.10;
  err_t iftmp.9;
  unsigned char _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  err_t iftmp.9_7;
  _Bool iftmp.10_8;
  int iftmp.11_9;
  _Bool iftmp.10_13;
  int iftmp.11_14;
  int iftmp.11_15;
  _Bool iftmp.10_16;
  err_t iftmp.9_17;
  err_t iftmp.9_18;

  <bb 2> :
  sntp_server_address = sntp_servers[0].addr;
  _1 = sntp_server_address.type;
  if (_1 == 6)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  _2 = sntp_server_address.u_addr.ip6.addr[0];
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  _3 = sntp_server_address.u_addr.ip6.addr[1];
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  _4 = sntp_server_address.u_addr.ip6.addr[2];
  if (_4 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _5 = sntp_server_address.u_addr.ip6.addr[3];
  if (_5 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  iftmp.11_14 = 1;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.11_15 = 0;

  <bb 9> :
  # iftmp.11_9 = PHI <iftmp.11_14(7), iftmp.11_15(8)>
  iftmp.10_16 = (_Bool) iftmp.11_9;
  goto <bb 11>; [INV]

  <bb 10> :
  _6 = sntp_server_address.u_addr.ip4.addr;
  iftmp.10_13 = _6 == 0;

  <bb 11> :
  # iftmp.10_8 = PHI <iftmp.10_16(9), iftmp.10_13(10)>
  if (iftmp.10_8 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  iftmp.9_18 = -16;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.9_17 = 0;

  <bb 14> :
  # iftmp.9_7 = PHI <iftmp.9_18(12), iftmp.9_17(13)>
  err_19 = iftmp.9_7;
  if (err_19 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  sntp_send_request (&sntp_server_address);
  goto <bb 17>; [INV]

  <bb 16> :
  sys_untimeout (sntp_retry, 0B);
  sys_timeout (15000, sntp_retry, 0B);

  <bb 17> :
  sntp_server_address ={v} {CLOBBER};
  return;

}


sntp_send_request (const struct ip_addr_t * server_addr)
{
  struct sntp_msg * sntpmsg;
  struct pbuf * p;
  struct udp_pcb * sntp_pcb.8_1;
  unsigned char _2;
  unsigned char _3;

  <bb 2> :
  if (server_addr_6(D) == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  p_9 = pbuf_alloc (74, 48, 640);
  if (p_9 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  sntpmsg_12 = p_9->payload;
  sntp_initialize_request (sntpmsg_12);
  sntp_pcb.8_1 = sntp_pcb;
  udp_sendto (sntp_pcb.8_1, p_9, server_addr_6(D), 123);
  pbuf_free (p_9);
  _2 = sntp_servers[0].reachability;
  _3 = _2 << 1;
  sntp_servers[0].reachability = _3;
  sys_untimeout (sntp_retry, 0B);
  sys_timeout (15000, sntp_retry, 0B);
  goto <bb 7>; [INV]

  <bb 6> :
  sys_untimeout (sntp_request, 0B);
  sys_timeout (15000, sntp_request, 0B);

  <bb 7> :
  return;

}


sntp_recv (void * arg, struct udp_pcb * pcb, struct pbuf * p, const struct ip_addr_t * addr, u16_t port)
{
  u32_t sntp_update_delay;
  err_t err;
  u8_t stratum;
  u8_t mode;
  struct sntp_timestamps timestamps;
  short unsigned int _1;
  unsigned char _2;
  unsigned char sntp_opmode.4_3;
  unsigned char sntp_opmode.5_4;
  unsigned char _5;
  unsigned char _6;
  unsigned char sntp_opmode.6_7;
  unsigned char sntp_opmode.7_8;

  <bb 2> :
  err_16 = -16;
  _1 = p_18(D)->tot_len;
  if (_1 == 48)
    goto <bb 3>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 3> :
  _2 = pbuf_get_at (p_18(D), 0);
  mode_20 = _2 & 7;
  sntp_opmode.4_3 = sntp_opmode;
  if (sntp_opmode.4_3 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  if (mode_20 == 4)
    goto <bb 7>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  sntp_opmode.5_4 = sntp_opmode;
  if (sntp_opmode.5_4 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  if (mode_20 == 5)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 7> :
  stratum_23 = pbuf_get_at (p_18(D), 1);
  if (stratum_23 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  err_26 = 1;
  goto <bb 10>; [INV]

  <bb 9> :
  pbuf_copy_partial (p_18(D), &timestamps, 8, 40);
  err_25 = 0;

  <bb 10> :
  # err_9 = PHI <err_26(8), err_25(9)>
  goto <bb 12>; [INV]

  <bb 11> :
  err_21 = -3;

  <bb 12> :
  # err_10 = PHI <err_9(10), err_21(11)>

  <bb 13> :
  # err_11 = PHI <err_16(2), err_10(12)>
  pbuf_free (p_18(D));
  if (err_11 == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  sntp_process (&timestamps);
  _5 = sntp_servers[0].reachability;
  _6 = _5 | 1;
  sntp_servers[0].reachability = _6;
  sntp_opmode.6_7 = sntp_opmode;
  if (sntp_opmode.6_7 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 15> :
  sys_untimeout (sntp_retry, 0B);
  sys_untimeout (sntp_request, 0B);
  sntp_retry_timeout = 15000;
  sntp_update_delay_34 = 3600000;
  sys_timeout (sntp_update_delay_34, sntp_request, 0B);
  goto <bb 19>; [INV]

  <bb 16> :
  if (err_11 == 1)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  sntp_opmode.7_8 = sntp_opmode;
  if (sntp_opmode.7_8 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  sntp_retry (0B);

  <bb 19> :
  timestamps ={v} {CLOBBER};
  return;

}


sntp_retry (void * arg)
{
  u32_t new_retry_timeout;
  long unsigned int sntp_retry_timeout.1_1;
  long unsigned int sntp_retry_timeout.2_2;
  long unsigned int sntp_retry_timeout.3_3;

  <bb 2> :
  sys_untimeout (sntp_request, 0B);
  sntp_retry_timeout.1_1 = sntp_retry_timeout;
  sys_timeout (sntp_retry_timeout.1_1, sntp_request, 0B);
  sntp_retry_timeout.2_2 = sntp_retry_timeout;
  new_retry_timeout_8 = sntp_retry_timeout.2_2 << 1;
  if (new_retry_timeout_8 <= 150000)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  sntp_retry_timeout.3_3 = sntp_retry_timeout;
  if (new_retry_timeout_8 > sntp_retry_timeout.3_3)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  sntp_retry_timeout = new_retry_timeout_8;
  goto <bb 6>; [INV]

  <bb 5> :
  sntp_retry_timeout = 150000;

  <bb 6> :
  return;

}


sntp_initialize_request (struct sntp_msg * req)
{
  <bb 2> :
  memset (req_2(D), 0, 48);
  req_2(D)->li_vn_mode = 35;
  return;

}


sntp_process (const struct sntp_timestamps * timestamps)
{
  u32_t frac;
  s32_t sec;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int sec.0_4;

  <bb 2> :
  _1 = timestamps_6(D)->xmit.sec;
  _2 = lwip_htonl (_1);
  sec_8 = (s32_t) _2;
  _3 = timestamps_6(D)->xmit.frac;
  frac_10 = lwip_htonl (_3);
  sec.0_4 = (long unsigned int) sec_8;
  return;

}


