IPA summary for ip4addr_ntoa_r/8 is missing.
IPA summary for ip4addr_ntoa/7 is missing.
IPA summary for ip4addr_aton/6 is missing.
IPA summary for ipaddr_addr/5 is missing.
IPA summary for ip4_addr_netmask_valid/4 is missing.
IPA summary for ip4_addr_isbroadcast_u32/3 is missing.

Flattening functions:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
node context cache: 0 hits, 0 misses, 0 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Why inlining failed?
function not considered for inlining              :        2 calls, 2.000000 freq, 0 count
function body not available                       :        2 calls, 2.000000 freq, 0 count
IPA summary for ip4addr_ntoa_r/8 is missing.
IPA summary for ip4addr_ntoa/7 is missing.
IPA summary for ip4addr_aton/6 is missing.
IPA summary for ipaddr_addr/5 is missing.
IPA summary for ip4_addr_netmask_valid/4 is missing.
IPA summary for ip4_addr_isbroadcast_u32/3 is missing.
Symbol table:

str.0/11 (str) @06c13318
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: ip4addr_ntoa/7 (addr) 
  Availability: available
  Varpool flags:
_ctype_/10 (_ctype_) @06c13120
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: ip4addr_aton/6 (addr) ip4addr_aton/6 (addr) ip4addr_aton/6 (addr) ip4addr_aton/6 (addr) ip4addr_aton/6 (addr) 
  Availability: not_available
  Varpool flags: read-only
lwip_htonl/9 (lwip_htonl) @06c080e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: ip4addr_aton/6 ip4_addr_netmask_valid/4 
  Calls: 
ip4addr_ntoa_r/8 (ip4addr_ntoa_r) @06bb3e00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: ip4addr_ntoa/7 
  Calls: 
ip4addr_ntoa/7 (ip4addr_ntoa) @06bb3b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: str.0/11 (addr) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: ip4addr_ntoa_r/8 
ip4addr_aton/6 (ip4addr_aton) @06bb38c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: _ctype_/10 (addr) _ctype_/10 (addr) _ctype_/10 (addr) _ctype_/10 (addr) _ctype_/10 (addr) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: ipaddr_addr/5 
  Calls: lwip_htonl/9 
ipaddr_addr/5 (ipaddr_addr) @06bb3000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: ip4addr_aton/6 
ip4_addr_netmask_valid/4 (ip4_addr_netmask_valid) @06bae2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: lwip_htonl/9 
ip4_addr_isbroadcast_u32/3 (ip4_addr_isbroadcast_u32) @06baed20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
ip_addr_broadcast/2 (ip_addr_broadcast) @06ba5cf0
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
ip_addr_any/1 (ip_addr_any) @069ecca8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known

;; Function ip4_addr_isbroadcast_u32 (ip4_addr_isbroadcast_u32, funcdef_no=1, decl_uid=6418, cgraph_uid=2, symbol_order=3)

ip4_addr_isbroadcast_u32 (u32_t addr, const struct netif * netif)
{
  struct ip4_addr_t ipaddr;
  u8_t D.7062;
  unsigned char _1;
  unsigned int _2;
  unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  u8_t _15;
  u8_t _20;
  u8_t _21;
  u8_t _22;
  u8_t _23;
  u8_t _24;

  <bb 2> :
  ipaddr.addr = addr_17(D);
  if (addr_17(D) == 4294967295)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (addr_17(D) == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _24 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 5> :
  _1 = netif_19(D)->flags;
  _2 = (unsigned int) _1;
  _3 = _2 & 2;
  if (_3 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _23 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 7> :
  _4 = netif_19(D)->ip_addr.u_addr.ip4.addr;
  if (addr_17(D) == _4)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _22 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 9> :
  _5 = ipaddr.addr;
  _6 = netif_19(D)->ip_addr.u_addr.ip4.addr;
  _7 = _5 ^ _6;
  _8 = netif_19(D)->netmask.u_addr.ip4.addr;
  _9 = _7 & _8;
  if (_9 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _10 = netif_19(D)->netmask.u_addr.ip4.addr;
  _11 = ~_10;
  _12 = addr_17(D) & _11;
  _13 = netif_19(D)->netmask.u_addr.ip4.addr;
  _14 = ~_13;
  if (_12 == _14)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _20 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  _21 = 0;
  // predicted unlikely by early return (on trees) predictor.

  <bb 13> :
  # _15 = PHI <_24(4), _23(6), _22(8), _20(11), _21(12)>
  ipaddr ={v} {CLOBBER};

  <bb 14> :
<L11>:
  return _15;

}



;; Function ip4_addr_netmask_valid (ip4_addr_netmask_valid, funcdef_no=2, decl_uid=6420, cgraph_uid=3, symbol_order=4)

ip4_addr_netmask_valid (u32_t netmask)
{
  u32_t nm_hostorder;
  u32_t mask;
  u8_t D.7076;
  long unsigned int _1;
  long unsigned int _2;
  u8_t _5;
  u8_t _12;
  u8_t _14;

  <bb 2> :
  nm_hostorder_9 = lwip_htonl (netmask_7(D));
  mask_10 = 2147483648;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = nm_hostorder_9 & mask_3;
  if (_1 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  goto <bb 7>; [INV]

  <bb 5> :
  mask_11 = mask_3 >> 1;

  <bb 6> :
  # mask_3 = PHI <mask_10(2), mask_11(5)>
  if (mask_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  goto <bb 11>; [INV]

  <bb 8> :
  _2 = nm_hostorder_9 & mask_4;
  if (_2 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 10> :
  mask_13 = mask_4 >> 1;

  <bb 11> :
  # mask_4 = PHI <mask_3(7), mask_13(10)>
  if (mask_4 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _12 = 1;

  <bb 13> :
  # _5 = PHI <_14(9), _12(12)>
<L10>:
  return _5;

}



;; Function ipaddr_addr (ipaddr_addr, funcdef_no=3, decl_uid=6422, cgraph_uid=4, symbol_order=5)

ipaddr_addr (const char * cp)
{
  struct ip4_addr_t val;
  u32_t D.7080;
  int _1;
  u32_t _2;
  u32_t _6;
  u32_t _7;

  <bb 2> :
  _1 = ip4addr_aton (cp_4(D), &val);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _7 = val.addr;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _6 = 4294967295;

  <bb 5> :
  # _2 = PHI <_7(3), _6(4)>
  val ={v} {CLOBBER};

  <bb 6> :
<L3>:
  return _2;

}



;; Function ip4addr_aton (ip4addr_aton, funcdef_no=4, decl_uid=6425, cgraph_uid=5, symbol_order=6)

ip4addr_aton (const char * cp, struct ip4_addr_t * addr)
{
  u32_t * pp;
  u32_t parts[4];
  char c;
  u8_t base;
  u32_t val;
  int iftmp.0;
  int D.7085;
  sizetype _1;
  sizetype _2;
  const char * _3;
  char _4;
  int _5;
  int _6;
  sizetype _7;
  sizetype _8;
  const char * _9;
  char _10;
  int _11;
  int _12;
  int _13;
  int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  sizetype _20;
  sizetype _21;
  const char * _22;
  char _23;
  int _24;
  int _25;
  long unsigned int _26;
  int _27;
  int _28;
  sizetype _29;
  sizetype _30;
  const char * _31;
  char _32;
  int _33;
  int _34;
  int _35;
  long unsigned int _36;
  u32_t * _37;
  u32_t * pp.1_38;
  sizetype _39;
  sizetype _40;
  const char * _41;
  char _42;
  int _43;
  int _44;
  int _45;
  int _46;
  int _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _69;
  int _81;
  int iftmp.0_82;
  int iftmp.0_99;
  int iftmp.0_100;
  int _107;
  int _109;
  int _110;
  int _112;
  int _113;
  int _115;
  int _116;
  int _120;
  int _121;
  int _127;
  int _128;

  <bb 2> :
  pp_87 = &parts;
  c_90 = *cp_89(D);

  <bb 3> :
  # cp_70 = PHI <cp_89(D)(2), cp_125(27)>
  # c_77 = PHI <c_90(2), c_126(27)>
  # pp_80 = PHI <pp_87(2), pp_123(27)>
  _1 = (sizetype) c_77;
  _2 = _1 + 1;
  _3 = &_ctype_ + _2;
  _4 = *_3;
  _5 = (int) _4;
  _6 = _5 & 4;
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _128 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 57>; [INV]

  <bb 5> :
  val_91 = 0;
  base_92 = 10;
  if (c_77 == 48)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 6> :
  cp_93 = cp_70 + 1;
  c_94 = *cp_93;
  if (c_94 == 120)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  if (c_94 == 88)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  base_96 = 16;
  cp_97 = cp_93 + 1;
  c_98 = *cp_97;
  goto <bb 10>; [INV]

  <bb 9> :
  base_95 = 8;

  <bb 10> :
  # cp_71 = PHI <cp_70(5), cp_97(8), cp_93(9), cp_72(21)>
  # val_73 = PHI <val_91(5), val_91(8), val_91(9), val_74(21)>
  # base_76 = PHI <base_92(5), base_96(8), base_95(9), base_76(21)>
  # c_78 = PHI <c_77(5), c_98(8), c_94(9), c_79(21)>
  _7 = (sizetype) c_78;
  _8 = _7 + 1;
  _9 = &_ctype_ + _8;
  _10 = *_9;
  _11 = (int) _10;
  _12 = _11 & 4;
  if (_12 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  if (base_76 == 8)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  _13 = (int) c_78;
  _14 = _13 + -48;
  _15 = (long unsigned int) _14;
  if (_15 > 7)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  goto <bb 22>; [INV]

  <bb 14> :
  _16 = (long unsigned int) base_76;
  _17 = val_73 * _16;
  _18 = (long unsigned int) c_78;
  _19 = _17 + _18;
  val_104 = _19 + 4294967248;
  cp_105 = cp_71 + 1;
  c_106 = *cp_105;
  goto <bb 21>; [INV]

  <bb 15> :
  if (base_76 == 16)
    goto <bb 16>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 16> :
  _20 = (sizetype) c_78;
  _21 = _20 + 1;
  _22 = &_ctype_ + _21;
  _23 = *_22;
  _24 = (int) _23;
  _25 = _24 & 68;
  if (_25 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 17> :
  _26 = val_73 << 4;
  _27 = (int) c_78;
  _28 = _27 + 10;
  _29 = (sizetype) c_78;
  _30 = _29 + 1;
  _31 = &_ctype_ + _30;
  _32 = *_31;
  _33 = (int) _32;
  _34 = _33 & 3;
  if (_34 == 2)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  iftmp.0_100 = 97;
  goto <bb 20>; [INV]

  <bb 19> :
  iftmp.0_99 = 65;

  <bb 20> :
  # iftmp.0_82 = PHI <iftmp.0_100(18), iftmp.0_99(19)>
  _35 = _28 - iftmp.0_82;
  _36 = (long unsigned int) _35;
  val_101 = _26 | _36;
  cp_102 = cp_71 + 1;
  c_103 = *cp_102;

  <bb 21> :
  # cp_72 = PHI <cp_105(14), cp_102(20)>
  # val_74 = PHI <val_104(14), val_101(20)>
  # c_79 = PHI <c_106(14), c_103(20)>
  goto <bb 10>; [INV]

  <bb 22> :
  if (c_78 == 46)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  _37 = &parts + 12;
  if (pp_80 >= _37)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  _127 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 57>; [INV]

  <bb 25> :
  pp.1_38 = pp_80;
  pp_123 = pp.1_38 + 4;
  *pp.1_38 = val_73;
  cp_125 = cp_71 + 1;
  c_126 = *cp_125;
  goto <bb 27>; [INV]

  <bb 26> :
  goto <bb 28>; [INV]

  <bb 27> :
  goto <bb 3>; [INV]

  <bb 28> :
  if (c_78 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 29> :
  _39 = (sizetype) c_78;
  _40 = _39 + 1;
  _41 = &_ctype_ + _40;
  _42 = *_41;
  _43 = (int) _42;
  _44 = _43 & 8;
  if (_44 == 0)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  _107 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 57>; [INV]

  <bb 31> :
  _45 = pp_80 - &parts;
  _46 = _45 /[ex] 4;
  _47 = _46 + 1;
  switch (_47) <default: <L53> [INV], case 0: <L33> [INV], case 1: <L34> [INV], case 2: <L35> [INV], case 3: <L40> [INV], case 4: <L46> [INV]>

  <bb 32> :
<L33>:
  _121 = 0;
  goto <bb 57>; [INV]

  <bb 33> :
<L34>:
  goto <bb 54>; [INV]

  <bb 34> :
<L35>:
  if (val_73 > 16777215)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _116 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 57>; [INV]

  <bb 36> :
  _48 = parts[0];
  if (_48 > 255)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  _115 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 57>; [INV]

  <bb 38> :
  _49 = parts[0];
  _50 = _49 << 24;
  val_114 = val_73 | _50;
  goto <bb 54>; [INV]

  <bb 39> :
<L40>:
  if (val_73 > 65535)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  _113 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 57>; [INV]

  <bb 41> :
  _51 = parts[0];
  if (_51 > 255)
    goto <bb 43>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 42> :
  _52 = parts[1];
  if (_52 > 255)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  _112 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 57>; [INV]

  <bb 44> :
  _53 = parts[0];
  _54 = _53 << 24;
  _55 = parts[1];
  _56 = _55 << 16;
  _57 = _54 | _56;
  val_111 = val_73 | _57;
  goto <bb 54>; [INV]

  <bb 45> :
<L46>:
  if (val_73 > 255)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 46> :
  _110 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 57>; [INV]

  <bb 47> :
  _58 = parts[0];
  if (_58 > 255)
    goto <bb 50>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 48> :
  _59 = parts[1];
  if (_59 > 255)
    goto <bb 50>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 49> :
  _60 = parts[2];
  if (_60 > 255)
    goto <bb 50>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 50> :
  _109 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 57>; [INV]

  <bb 51> :
  _61 = parts[0];
  _62 = _61 << 24;
  _63 = parts[1];
  _64 = _63 << 16;
  _65 = _62 | _64;
  _66 = parts[2];
  _67 = _66 << 8;
  _68 = _65 | _67;
  val_108 = val_73 | _68;
  goto <bb 54>; [INV]

  <bb 52> :
<L53>:

  <bb 53> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 53>; [INV]

  <bb 54> :
  # val_75 = PHI <val_73(33), val_114(38), val_111(44), val_108(51)>
  if (addr_117(D) != 0B)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  _69 = lwip_htonl (val_75);
  addr_117(D)->addr = _69;

  <bb 56> :
  _120 = 1;

  <bb 57> :
  # _81 = PHI <_128(4), _127(24), _107(30), _121(32), _116(35), _115(37), _113(40), _112(43), _110(46), _109(50), _120(56)>
  parts ={v} {CLOBBER};

  <bb 58> :
<L61>:
  return _81;

}



;; Function ip4addr_ntoa (ip4addr_ntoa, funcdef_no=5, decl_uid=6427, cgraph_uid=6, symbol_order=7)

ip4addr_ntoa (const struct ip4_addr_t * addr)
{
  static char str[16];
  char * D.7135;
  char * _4;

  <bb 2> :
  _4 = ip4addr_ntoa_r (addr_2(D), &str, 16);

  <bb 3> :
<L0>:
  return _4;

}



;; Function ip4addr_ntoa_r (ip4addr_ntoa_r, funcdef_no=6, decl_uid=6431, cgraph_uid=7, symbol_order=8)

ip4addr_ntoa_r (const struct ip4_addr_t * addr, char * buf, int buflen)
{
  int len;
  u8_t i;
  u8_t n;
  u8_t rem;
  u8_t * ap;
  char * rp;
  char inv[3];
  u32_t s_addr;
  char * D.7139;
  long unsigned int _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char i.2_5;
  int _6;
  char _7;
  unsigned char _8;
  int len.3_9;
  int _10;
  char * rp.4_11;
  char _12;
  unsigned char i.5_13;
  int len.6_14;
  char * rp.7_15;
  unsigned char n.8_16;
  char * _25;
  char * _40;
  char * _53;
  char * _57;

  <bb 2> :
  len_30 = 0;
  _1 = addr_32(D)->addr;
  s_addr = _1;
  rp_35 = buf_34(D);
  ap_36 = &s_addr;
  n_37 = 0;
  goto <bb 13>; [INV]

  <bb 3> :
  i_41 = 0;

  <bb 4> :
  # i_21 = PHI <i_41(3), i_44(4)>
  _2 = *ap_19;
  rem_42 = _2 % 10;
  _3 = *ap_19;
  _4 = _3 / 10;
  *ap_19 = _4;
  i.2_5 = i_21;
  i_44 = i.2_5 + 1;
  _6 = (int) i.2_5;
  _7 = rem_42 + 48;
  inv[_6] = _7;
  _8 = *ap_19;
  if (_8 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  goto <bb 9>; [INV]

  <bb 6> :
  len.3_9 = len_23;
  len_54 = len.3_9 + 1;
  if (buflen_48(D) <= len.3_9)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _57 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 8> :
  _10 = (int) i_46;
  rp.4_11 = rp_17;
  rp_55 = rp.4_11 + 1;
  _12 = inv[_10];
  *rp.4_11 = _12;

  <bb 9> :
  # rp_17 = PHI <rp_18(5), rp_55(8)>
  # i_22 = PHI <i_44(5), i_46(8)>
  # len_23 = PHI <len_24(5), len_54(8)>
  i.5_13 = i_22;
  i_46 = i.5_13 + 255;
  if (i.5_13 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  len.6_14 = len_23;
  len_47 = len.6_14 + 1;
  if (buflen_48(D) <= len.6_14)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _53 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 12> :
  rp.7_15 = rp_17;
  rp_49 = rp.7_15 + 1;
  *rp.7_15 = 46;
  ap_51 = ap_19 + 1;
  n.8_16 = n_20;
  n_52 = n.8_16 + 1;

  <bb 13> :
  # rp_18 = PHI <rp_35(2), rp_49(12)>
  # ap_19 = PHI <ap_36(2), ap_51(12)>
  # n_20 = PHI <n_37(2), n_52(12)>
  # len_24 = PHI <len_30(2), len_47(12)>
  if (n_20 <= 3)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  rp_38 = rp_18 + 4294967295;
  *rp_38 = 0;
  _40 = buf_34(D);

  <bb 15> :
  # _25 = PHI <_57(7), _53(11), _40(14)>
  s_addr ={v} {CLOBBER};
  inv ={v} {CLOBBER};

  <bb 16> :
<L13>:
  return _25;

}


