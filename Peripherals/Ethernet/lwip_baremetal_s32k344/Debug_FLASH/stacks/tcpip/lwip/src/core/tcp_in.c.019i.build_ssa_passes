tcp_trigger_input_pcb_close ()
{
  <bb 2> :
  recv_flags.214_1 = recv_flags;
  _2 = recv_flags.214_1 | 16;
  recv_flags = _2;
  return;

}


tcp_parseopt (struct tcp_pcb * pcb)
{
  u8_t opt;
  u16_t mss;
  u8_t data;
  u16_t iftmp.210;
  unsigned char D.8500;

  <bb 2> :
  if (pcb == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  tcphdr_optlen.207_1 = tcphdr_optlen;
  if (tcphdr_optlen.207_1 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 5> :
  tcp_optidx = 0;
  goto <bb 20>; [INV]

  <bb 6> :
  opt = tcp_get_next_optbyte ();
  _2 = (int) opt;
  switch (_2) <default: <L15> [INV], case 0: <L5> [INV], case 1: <L6> [INV], case 2: <L7> [INV]>

  <bb 7> :
<L5>:
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 8> :
<L6>:
  goto <bb 20>; [INV]

  <bb 9> :
<L7>:
  _3 = tcp_get_next_optbyte ();
  if (_3 != 4)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  tcp_optidx.208_4 = tcp_optidx;
  _5 = (int) tcp_optidx.208_4;
  _6 = _5 + 1;
  tcphdr_optlen.209_7 = tcphdr_optlen;
  _8 = (int) tcphdr_optlen.209_7;
  if (_6 >= _8)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 12> :
  _9 = tcp_get_next_optbyte ();
  _10 = (short unsigned int) _9;
  mss = _10 << 8;
  D.8500 = tcp_get_next_optbyte ();
  _11 = (short unsigned int) D.8500;
  mss = mss | _11;
  if (mss <= 1460)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  if (mss != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  iftmp.210 = mss;
  goto <bb 16>; [INV]

  <bb 15> :
  iftmp.210 = 1460;

  <bb 16> :
  pcb->mss = iftmp.210;
  goto <bb 20>; [INV]

  <bb 17> :
<L15>:
  data = tcp_get_next_optbyte ();
  if (data <= 1)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 19> :
  _12 = (short unsigned int) data;
  tcp_optidx.211_13 = tcp_optidx;
  _14 = _12 + tcp_optidx.211_13;
  _15 = _14 + 65534;
  tcp_optidx = _15;

  <bb 20> :
  tcp_optidx.212_16 = tcp_optidx;
  tcphdr_optlen.213_17 = tcphdr_optlen;
  if (tcp_optidx.212_16 < tcphdr_optlen.213_17)
    goto <bb 6>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
<L22>:
  return;

}


tcp_get_next_optbyte ()
{
  u8_t idx;
  u8_t * opts;
  u16_t optidx;
  u8_t D.8491;

  <bb 2> :
  tcp_optidx.200_1 = tcp_optidx;
  tcp_optidx.201_2 = tcp_optidx.200_1;
  _3 = tcp_optidx.201_2 + 1;
  tcp_optidx = _3;
  optidx = tcp_optidx.201_2;
  tcphdr_opt2.202_4 = tcphdr_opt2;
  if (tcphdr_opt2.202_4 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  tcphdr_opt1len.203_5 = tcphdr_opt1len;
  if (optidx < tcphdr_opt1len.203_5)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  tcphdr.204_6 = tcphdr;
  opts = tcphdr.204_6 + 20;
  _7 = (sizetype) optidx;
  _8 = opts + _7;
  D.8491 = *_8;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  _9 = (unsigned char) optidx;
  tcphdr_opt1len.205_10 = tcphdr_opt1len;
  _11 = (unsigned char) tcphdr_opt1len.205_10;
  idx = _9 - _11;
  tcphdr_opt2.206_12 = tcphdr_opt2;
  _13 = (sizetype) idx;
  _14 = tcphdr_opt2.206_12 + _13;
  D.8491 = *_14;
  // predicted unlikely by early return (on trees) predictor.

  <bb 6> :
<L3>:
  return D.8491;

}


tcp_receive (struct tcp_pcb * pcb)
{
  u16_t off;
  u16_t new_tot_len;
  u32_t off32;
  struct pbuf * p;
  u8_t num_seg;
  tcpwnd_size_t increase;
  tcpwnd_size_t acked;
  int found_dupack;
  u32_t right_wnd_edge;
  s16_t m;
  u16_t iftmp.190;
  u16_t iftmp.188;
  u8_t iftmp.169;

  <bb 2> :
  found_dupack = 0;
  if (pcb == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  _1 = pcb->state;
  if (_1 <= 3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  flags.153_2 = flags;
  _3 = (unsigned int) flags.153_2;
  _4 = _3 & 16;
  if (_4 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 7> :
  _5 = pcb->snd_wnd;
  _6 = (long unsigned int) _5;
  _7 = pcb->snd_wl2;
  right_wnd_edge = _6 + _7;
  _8 = pcb->snd_wl1;
  seqno.154_9 = seqno;
  _10 = _8 - seqno.154_9;
  _11 = (long int) _10;
  if (_11 < 0)
    goto <bb 12>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _12 = pcb->snd_wl1;
  seqno.155_13 = seqno;
  if (_12 == seqno.155_13)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = pcb->snd_wl2;
  ackno.156_15 = ackno;
  _16 = _14 - ackno.156_15;
  _17 = (long int) _16;
  if (_17 < 0)
    goto <bb 12>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _18 = pcb->snd_wl2;
  ackno.157_19 = ackno;
  if (_18 == ackno.157_19)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  tcphdr.158_20 = tcphdr;
  _21 = tcphdr.158_20->wnd;
  _22 = pcb->snd_wnd;
  if (_21 > _22)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  tcphdr.159_23 = tcphdr;
  _24 = tcphdr.159_23->wnd;
  pcb->snd_wnd = _24;
  _25 = pcb->snd_wnd_max;
  _26 = pcb->snd_wnd;
  if (_25 < _26)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _27 = pcb->snd_wnd;
  pcb->snd_wnd_max = _27;

  <bb 14> :
  seqno.160_28 = seqno;
  pcb->snd_wl1 = seqno.160_28;
  ackno.161_29 = ackno;
  pcb->snd_wl2 = ackno.161_29;

  <bb 15> :
  ackno.162_30 = ackno;
  _31 = pcb->lastack;
  _32 = ackno.162_30 - _31;
  _33 = (long int) _32;
  if (_33 <= 0)
    goto <bb 16>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 16> :
  tcplen.163_34 = tcplen;
  if (tcplen.163_34 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 17> :
  _35 = pcb->snd_wl2;
  _36 = pcb->snd_wnd;
  _37 = (long unsigned int) _36;
  _38 = _35 + _37;
  if (right_wnd_edge == _38)
    goto <bb 18>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 18> :
  _39 = pcb->rtime;
  if (_39 >= 0)
    goto <bb 19>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 19> :
  _40 = pcb->lastack;
  ackno.164_41 = ackno;
  if (_40 == ackno.164_41)
    goto <bb 20>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 20> :
  found_dupack = 1;
  _42 = pcb->dupacks;
  if (_42 != 255)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _43 = pcb->dupacks;
  _44 = _43 + 1;
  pcb->dupacks = _44;

  <bb 22> :
  _45 = pcb->dupacks;
  if (_45 > 3)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  _46 = pcb->cwnd;
  _47 = pcb->mss;
  _48 = _46 + _47;
  _49 = pcb->cwnd;
  if (_48 >= _49)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  _50 = pcb->cwnd;
  _51 = pcb->mss;
  _52 = _50 + _51;
  pcb->cwnd = _52;
  goto <bb 26>; [INV]

  <bb 25> :
  pcb->cwnd = 65535;

  <bb 26> :
  _53 = pcb->dupacks;
  if (_53 > 2)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  tcp_rexmit_fast (pcb);

  <bb 28> :
  if (found_dupack == 0)
    goto <bb 29>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 29> :
  pcb->dupacks = 0;
  goto <bb 65>; [INV]

  <bb 30> :
  ackno.165_54 = ackno;
  _55 = pcb->lastack;
  _56 = ackno.165_54 - _55;
  _57 = _56 + 4294967295;
  _58 = (long int) _57;
  if (_58 >= 0)
    goto <bb 31>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 31> :
  ackno.166_59 = ackno;
  _60 = pcb->snd_nxt;
  _61 = ackno.166_59 - _60;
  _62 = (long int) _61;
  if (_62 <= 0)
    goto <bb 32>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 32> :
  _63 = pcb->flags;
  _64 = (unsigned int) _63;
  _65 = _64 & 4;
  if (_65 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  _66 = pcb->flags;
  _67 = _66 & 65531;
  pcb->flags = _67;
  _68 = pcb->ssthresh;
  pcb->cwnd = _68;
  pcb->bytes_acked = 0;

  <bb 34> :
  pcb->nrtx = 0;
  _69 = pcb->sa;
  _70 = _69 >> 3;
  _71 = (unsigned short) _70;
  _72 = pcb->sv;
  _73 = (unsigned short) _72;
  _74 = _71 + _73;
  _75 = (short int) _74;
  pcb->rto = _75;
  ackno.167_76 = ackno;
  _77 = (short unsigned int) ackno.167_76;
  _78 = pcb->lastack;
  _79 = (short unsigned int) _78;
  acked = _77 - _79;
  pcb->dupacks = 0;
  ackno.168_80 = ackno;
  pcb->lastack = ackno.168_80;
  _81 = pcb->state;
  if (_81 > 3)
    goto <bb 35>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 35> :
  _82 = pcb->cwnd;
  _83 = pcb->ssthresh;
  if (_82 < _83)
    goto <bb 36>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 36> :
  _84 = pcb->flags;
  _85 = (unsigned int) _84;
  _86 = _85 & 2048;
  if (_86 != 0)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  iftmp.169 = 1;
  goto <bb 39>; [INV]

  <bb 38> :
  iftmp.169 = 2;

  <bb 39> :
  num_seg = iftmp.169;
  _87 = (short unsigned int) num_seg;
  _88 = pcb->mss;
  _89 = _87 * _88;
  increase = MIN_EXPR <acked, _89>;
  _90 = pcb->cwnd;
  _91 = increase + _90;
  _92 = pcb->cwnd;
  if (_91 >= _92)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  _93 = pcb->cwnd;
  _94 = increase + _93;
  pcb->cwnd = _94;
  goto <bb 49>; [INV]

  <bb 41> :
  pcb->cwnd = 65535;
  goto <bb 49>; [INV]

  <bb 42> :
  _95 = pcb->bytes_acked;
  _96 = acked + _95;
  _97 = pcb->bytes_acked;
  if (_96 >= _97)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  _98 = pcb->bytes_acked;
  _99 = acked + _98;
  pcb->bytes_acked = _99;
  goto <bb 45>; [INV]

  <bb 44> :
  pcb->bytes_acked = 65535;

  <bb 45> :
  _100 = pcb->bytes_acked;
  _101 = pcb->cwnd;
  if (_100 >= _101)
    goto <bb 46>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 46> :
  _102 = pcb->bytes_acked;
  _103 = pcb->cwnd;
  _104 = _102 - _103;
  pcb->bytes_acked = _104;
  _105 = pcb->cwnd;
  _106 = pcb->mss;
  _107 = _105 + _106;
  _108 = pcb->cwnd;
  if (_107 >= _108)
    goto <bb 47>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 47> :
  _109 = pcb->cwnd;
  _110 = pcb->mss;
  _111 = _109 + _110;
  pcb->cwnd = _111;
  goto <bb 49>; [INV]

  <bb 48> :
  pcb->cwnd = 65535;

  <bb 49> :
  _112 = pcb->unacked;
  _113 = pcb->unsent;
  _114 = tcp_free_acked_segments (pcb, _112, "unacked", _113);
  pcb->unacked = _114;
  _115 = pcb->unsent;
  _116 = pcb->unacked;
  _117 = tcp_free_acked_segments (pcb, _115, "unsent", _116);
  pcb->unsent = _117;
  _118 = pcb->unacked;
  if (_118 == 0B)
    goto <bb 50>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 50> :
  pcb->rtime = -1;
  goto <bb 52>; [INV]

  <bb 51> :
  pcb->rtime = 0;

  <bb 52> :
  pcb->polltmr = 0;
  _119 = pcb->unsent;
  if (_119 == 0B)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  pcb->unsent_oversize = 0;

  <bb 54> :
  _120 = ip_data.current_ip6_header;
  if (_120 != 0B)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]

  <bb 55> :
  nd6_reachability_hint (&ip_data.current_iphdr_src.u_addr.ip6);

  <bb 56> :
  _121 = pcb->snd_buf;
  recv_acked.170_122 = recv_acked;
  _123 = _121 + recv_acked.170_122;
  pcb->snd_buf = _123;
  _124 = pcb->flags;
  _125 = (unsigned int) _124;
  _126 = _125 & 2048;
  if (_126 != 0)
    goto <bb 57>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 57> :
  _127 = pcb->unacked;
  if (_127 == 0B)
    goto <bb 58>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 58> :
  _128 = pcb->unsent;
  if (_128 == 0B)
    goto <bb 60>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 59> :
  _129 = pcb->rto_end;
  _130 = pcb->unsent;
  _131 = _130->tcphdr;
  _132 = _131->seqno;
  _133 = lwip_htonl (_132);
  _134 = _129 - _133;
  _135 = (long int) _134;
  if (_135 <= 0)
    goto <bb 60>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 60> :
  _136 = pcb->flags;
  _137 = _136 & 63487;
  pcb->flags = _137;
  goto <bb 63>; [INV]

  <bb 61> :
  _138 = pcb->rto_end;
  _139 = pcb->unacked;
  _140 = _139->tcphdr;
  _141 = _140->seqno;
  _142 = lwip_htonl (_141);
  _143 = _138 - _142;
  _144 = (long int) _143;
  if (_144 <= 0)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  _145 = pcb->flags;
  _146 = _145 & 63487;
  pcb->flags = _146;

  <bb 63> :
  goto <bb 65>; [INV]

  <bb 64> :
  tcp_send_empty_ack (pcb);

  <bb 65> :
  _147 = pcb->rttest;
  if (_147 != 0)
    goto <bb 66>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 66> :
  _148 = pcb->rtseq;
  ackno.171_149 = ackno;
  _150 = _148 - ackno.171_149;
  _151 = (long int) _150;
  if (_151 < 0)
    goto <bb 67>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 67> :
  tcp_ticks.172_152 = tcp_ticks;
  _153 = (unsigned short) tcp_ticks.172_152;
  _154 = pcb->rttest;
  _155 = (unsigned short) _154;
  _156 = _153 - _155;
  m = (s16_t) _156;
  m.173_157 = (unsigned short) m;
  _158 = pcb->sa;
  _159 = _158 >> 3;
  _160 = (unsigned short) _159;
  _161 = m.173_157 - _160;
  m = (s16_t) _161;
  _162 = pcb->sa;
  _163 = (unsigned short) _162;
  m.174_164 = (unsigned short) m;
  _165 = _163 + m.174_164;
  _166 = (short int) _165;
  pcb->sa = _166;
  if (m < 0)
    goto <bb 68>; [INV]
  else
    goto <bb 69>; [INV]

  <bb 68> :
  m.175_167 = (unsigned short) m;
  _168 = -m.175_167;
  m = (s16_t) _168;

  <bb 69> :
  m.176_169 = (unsigned short) m;
  _170 = pcb->sv;
  _171 = _170 >> 2;
  _172 = (unsigned short) _171;
  _173 = m.176_169 - _172;
  m = (s16_t) _173;
  _174 = pcb->sv;
  _175 = (unsigned short) _174;
  m.177_176 = (unsigned short) m;
  _177 = _175 + m.177_176;
  _178 = (short int) _177;
  pcb->sv = _178;
  _179 = pcb->sa;
  _180 = _179 >> 3;
  _181 = (unsigned short) _180;
  _182 = pcb->sv;
  _183 = (unsigned short) _182;
  _184 = _181 + _183;
  _185 = (short int) _184;
  pcb->rto = _185;
  pcb->rttest = 0;

  <bb 70> :
  tcplen.178_186 = tcplen;
  if (tcplen.178_186 != 0)
    goto <bb 71>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 71> :
  _187 = pcb->state;
  if (_187 <= 6)
    goto <bb 72>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 72> :
  _188 = pcb->rcv_nxt;
  seqno.179_189 = seqno;
  _190 = _188 - seqno.179_189;
  _191 = _190 + 4294967295;
  _192 = (long int) _191;
  if (_192 >= 0)
    goto <bb 73>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 73> :
  _193 = pcb->rcv_nxt;
  tcplen.180_194 = tcplen;
  _195 = (long unsigned int) tcplen.180_194;
  seqno.181_196 = seqno;
  _197 = _195 + seqno.181_196;
  _198 = _193 - _197;
  _199 = _198 + 1;
  _200 = (long int) _199;
  if (_200 <= 0)
    goto <bb 74>; [INV]
  else
    goto <bb 84>; [INV]

  <bb 74> :
  p = inseg.p;
  _201 = pcb->rcv_nxt;
  seqno.182_202 = seqno;
  off32 = _201 - seqno.182_202;
  _203 = inseg.p;
  if (_203 == 0B)
    goto <bb 75>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 75> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 75>; [INV]

  <bb 76> :
  if (off32 > 65534)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 77>; [INV]

  <bb 78> :
  off = (u16_t) off32;
  _204 = inseg.p;
  _205 = _204->tot_len;
  if (off > _205)
    goto <bb 79>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 79> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 79>; [INV]

  <bb 80> :
  _206 = inseg.len;
  _207 = _206 - off;
  inseg.len = _207;
  _208 = inseg.p;
  _209 = _208->tot_len;
  new_tot_len = _209 - off;
  goto <bb 82>; [INV]

  <bb 81> :
  _210 = p->len;
  off = off - _210;
  p->tot_len = new_tot_len;
  p->len = 0;
  p = p->next;

  <bb 82> :
  _211 = p->len;
  if (off > _211)
    goto <bb 81>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 83> :
  _212 = (unsigned int) off;
  pbuf_remove_header (p, _212);
  _213 = pcb->rcv_nxt;
  seqno = _213;
  _214 = inseg.tcphdr;
  seqno.183_215 = seqno;
  _214->seqno = seqno.183_215;
  goto <bb 86>; [INV]

  <bb 84> :
  seqno.184_216 = seqno;
  _217 = pcb->rcv_nxt;
  _218 = seqno.184_216 - _217;
  _219 = (long int) _218;
  if (_219 < 0)
    goto <bb 85>; [INV]
  else
    goto <bb 86>; [INV]

  <bb 85> :
  _220 = pcb->flags;
  _221 = _220 | 2;
  pcb->flags = _221;

  <bb 86> :
  seqno.185_222 = seqno;
  _223 = pcb->rcv_nxt;
  _224 = seqno.185_222 - _223;
  _225 = (long int) _224;
  if (_225 >= 0)
    goto <bb 87>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 87> :
  seqno.186_226 = seqno;
  _227 = pcb->rcv_nxt;
  _228 = pcb->rcv_wnd;
  _229 = (long unsigned int) _228;
  _230 = _227 + _229;
  _231 = seqno.186_226 - _230;
  _232 = _231 + 1;
  _233 = (long int) _232;
  if (_233 <= 0)
    goto <bb 88>; [INV]
  else
    goto <bb 115>; [INV]

  <bb 88> :
  _234 = pcb->rcv_nxt;
  seqno.187_235 = seqno;
  if (_234 == seqno.187_235)
    goto <bb 89>; [INV]
  else
    goto <bb 113>; [INV]

  <bb 89> :
  _236 = inseg.len;
  _237 = inseg.tcphdr;
  _238 = _237->_hdrlen_rsvd_flags;
  _239 = lwip_htons (_238);
  _240 = (unsigned char) _239;
  _241 = (unsigned int) _240;
  _242 = _241 & 3;
  if (_242 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 90> :
  iftmp.188 = 1;
  goto <bb 92>; [INV]

  <bb 91> :
  iftmp.188 = 0;

  <bb 92> :
  _243 = iftmp.188 + _236;
  tcplen = _243;
  _244 = pcb->rcv_wnd;
  tcplen.189_245 = tcplen;
  if (_244 < tcplen.189_245)
    goto <bb 93>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 93> :
  _246 = inseg.tcphdr;
  _247 = _246->_hdrlen_rsvd_flags;
  _248 = lwip_htons (_247);
  _249 = (unsigned char) _248;
  _250 = (unsigned int) _249;
  _251 = _250 & 1;
  if (_251 != 0)
    goto <bb 94>; [INV]
  else
    goto <bb 95>; [INV]

  <bb 94> :
  _252 = inseg.tcphdr;
  _253 = _252->_hdrlen_rsvd_flags;
  _254 = (signed short) _253;
  _255 = _254 & -16129;
  _256 = inseg.tcphdr;
  _257 = _256->_hdrlen_rsvd_flags;
  _258 = lwip_htons (_257);
  _259 = (unsigned char) _258;
  _260 = (short unsigned int) _259;
  _261 = _260 & 62;
  _262 = lwip_htons (_261);
  _263 = (signed short) _262;
  _264 = _255 | _263;
  _265 = inseg.tcphdr;
  _266 = (short unsigned int) _264;
  _265->_hdrlen_rsvd_flags = _266;

  <bb 95> :
  _267 = pcb->rcv_wnd;
  inseg.len = _267;
  _268 = inseg.tcphdr;
  _269 = _268->_hdrlen_rsvd_flags;
  _270 = lwip_htons (_269);
  _271 = (unsigned char) _270;
  _272 = (unsigned int) _271;
  _273 = _272 & 2;
  if (_273 != 0)
    goto <bb 96>; [INV]
  else
    goto <bb 97>; [INV]

  <bb 96> :
  _274 = inseg.len;
  _275 = _274 + 65535;
  inseg.len = _275;

  <bb 97> :
  _276 = inseg.p;
  _277 = inseg.len;
  pbuf_realloc (_276, _277);
  _278 = inseg.len;
  _279 = inseg.tcphdr;
  _280 = _279->_hdrlen_rsvd_flags;
  _281 = lwip_htons (_280);
  _282 = (unsigned char) _281;
  _283 = (unsigned int) _282;
  _284 = _283 & 3;
  if (_284 != 0)
    goto <bb 98>; [INV]
  else
    goto <bb 99>; [INV]

  <bb 98> :
  iftmp.190 = 1;
  goto <bb 100>; [INV]

  <bb 99> :
  iftmp.190 = 0;

  <bb 100> :
  _285 = iftmp.190 + _278;
  tcplen = _285;
  tcplen.191_286 = tcplen;
  _287 = (long unsigned int) tcplen.191_286;
  seqno.192_288 = seqno;
  _289 = _287 + seqno.192_288;
  _290 = pcb->rcv_nxt;
  _291 = pcb->rcv_wnd;
  _292 = (long unsigned int) _291;
  _293 = _290 + _292;
  if (_289 != _293)
    goto <bb 101>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 101> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 101>; [INV]

  <bb 102> :
  tcplen.193_294 = tcplen;
  _295 = (long unsigned int) tcplen.193_294;
  seqno.194_296 = seqno;
  _297 = _295 + seqno.194_296;
  pcb->rcv_nxt = _297;
  _298 = pcb->rcv_wnd;
  tcplen.195_299 = tcplen;
  if (_298 < tcplen.195_299)
    goto <bb 103>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 103> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 103>; [INV]

  <bb 104> :
  _300 = pcb->rcv_wnd;
  tcplen.196_301 = tcplen;
  _302 = _300 - tcplen.196_301;
  pcb->rcv_wnd = _302;
  tcp_update_rcv_ann_wnd (pcb);
  _303 = inseg.p;
  _304 = _303->tot_len;
  if (_304 != 0)
    goto <bb 105>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 105> :
  _305 = inseg.p;
  recv_data = _305;
  inseg.p = 0B;

  <bb 106> :
  _306 = inseg.tcphdr;
  _307 = _306->_hdrlen_rsvd_flags;
  _308 = lwip_htons (_307);
  _309 = (unsigned char) _308;
  _310 = (unsigned int) _309;
  _311 = _310 & 1;
  if (_311 != 0)
    goto <bb 107>; [INV]
  else
    goto <bb 108>; [INV]

  <bb 107> :
  recv_flags.197_312 = recv_flags;
  _313 = recv_flags.197_312 | 32;
  recv_flags = _313;

  <bb 108> :
  _314 = pcb->flags;
  _315 = (unsigned int) _314;
  _316 = _315 & 1;
  if (_316 != 0)
    goto <bb 109>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 109> :
  _317 = pcb->flags;
  _318 = _317 & 65534;
  pcb->flags = _318;
  _319 = pcb->flags;
  _320 = _319 | 2;
  pcb->flags = _320;
  goto <bb 111>; [INV]

  <bb 110> :
  _321 = pcb->flags;
  _322 = _321 | 1;
  pcb->flags = _322;

  <bb 111> :
  _323 = ip_data.current_ip6_header;
  if (_323 != 0B)
    goto <bb 112>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 112> :
  nd6_reachability_hint (&ip_data.current_iphdr_src.u_addr.ip6);
  goto <bb 114>; [INV]

  <bb 113> :
  tcp_send_empty_ack (pcb);

  <bb 114> :
  goto <bb 116>; [INV]

  <bb 115> :
  tcp_send_empty_ack (pcb);

  <bb 116> :
  goto <bb 120>; [INV]

  <bb 117> :
  seqno.198_324 = seqno;
  _325 = pcb->rcv_nxt;
  _326 = seqno.198_324 - _325;
  _327 = (long int) _326;
  if (_327 < 0)
    goto <bb 119>; [INV]
  else
    goto <bb 118>; [INV]

  <bb 118> :
  seqno.199_328 = seqno;
  _329 = pcb->rcv_nxt;
  _330 = pcb->rcv_wnd;
  _331 = (long unsigned int) _330;
  _332 = _329 + _331;
  _333 = seqno.199_328 - _332;
  _334 = _333 + 1;
  _335 = (long int) _334;
  if (_335 > 0)
    goto <bb 119>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 119> :
  _336 = pcb->flags;
  _337 = _336 | 2;
  pcb->flags = _337;

  <bb 120> :
  return;

}


tcp_free_acked_segments (struct tcp_pcb * pcb, struct tcp_seg * seg_list, const char * dbg_list_name, struct tcp_seg * dbg_other_seg_list)
{
  u16_t clen;
  struct tcp_seg * next;
  struct tcp_seg * D.8348;
  unsigned int iftmp.151;

  <bb 2> :
  goto <bb 9>; [INV]

  <bb 3> :
  next = seg_list;
  seg_list = seg_list->next;
  _1 = next->p;
  clen = pbuf_clen (_1);
  _2 = pcb->snd_queuelen;
  if (clen > _2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 4>; [INV]

  <bb 5> :
  _3 = pcb->snd_queuelen;
  _4 = _3 - clen;
  pcb->snd_queuelen = _4;
  _5 = next->len;
  recv_acked.150_6 = recv_acked;
  _7 = _5 + recv_acked.150_6;
  recv_acked = _7;
  tcp_seg_free (next);
  _8 = pcb->snd_queuelen;
  if (_8 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  if (seg_list == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  if (dbg_other_seg_list == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 8>; [INV]

  <bb 9> :
  if (seg_list != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 10> :
  _9 = seg_list->tcphdr;
  _10 = _9->seqno;
  _11 = lwip_htonl (_10);
  _12 = seg_list->len;
  _13 = (unsigned int) _12;
  _14 = seg_list->tcphdr;
  _15 = _14->_hdrlen_rsvd_flags;
  _16 = lwip_htons (_15);
  _17 = (unsigned char) _16;
  _18 = (unsigned int) _17;
  _19 = _18 & 3;
  if (_19 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  iftmp.151 = 1;
  goto <bb 13>; [INV]

  <bb 12> :
  iftmp.151 = 0;

  <bb 13> :
  _20 = iftmp.151 + _13;
  _21 = _11 + _20;
  ackno.152_22 = ackno;
  _23 = _21 - ackno.152_22;
  _24 = (long int) _23;
  if (_24 <= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  D.8348 = seg_list;

  <bb 15> :
<L17>:
  return D.8348;

}


tcp_process (struct tcp_pcb * pcb)
{
  struct tcp_pcb * tcp_tmp_pcb;
  struct tcp_pcb * tcp_tmp_pcb;
  struct tcp_pcb * tcp_tmp_pcb;
  err_t err;
  u8_t acceptable;
  struct tcp_seg * rseg;
  short unsigned int iftmp.120;
  short unsigned int iftmp.119;
  short unsigned int iftmp.106;
  short unsigned int iftmp.105;
  struct netif * iftmp.104;
  err_t D.8208;

  <bb 2> :
  acceptable = 0;
  err = 0;
  if (pcb == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  flags.89_1 = flags;
  _2 = (unsigned int) flags.89_1;
  _3 = _2 & 4;
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 5> :
  _4 = pcb->state;
  if (_4 == 2)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _5 = pcb->snd_nxt;
  ackno.90_6 = ackno;
  if (_5 == ackno.90_6)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  acceptable = 1;
  goto <bb 13>; [INV]

  <bb 8> :
  _7 = pcb->rcv_nxt;
  seqno.91_8 = seqno;
  if (_7 == seqno.91_8)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  acceptable = 1;
  goto <bb 13>; [INV]

  <bb 10> :
  seqno.92_9 = seqno;
  _10 = pcb->rcv_nxt;
  _11 = seqno.92_9 - _10;
  _12 = (long int) _11;
  if (_12 >= 0)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  seqno.93_13 = seqno;
  _14 = pcb->rcv_nxt;
  _15 = pcb->rcv_wnd;
  _16 = (long unsigned int) _15;
  _17 = _14 + _16;
  _18 = seqno.93_13 - _17;
  _19 = (long int) _18;
  if (_19 <= 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _20 = pcb->flags;
  _21 = _20 | 2;
  pcb->flags = _21;

  <bb 13> :
  if (acceptable != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 14> :
  _22 = pcb->state;
  if (_22 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 15>; [INV]

  <bb 16> :
  recv_flags.94_23 = recv_flags;
  _24 = recv_flags.94_23 | 8;
  recv_flags = _24;
  _25 = pcb->flags;
  _26 = _25 & 65534;
  pcb->flags = _26;
  D.8208 = -14;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 140>; [INV]

  <bb 17> :
  D.8208 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 140>; [INV]

  <bb 18> :
  flags.95_27 = flags;
  _28 = (unsigned int) flags.95_27;
  _29 = _28 & 2;
  if (_29 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 19> :
  _30 = pcb->state;
  if (_30 != 2)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  _31 = pcb->state;
  if (_31 != 3)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _32 = pcb->flags;
  _33 = _32 | 2;
  pcb->flags = _33;
  D.8208 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 140>; [INV]

  <bb 22> :
  _34 = pcb->flags;
  _35 = (unsigned int) _34;
  _36 = _35 & 16;
  if (_36 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  tcp_ticks.96_37 = tcp_ticks;
  pcb->tmr = tcp_ticks.96_37;

  <bb 24> :
  pcb->keep_cnt_sent = 0;
  pcb->persist_probe = 0;
  tcp_parseopt (pcb);
  _38 = pcb->state;
  switch (_38) <default: <L162> [INV], case 2: <L30> [INV], case 3: <L67> [INV], case 4: <L102> [INV], case 5: <L106> [INV], case 6: <L129> [INV], case 7: <L102> [INV], case 8: <L140> [INV], case 9: <L155> [INV]>

  <bb 25> :
<L30>:
  flags.97_39 = flags;
  _40 = (unsigned int) flags.97_39;
  _41 = _40 & 16;
  if (_41 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 26> :
  flags.98_42 = flags;
  _43 = (unsigned int) flags.98_42;
  _44 = _43 & 2;
  if (_44 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 27> :
  _45 = pcb->lastack;
  _46 = _45 + 1;
  ackno.99_47 = ackno;
  if (_46 == ackno.99_47)
    goto <bb 28>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 28> :
  seqno.100_48 = seqno;
  _49 = seqno.100_48 + 1;
  pcb->rcv_nxt = _49;
  _50 = pcb->rcv_nxt;
  pcb->rcv_ann_right_edge = _50;
  ackno.101_51 = ackno;
  pcb->lastack = ackno.101_51;
  tcphdr.102_52 = tcphdr;
  _53 = tcphdr.102_52->wnd;
  pcb->snd_wnd = _53;
  _54 = pcb->snd_wnd;
  pcb->snd_wnd_max = _54;
  seqno.103_55 = seqno;
  _56 = seqno.103_55 + 4294967295;
  pcb->snd_wl1 = _56;
  pcb->state = 4;
  _57 = pcb->mss;
  _58 = &pcb->remote_ip;
  if (_58 != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 29> :
  _59 = pcb->remote_ip.type;
  if (_59 == 6)
    goto <bb 30>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 30> :
  _60 = &pcb->local_ip.u_addr.ip6;
  _61 = &pcb->remote_ip.u_addr.ip6;
  iftmp.104 = ip6_route (_60, _61);
  goto <bb 32>; [INV]

  <bb 31> :
  _62 = &pcb->remote_ip.u_addr.ip4;
  iftmp.104 = ip4_route (_62);

  <bb 32> :
  _63 = &pcb->remote_ip;
  _64 = tcp_eff_send_mss_netif (_57, iftmp.104, _63);
  pcb->mss = _64;
  _65 = pcb->mss;
  _66 = (unsigned int) _65;
  _67 = _66 * 4;
  _68 = pcb->mss;
  _69 = (unsigned int) _68;
  _70 = _69 * 2;
  _71 = MAX_EXPR <_70, 4380>;
  if (_67 < _71)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  _72 = pcb->mss;
  iftmp.105 = _72 * 4;
  goto <bb 38>; [INV]

  <bb 34> :
  _73 = pcb->mss;
  _74 = (unsigned int) _73;
  _75 = _74 * 2;
  if (_75 > 4380)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _76 = pcb->mss;
  iftmp.106 = _76 * 2;
  goto <bb 37>; [INV]

  <bb 36> :
  iftmp.106 = 4380;

  <bb 37> :
  iftmp.105 = iftmp.106;

  <bb 38> :
  pcb->cwnd = iftmp.105;
  _77 = pcb->snd_queuelen;
  if (_77 == 0)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 39>; [INV]

  <bb 40> :
  _78 = pcb->snd_queuelen;
  _79 = _78 + 65535;
  pcb->snd_queuelen = _79;
  rseg = pcb->unacked;
  if (rseg == 0B)
    goto <bb 41>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 41> :
  rseg = pcb->unsent;
  if (rseg == 0B)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]

  <bb 42> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 42>; [INV]

  <bb 43> :
  _80 = rseg->next;
  pcb->unsent = _80;
  goto <bb 45>; [INV]

  <bb 44> :
  _81 = rseg->next;
  pcb->unacked = _81;

  <bb 45> :
  tcp_seg_free (rseg);
  _82 = pcb->unacked;
  if (_82 == 0B)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 46> :
  pcb->rtime = -1;
  goto <bb 48>; [INV]

  <bb 47> :
  pcb->rtime = 0;
  pcb->nrtx = 0;

  <bb 48> :
  _83 = pcb->connected;
  if (_83 != 0B)
    goto <bb 49>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 49> :
  _84 = pcb->connected;
  _85 = pcb->callback_arg;
  err = _84 (_85, pcb, 0);
  goto <bb 51>; [INV]

  <bb 50> :
  err = 0;

  <bb 51> :
  if (err == -13)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  D.8208 = -13;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 140>; [INV]

  <bb 53> :
  _86 = pcb->flags;
  _87 = _86 | 2;
  pcb->flags = _87;
  goto <bb 57>; [INV]

  <bb 54> :
  flags.107_88 = flags;
  _89 = (unsigned int) flags.107_88;
  _90 = _89 & 16;
  if (_90 != 0)
    goto <bb 55>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 55> :
  ackno.108_91 = ackno;
  tcplen.109_92 = tcplen;
  _93 = (long unsigned int) tcplen.109_92;
  seqno.110_94 = seqno;
  _95 = _93 + seqno.110_94;
  tcphdr.111_96 = tcphdr;
  _97 = tcphdr.111_96->dest;
  tcphdr.112_98 = tcphdr;
  _99 = tcphdr.112_98->src;
  tcp_rst (pcb, ackno.108_91, _95, &ip_data.current_iphdr_dest, &ip_data.current_iphdr_src, _97, _99);
  _100 = pcb->nrtx;
  if (_100 <= 1)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  pcb->rtime = 0;
  tcp_rexmit_rto (pcb);

  <bb 57> :
  goto <bb 139>; [INV]

  <bb 58> :
<L67>:
  flags.113_101 = flags;
  _102 = (unsigned int) flags.113_101;
  _103 = _102 & 16;
  if (_103 != 0)
    goto <bb 59>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 59> :
  ackno.114_104 = ackno;
  _105 = pcb->lastack;
  _106 = ackno.114_104 - _105;
  _107 = _106 + 4294967295;
  _108 = (long int) _107;
  if (_108 >= 0)
    goto <bb 60>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 60> :
  ackno.115_109 = ackno;
  _110 = pcb->snd_nxt;
  _111 = ackno.115_109 - _110;
  _112 = (long int) _111;
  if (_112 <= 0)
    goto <bb 61>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 61> :
  pcb->state = 4;
  _113 = pcb->listener;
  if (_113 == 0B)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  err = -6;
  goto <bb 68>; [INV]

  <bb 63> :
  _114 = pcb->listener;
  _115 = _114->accept;
  if (_115 == 0B)
    goto <bb 64>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 64> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 64>; [INV]

  <bb 65> :
  tcp_backlog_accepted (pcb);
  _116 = pcb->listener;
  _117 = _116->accept;
  if (_117 != 0B)
    goto <bb 66>; [INV]
  else
    goto <bb 67>; [INV]

  <bb 66> :
  _118 = pcb->listener;
  _119 = _118->accept;
  _120 = pcb->callback_arg;
  err = _119 (_120, pcb, 0);
  goto <bb 68>; [INV]

  <bb 67> :
  err = -16;

  <bb 68> :
  if (err != 0)
    goto <bb 69>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 69> :
  if (err != -13)
    goto <bb 70>; [INV]
  else
    goto <bb 71>; [INV]

  <bb 70> :
  tcp_abort (pcb);

  <bb 71> :
  D.8208 = -13;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 140>; [INV]

  <bb 72> :
  tcp_receive (pcb);
  recv_acked.116_121 = recv_acked;
  if (recv_acked.116_121 != 0)
    goto <bb 73>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 73> :
  recv_acked.117_122 = recv_acked;
  recv_acked.118_123 = recv_acked.117_122;
  _124 = recv_acked.118_123 + 65535;
  recv_acked = _124;

  <bb 74> :
  _125 = pcb->mss;
  _126 = (unsigned int) _125;
  _127 = _126 * 4;
  _128 = pcb->mss;
  _129 = (unsigned int) _128;
  _130 = _129 * 2;
  _131 = MAX_EXPR <_130, 4380>;
  if (_127 < _131)
    goto <bb 75>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 75> :
  _132 = pcb->mss;
  iftmp.119 = _132 * 4;
  goto <bb 80>; [INV]

  <bb 76> :
  _133 = pcb->mss;
  _134 = (unsigned int) _133;
  _135 = _134 * 2;
  if (_135 > 4380)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  _136 = pcb->mss;
  iftmp.120 = _136 * 2;
  goto <bb 79>; [INV]

  <bb 78> :
  iftmp.120 = 4380;

  <bb 79> :
  iftmp.119 = iftmp.120;

  <bb 80> :
  pcb->cwnd = iftmp.119;
  recv_flags.121_137 = recv_flags;
  _138 = (int) recv_flags.121_137;
  _139 = _138 & 32;
  if (_139 != 0)
    goto <bb 81>; [INV]
  else
    goto <bb 82>; [INV]

  <bb 81> :
  _140 = pcb->flags;
  _141 = _140 | 2;
  pcb->flags = _141;
  pcb->state = 7;

  <bb 82> :
  goto <bb 84>; [INV]

  <bb 83> :
  ackno.122_142 = ackno;
  tcplen.123_143 = tcplen;
  _144 = (long unsigned int) tcplen.123_143;
  seqno.124_145 = seqno;
  _146 = _144 + seqno.124_145;
  tcphdr.125_147 = tcphdr;
  _148 = tcphdr.125_147->dest;
  tcphdr.126_149 = tcphdr;
  _150 = tcphdr.126_149->src;
  tcp_rst (pcb, ackno.122_142, _146, &ip_data.current_iphdr_dest, &ip_data.current_iphdr_src, _148, _150);

  <bb 84> :
  goto <bb 88>; [INV]

  <bb 85> :
  flags.127_151 = flags;
  _152 = (unsigned int) flags.127_151;
  _153 = _152 & 2;
  if (_153 != 0)
    goto <bb 86>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 86> :
  _154 = pcb->rcv_nxt;
  _155 = _154 + 4294967295;
  seqno.128_156 = seqno;
  if (_155 == seqno.128_156)
    goto <bb 87>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 87> :
  tcp_rexmit (pcb);

  <bb 88> :
  goto <bb 139>; [INV]

  <bb 89> :
<L102>:
  tcp_receive (pcb);
  recv_flags.129_157 = recv_flags;
  _158 = (int) recv_flags.129_157;
  _159 = _158 & 32;
  if (_159 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 90> :
  _160 = pcb->flags;
  _161 = _160 | 2;
  pcb->flags = _161;
  pcb->state = 7;

  <bb 91> :
  goto <bb 139>; [INV]

  <bb 92> :
<L106>:
  tcp_receive (pcb);
  recv_flags.130_162 = recv_flags;
  _163 = (int) recv_flags.130_162;
  _164 = _163 & 32;
  if (_164 != 0)
    goto <bb 93>; [INV]
  else
    goto <bb 106>; [INV]

  <bb 93> :
  flags.131_165 = flags;
  _166 = (unsigned int) flags.131_165;
  _167 = _166 & 16;
  if (_167 != 0)
    goto <bb 94>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 94> :
  _168 = pcb->snd_nxt;
  ackno.132_169 = ackno;
  if (_168 == ackno.132_169)
    goto <bb 95>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 95> :
  _170 = pcb->unsent;
  if (_170 == 0B)
    goto <bb 96>; [INV]
  else
    goto <bb 104>; [INV]

  <bb 96> :
  _171 = pcb->flags;
  _172 = _171 | 2;
  pcb->flags = _172;
  tcp_pcb_purge (pcb);
  tcp_active_pcbs.133_173 = tcp_active_pcbs;
  if (pcb == tcp_active_pcbs.133_173)
    goto <bb 97>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 97> :
  tcp_active_pcbs.134_174 = tcp_active_pcbs;
  _175 = tcp_active_pcbs.134_174->next;
  tcp_active_pcbs = _175;
  goto <bb 103>; [INV]

  <bb 98> :
  tcp_tmp_pcb = tcp_active_pcbs;
  goto <bb 102>; [INV]

  <bb 99> :
  _176 = tcp_tmp_pcb->next;
  if (pcb == _176)
    goto <bb 100>; [INV]
  else
    goto <bb 101>; [INV]

  <bb 100> :
  _177 = pcb->next;
  tcp_tmp_pcb->next = _177;
  goto <bb 103>; [INV]

  <bb 101> :
  tcp_tmp_pcb = tcp_tmp_pcb->next;

  <bb 102> :
  if (tcp_tmp_pcb != 0B)
    goto <bb 99>; [INV]
  else
    goto <bb 103>; [INV]

  <bb 103> :
  pcb->next = 0B;
  tcp_active_pcbs_changed = 1;
  pcb->state = 10;
  tcp_tw_pcbs.135_178 = tcp_tw_pcbs;
  pcb->next = tcp_tw_pcbs.135_178;
  tcp_tw_pcbs = pcb;
  tcp_timer_needed ();
  goto <bb 105>; [INV]

  <bb 104> :
  _179 = pcb->flags;
  _180 = _179 | 2;
  pcb->flags = _180;
  pcb->state = 8;

  <bb 105> :
  goto <bb 110>; [INV]

  <bb 106> :
  flags.136_181 = flags;
  _182 = (unsigned int) flags.136_181;
  _183 = _182 & 16;
  if (_183 != 0)
    goto <bb 107>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 107> :
  _184 = pcb->snd_nxt;
  ackno.137_185 = ackno;
  if (_184 == ackno.137_185)
    goto <bb 108>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 108> :
  _186 = pcb->unsent;
  if (_186 == 0B)
    goto <bb 109>; [INV]
  else
    goto <bb 110>; [INV]

  <bb 109> :
  pcb->state = 6;

  <bb 110> :
  goto <bb 139>; [INV]

  <bb 111> :
<L129>:
  tcp_receive (pcb);
  recv_flags.138_187 = recv_flags;
  _188 = (int) recv_flags.138_187;
  _189 = _188 & 32;
  if (_189 != 0)
    goto <bb 112>; [INV]
  else
    goto <bb 120>; [INV]

  <bb 112> :
  _190 = pcb->flags;
  _191 = _190 | 2;
  pcb->flags = _191;
  tcp_pcb_purge (pcb);
  tcp_active_pcbs.139_192 = tcp_active_pcbs;
  if (pcb == tcp_active_pcbs.139_192)
    goto <bb 113>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 113> :
  tcp_active_pcbs.140_193 = tcp_active_pcbs;
  _194 = tcp_active_pcbs.140_193->next;
  tcp_active_pcbs = _194;
  goto <bb 119>; [INV]

  <bb 114> :
  tcp_tmp_pcb = tcp_active_pcbs;
  goto <bb 118>; [INV]

  <bb 115> :
  _195 = tcp_tmp_pcb->next;
  if (pcb == _195)
    goto <bb 116>; [INV]
  else
    goto <bb 117>; [INV]

  <bb 116> :
  _196 = pcb->next;
  tcp_tmp_pcb->next = _196;
  goto <bb 119>; [INV]

  <bb 117> :
  tcp_tmp_pcb = tcp_tmp_pcb->next;

  <bb 118> :
  if (tcp_tmp_pcb != 0B)
    goto <bb 115>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 119> :
  pcb->next = 0B;
  tcp_active_pcbs_changed = 1;
  pcb->state = 10;
  tcp_tw_pcbs.141_197 = tcp_tw_pcbs;
  pcb->next = tcp_tw_pcbs.141_197;
  tcp_tw_pcbs = pcb;
  tcp_timer_needed ();

  <bb 120> :
  goto <bb 139>; [INV]

  <bb 121> :
<L140>:
  tcp_receive (pcb);
  flags.142_198 = flags;
  _199 = (unsigned int) flags.142_198;
  _200 = _199 & 16;
  if (_200 != 0)
    goto <bb 122>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 122> :
  _201 = pcb->snd_nxt;
  ackno.143_202 = ackno;
  if (_201 == ackno.143_202)
    goto <bb 123>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 123> :
  _203 = pcb->unsent;
  if (_203 == 0B)
    goto <bb 124>; [INV]
  else
    goto <bb 132>; [INV]

  <bb 124> :
  tcp_pcb_purge (pcb);
  tcp_active_pcbs.144_204 = tcp_active_pcbs;
  if (pcb == tcp_active_pcbs.144_204)
    goto <bb 125>; [INV]
  else
    goto <bb 126>; [INV]

  <bb 125> :
  tcp_active_pcbs.145_205 = tcp_active_pcbs;
  _206 = tcp_active_pcbs.145_205->next;
  tcp_active_pcbs = _206;
  goto <bb 131>; [INV]

  <bb 126> :
  tcp_tmp_pcb = tcp_active_pcbs;
  goto <bb 130>; [INV]

  <bb 127> :
  _207 = tcp_tmp_pcb->next;
  if (pcb == _207)
    goto <bb 128>; [INV]
  else
    goto <bb 129>; [INV]

  <bb 128> :
  _208 = pcb->next;
  tcp_tmp_pcb->next = _208;
  goto <bb 131>; [INV]

  <bb 129> :
  tcp_tmp_pcb = tcp_tmp_pcb->next;

  <bb 130> :
  if (tcp_tmp_pcb != 0B)
    goto <bb 127>; [INV]
  else
    goto <bb 131>; [INV]

  <bb 131> :
  pcb->next = 0B;
  tcp_active_pcbs_changed = 1;
  pcb->state = 10;
  tcp_tw_pcbs.146_209 = tcp_tw_pcbs;
  pcb->next = tcp_tw_pcbs.146_209;
  tcp_tw_pcbs = pcb;
  tcp_timer_needed ();

  <bb 132> :
  goto <bb 139>; [INV]

  <bb 133> :
<L155>:
  tcp_receive (pcb);
  flags.147_210 = flags;
  _211 = (unsigned int) flags.147_210;
  _212 = _211 & 16;
  if (_212 != 0)
    goto <bb 134>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 134> :
  _213 = pcb->snd_nxt;
  ackno.148_214 = ackno;
  if (_213 == ackno.148_214)
    goto <bb 135>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 135> :
  _215 = pcb->unsent;
  if (_215 == 0B)
    goto <bb 136>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 136> :
  recv_flags.149_216 = recv_flags;
  _217 = recv_flags.149_216 | 16;
  recv_flags = _217;

  <bb 137> :
  goto <bb 139>; [INV]

  <bb 138> :
<L162>:

  <bb 139> :
  D.8208 = 0;

  <bb 140> :
<L164>:
  return D.8208;

}


tcp_timewait_input (struct tcp_pcb * pcb)
{
  <bb 2> :
  flags.77_1 = flags;
  _2 = (unsigned int) flags.77_1;
  _3 = _2 & 4;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 4> :
  if (pcb == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  flags.78_4 = flags;
  _5 = (unsigned int) flags.78_4;
  _6 = _5 & 2;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  seqno.79_7 = seqno;
  _8 = pcb->rcv_nxt;
  _9 = seqno.79_7 - _8;
  _10 = (long int) _9;
  if (_10 >= 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  seqno.80_11 = seqno;
  _12 = pcb->rcv_nxt;
  _13 = pcb->rcv_wnd;
  _14 = (long unsigned int) _13;
  _15 = _12 + _14;
  _16 = seqno.80_11 - _15;
  _17 = (long int) _16;
  if (_17 <= 0)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  ackno.81_18 = ackno;
  tcplen.82_19 = tcplen;
  _20 = (long unsigned int) tcplen.82_19;
  seqno.83_21 = seqno;
  _22 = _20 + seqno.83_21;
  tcphdr.84_23 = tcphdr;
  _24 = tcphdr.84_23->dest;
  tcphdr.85_25 = tcphdr;
  _26 = tcphdr.85_25->src;
  tcp_rst (pcb, ackno.81_18, _22, &ip_data.current_iphdr_dest, &ip_data.current_iphdr_src, _24, _26);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 10> :
  flags.86_27 = flags;
  _28 = (unsigned int) flags.86_27;
  _29 = _28 & 1;
  if (_29 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  tcp_ticks.87_30 = tcp_ticks;
  pcb->tmr = tcp_ticks.87_30;

  <bb 12> :
  tcplen.88_31 = tcplen;
  if (tcplen.88_31 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _32 = pcb->flags;
  _33 = _32 | 2;
  pcb->flags = _33;
  tcp_output (pcb);

  <bb 14> :

  <bb 15> :
<L16>:
  return;

}


tcp_listen_input (struct tcp_pcb_listen * pcb)
{
  err_t err;
  err_t rc;
  u32_t iss;
  struct tcp_pcb * npcb;
  struct netif * iftmp.76;

  <bb 2> :
  flags.63_1 = flags;
  _2 = (unsigned int) flags.63_1;
  _3 = _2 & 4;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 30>; [INV]

  <bb 4> :
  if (pcb == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  flags.64_4 = flags;
  _5 = (unsigned int) flags.64_4;
  _6 = _5 & 16;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  ackno.65_7 = ackno;
  tcplen.66_8 = tcplen;
  _9 = (long unsigned int) tcplen.66_8;
  seqno.67_10 = seqno;
  _11 = _9 + seqno.67_10;
  tcphdr.68_12 = tcphdr;
  _13 = tcphdr.68_12->dest;
  tcphdr.69_14 = tcphdr;
  _15 = tcphdr.69_14->src;
  tcp_rst (pcb, ackno.65_7, _11, &ip_data.current_iphdr_dest, &ip_data.current_iphdr_src, _13, _15);
  goto <bb 29>; [INV]

  <bb 8> :
  flags.70_16 = flags;
  _17 = (unsigned int) flags.70_16;
  _18 = _17 & 2;
  if (_18 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 9> :
  _19 = pcb->accepts_pending;
  _20 = pcb->backlog;
  if (_19 >= _20)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 30>; [INV]

  <bb 11> :
  _21 = pcb->prio;
  npcb = tcp_alloc (_21);
  if (npcb == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 12> :
  _22 = lwip_stats.tcp.memerr;
  _23 = _22 + 1;
  lwip_stats.tcp.memerr = _23;
  _24 = pcb->accept;
  if (_24 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _25 = pcb->accept;
  _26 = pcb->callback_arg;
  err = _25 (_26, 0B, -1);
  goto <bb 15>; [INV]

  <bb 14> :
  err = -16;

  <bb 15> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 30>; [INV]

  <bb 16> :
  _27 = pcb->accepts_pending;
  _28 = _27;
  _29 = _28 + 1;
  pcb->accepts_pending = _29;
  _30 = npcb->flags;
  _31 = _30 | 512;
  npcb->flags = _31;
  _32 = ip_data.current_iphdr_dest.type;
  npcb->local_ip.type = _32;
  _33 = ip_data.current_iphdr_dest.type;
  if (_33 == 6)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _34 = ip_data.current_iphdr_dest.u_addr.ip6.addr[0];
  npcb->local_ip.u_addr.ip6.addr[0] = _34;
  _35 = ip_data.current_iphdr_dest.u_addr.ip6.addr[1];
  npcb->local_ip.u_addr.ip6.addr[1] = _35;
  _36 = ip_data.current_iphdr_dest.u_addr.ip6.addr[2];
  npcb->local_ip.u_addr.ip6.addr[2] = _36;
  _37 = ip_data.current_iphdr_dest.u_addr.ip6.addr[3];
  npcb->local_ip.u_addr.ip6.addr[3] = _37;
  _38 = ip_data.current_iphdr_dest.u_addr.ip6.zone;
  npcb->local_ip.u_addr.ip6.zone = _38;
  goto <bb 19>; [INV]

  <bb 18> :
  _39 = ip_data.current_iphdr_dest.u_addr.ip4.addr;
  npcb->local_ip.u_addr.ip4.addr = _39;
  npcb->local_ip.u_addr.ip6.addr[3] = 0;
  _40 = npcb->local_ip.u_addr.ip6.addr[3];
  npcb->local_ip.u_addr.ip6.addr[2] = _40;
  _41 = npcb->local_ip.u_addr.ip6.addr[2];
  npcb->local_ip.u_addr.ip6.addr[1] = _41;
  npcb->local_ip.u_addr.ip6.zone = 0;

  <bb 19> :
  _42 = ip_data.current_iphdr_src.type;
  npcb->remote_ip.type = _42;
  _43 = ip_data.current_iphdr_src.type;
  if (_43 == 6)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _44 = ip_data.current_iphdr_src.u_addr.ip6.addr[0];
  npcb->remote_ip.u_addr.ip6.addr[0] = _44;
  _45 = ip_data.current_iphdr_src.u_addr.ip6.addr[1];
  npcb->remote_ip.u_addr.ip6.addr[1] = _45;
  _46 = ip_data.current_iphdr_src.u_addr.ip6.addr[2];
  npcb->remote_ip.u_addr.ip6.addr[2] = _46;
  _47 = ip_data.current_iphdr_src.u_addr.ip6.addr[3];
  npcb->remote_ip.u_addr.ip6.addr[3] = _47;
  _48 = ip_data.current_iphdr_src.u_addr.ip6.zone;
  npcb->remote_ip.u_addr.ip6.zone = _48;
  goto <bb 22>; [INV]

  <bb 21> :
  _49 = ip_data.current_iphdr_src.u_addr.ip4.addr;
  npcb->remote_ip.u_addr.ip4.addr = _49;
  npcb->remote_ip.u_addr.ip6.addr[3] = 0;
  _50 = npcb->remote_ip.u_addr.ip6.addr[3];
  npcb->remote_ip.u_addr.ip6.addr[2] = _50;
  _51 = npcb->remote_ip.u_addr.ip6.addr[2];
  npcb->remote_ip.u_addr.ip6.addr[1] = _51;
  npcb->remote_ip.u_addr.ip6.zone = 0;

  <bb 22> :
  _52 = pcb->local_port;
  npcb->local_port = _52;
  tcphdr.71_53 = tcphdr;
  _54 = tcphdr.71_53->src;
  npcb->remote_port = _54;
  npcb->state = 3;
  seqno.72_55 = seqno;
  _56 = seqno.72_55 + 1;
  npcb->rcv_nxt = _56;
  _57 = npcb->rcv_nxt;
  npcb->rcv_ann_right_edge = _57;
  iss = tcp_next_iss (npcb);
  npcb->snd_wl2 = iss;
  npcb->snd_nxt = iss;
  npcb->lastack = iss;
  npcb->snd_lbb = iss;
  seqno.73_58 = seqno;
  _59 = seqno.73_58 + 4294967295;
  npcb->snd_wl1 = _59;
  _60 = pcb->callback_arg;
  npcb->callback_arg = _60;
  npcb->listener = pcb;
  _61 = pcb->so_options;
  _62 = _61 & 12;
  npcb->so_options = _62;
  _63 = pcb->netif_idx;
  npcb->netif_idx = _63;
  tcp_active_pcbs.74_64 = tcp_active_pcbs;
  npcb->next = tcp_active_pcbs.74_64;
  tcp_active_pcbs = npcb;
  tcp_timer_needed ();
  tcp_active_pcbs_changed = 1;
  tcp_parseopt (npcb);
  tcphdr.75_65 = tcphdr;
  _66 = tcphdr.75_65->wnd;
  npcb->snd_wnd = _66;
  _67 = npcb->snd_wnd;
  npcb->snd_wnd_max = _67;
  _68 = npcb->mss;
  _69 = &npcb->remote_ip;
  if (_69 != 0B)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 23> :
  _70 = npcb->remote_ip.type;
  if (_70 == 6)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  _71 = &npcb->local_ip.u_addr.ip6;
  _72 = &npcb->remote_ip.u_addr.ip6;
  iftmp.76 = ip6_route (_71, _72);
  goto <bb 26>; [INV]

  <bb 25> :
  _73 = &npcb->remote_ip.u_addr.ip4;
  iftmp.76 = ip4_route (_73);

  <bb 26> :
  _74 = &npcb->remote_ip;
  _75 = tcp_eff_send_mss_netif (_68, iftmp.76, _74);
  npcb->mss = _75;
  _76 = lwip_stats.mib2.tcppassiveopens;
  _77 = _76 + 1;
  lwip_stats.mib2.tcppassiveopens = _77;
  rc = tcp_enqueue_flags (npcb, 18);
  if (rc != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  tcp_abandon (npcb, 0);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 30>; [INV]

  <bb 28> :
  tcp_output (npcb);

  <bb 29> :

  <bb 30> :
<L29>:
  return;

}


tcp_input_delayed_close (struct tcp_pcb * pcb)
{
  int D.8140;

  <bb 2> :
  if (pcb == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  recv_flags.62_1 = recv_flags;
  _2 = (int) recv_flags.62_1;
  _3 = _2 & 16;
  if (_3 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 5> :
  _4 = pcb->flags;
  _5 = (unsigned int) _4;
  _6 = _5 & 16;
  if (_6 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _7 = pcb->errf;
  if (_7 != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _8 = pcb->errf;
  _9 = pcb->callback_arg;
  _8 (_9, -15);

  <bb 8> :
  tcp_pcb_remove (&tcp_active_pcbs, pcb);
  tcp_free (pcb);
  D.8140 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 10>; [INV]

  <bb 9> :
  D.8140 = 0;

  <bb 10> :
<L9>:
  return D.8140;

}


tcp_input (struct pbuf * p, struct netif * inp)
{
  u16_t acked16;
  u16_t opt2len;
  u16_t chksum;
  err_t err;
  u8_t hdrlen_bytes;
  struct tcp_pcb_listen * lpcb;
  struct tcp_pcb * prev;
  struct tcp_pcb * pcb;
  int iftmp.44;
  int iftmp.43;
  _Bool iftmp.42;
  _Bool iftmp.41;
  int iftmp.40;
  _Bool iftmp.39;
  _Bool iftmp.38;
  int iftmp.36;
  _Bool iftmp.35;
  _Bool iftmp.34;
  int iftmp.33;
  _Bool iftmp.32;
  _Bool iftmp.31;
  int iftmp.27;
  _Bool iftmp.26;
  _Bool iftmp.25;
  int iftmp.24;
  _Bool iftmp.23;
  _Bool iftmp.22;

  <bb 2> :
  if (p == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  _1 = lwip_stats.tcp.recv;
  _2 = _1 + 1;
  lwip_stats.tcp.recv = _2;
  _3 = lwip_stats.mib2.tcpinsegs;
  _4 = _3 + 1;
  lwip_stats.mib2.tcpinsegs = _4;
  _5 = p->payload;
  tcphdr = _5;
  _6 = p->len;
  if (_6 <= 19)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _7 = lwip_stats.tcp.lenerr;
  _8 = _7 + 1;
  lwip_stats.tcp.lenerr = _8;
  // predicted unlikely by goto predictor.
  goto <bb 227>; [INV]

  <bb 6> :
  _9 = ip_data.current_iphdr_dest.type;
  if (_9 != 6)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _10 = ip_data.current_iphdr_dest.u_addr.ip4.addr;
  _11 = ip_data.current_netif;
  _12 = ip4_addr_isbroadcast_u32 (_10, _11);
  if (_12 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _13 = ip_data.current_iphdr_dest.type;
  if (_13 == 6)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _14 = ip_data.current_iphdr_dest.u_addr.ip6.addr[0];
  _15 = _14 & 255;
  if (_15 == 255)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _16 = ip_data.current_iphdr_dest.u_addr.ip4.addr;
  _17 = _16 & 240;
  if (_17 == 224)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _18 = lwip_stats.tcp.proterr;
  _19 = _18 + 1;
  lwip_stats.tcp.proterr = _19;
  // predicted unlikely by goto predictor.
  goto <bb 227>; [INV]

  <bb 12> :
  _20 = p->tot_len;
  chksum = ip_chksum_pseudo (p, 6, _20, &ip_data.current_iphdr_src, &ip_data.current_iphdr_dest);
  if (chksum != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _21 = lwip_stats.tcp.chkerr;
  _22 = _21 + 1;
  lwip_stats.tcp.chkerr = _22;
  // predicted unlikely by goto predictor.
  goto <bb 227>; [INV]

  <bb 14> :
  tcphdr.0_23 = tcphdr;
  _24 = tcphdr.0_23->_hdrlen_rsvd_flags;
  _25 = lwip_htons (_24);
  _26 = _25 >> 12;
  _27 = (unsigned char) _26;
  hdrlen_bytes = _27 << 2;
  if (hdrlen_bytes <= 19)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  _28 = (short unsigned int) hdrlen_bytes;
  _29 = p->tot_len;
  if (_28 > _29)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _30 = lwip_stats.tcp.lenerr;
  _31 = _30 + 1;
  lwip_stats.tcp.lenerr = _31;
  // predicted unlikely by goto predictor.
  goto <bb 227>; [INV]

  <bb 17> :
  _32 = (short unsigned int) hdrlen_bytes;
  _33 = _32 + 65516;
  tcphdr_optlen = _33;
  tcphdr_opt2 = 0B;
  _34 = p->len;
  _35 = (short unsigned int) hdrlen_bytes;
  if (_34 >= _35)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  tcphdr_optlen.1_36 = tcphdr_optlen;
  tcphdr_opt1len = tcphdr_optlen.1_36;
  _37 = (unsigned int) hdrlen_bytes;
  pbuf_remove_header (p, _37);
  goto <bb 27>; [INV]

  <bb 19> :
  _38 = p->next;
  if (_38 == 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 20>; [INV]

  <bb 21> :
  pbuf_remove_header (p, 20);
  _39 = p->len;
  tcphdr_opt1len = _39;
  tcphdr_optlen.2_40 = tcphdr_optlen;
  tcphdr_opt1len.3_41 = tcphdr_opt1len;
  opt2len = tcphdr_optlen.2_40 - tcphdr_opt1len.3_41;
  tcphdr_opt1len.4_42 = tcphdr_opt1len;
  _43 = (unsigned int) tcphdr_opt1len.4_42;
  pbuf_remove_header (p, _43);
  _44 = p->next;
  _45 = _44->len;
  if (opt2len > _45)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _46 = lwip_stats.tcp.lenerr;
  _47 = _46 + 1;
  lwip_stats.tcp.lenerr = _47;
  // predicted unlikely by goto predictor.
  goto <bb 227>; [INV]

  <bb 23> :
  _48 = p->next;
  _49 = _48->payload;
  tcphdr_opt2 = _49;
  _50 = p->next;
  _51 = (unsigned int) opt2len;
  pbuf_remove_header (_50, _51);
  _52 = p->tot_len;
  _53 = _52 - opt2len;
  p->tot_len = _53;
  _54 = p->len;
  if (_54 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 24>; [INV]

  <bb 25> :
  _55 = p->tot_len;
  _56 = p->next;
  _57 = _56->tot_len;
  if (_55 != _57)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 26>; [INV]

  <bb 27> :
  tcphdr.5_58 = tcphdr;
  _59 = tcphdr.5_58->src;
  tcphdr.6_60 = tcphdr;
  _61 = lwip_htons (_59);
  tcphdr.6_60->src = _61;
  tcphdr.7_62 = tcphdr;
  _63 = tcphdr.7_62->dest;
  tcphdr.8_64 = tcphdr;
  _65 = lwip_htons (_63);
  tcphdr.8_64->dest = _65;
  tcphdr.9_66 = tcphdr;
  _67 = tcphdr.9_66->seqno;
  tcphdr.10_68 = tcphdr;
  _69 = lwip_htonl (_67);
  tcphdr.10_68->seqno = _69;
  _70 = tcphdr.10_68->seqno;
  seqno = _70;
  tcphdr.11_71 = tcphdr;
  _72 = tcphdr.11_71->ackno;
  tcphdr.12_73 = tcphdr;
  _74 = lwip_htonl (_72);
  tcphdr.12_73->ackno = _74;
  _75 = tcphdr.12_73->ackno;
  ackno = _75;
  tcphdr.13_76 = tcphdr;
  _77 = tcphdr.13_76->wnd;
  tcphdr.14_78 = tcphdr;
  _79 = lwip_htons (_77);
  tcphdr.14_78->wnd = _79;
  tcphdr.15_80 = tcphdr;
  _81 = tcphdr.15_80->_hdrlen_rsvd_flags;
  _82 = lwip_htons (_81);
  _83 = (unsigned char) _82;
  _84 = _83 & 63;
  flags = _84;
  _85 = p->tot_len;
  tcplen = _85;
  flags.16_86 = flags;
  _87 = (unsigned int) flags.16_86;
  _88 = _87 & 3;
  if (_88 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 28> :
  tcplen.17_89 = tcplen;
  tcplen.18_90 = tcplen.17_89;
  _91 = tcplen.18_90 + 1;
  tcplen = _91;
  _92 = p->tot_len;
  tcplen.19_93 = tcplen;
  if (_92 > tcplen.19_93)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  _94 = lwip_stats.tcp.lenerr;
  _95 = _94 + 1;
  lwip_stats.tcp.lenerr = _95;
  // predicted unlikely by goto predictor.
  goto <bb 227>; [INV]

  <bb 30> :
  prev = 0B;
  pcb = tcp_active_pcbs;
  goto <bb 80>; [INV]

  <bb 31> :
  _96 = pcb->state;
  if (_96 == 0)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 32>; [INV]

  <bb 33> :
  _97 = pcb->state;
  if (_97 == 10)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 34>; [INV]

  <bb 35> :
  _98 = pcb->state;
  if (_98 == 1)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 36>; [INV]

  <bb 37> :
  _99 = pcb->netif_idx;
  if (_99 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 38> :
  _100 = pcb->netif_idx;
  _101 = ip_data.current_input_netif;
  _102 = _101->num;
  _103 = _102 + 1;
  if (_100 != _103)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  prev = pcb;
  // predicted unlikely by continue predictor.
  goto <bb 79>; [INV]

  <bb 40> :
  _104 = pcb->remote_port;
  tcphdr.20_105 = tcphdr;
  _106 = tcphdr.20_105->src;
  if (_104 == _106)
    goto <bb 41>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 41> :
  _107 = pcb->local_port;
  tcphdr.21_108 = tcphdr;
  _109 = tcphdr.21_108->dest;
  if (_107 == _109)
    goto <bb 42>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 42> :
  _110 = pcb->remote_ip.type;
  _111 = ip_data.current_iphdr_src.type;
  if (_110 == _111)
    goto <bb 43>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 43> :
  _112 = pcb->remote_ip.type;
  if (_112 == 6)
    goto <bb 44>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 44> :
  _113 = pcb->remote_ip.u_addr.ip6.addr[0];
  _114 = ip_data.current_iphdr_src.u_addr.ip6.addr[0];
  if (_113 == _114)
    goto <bb 45>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 45> :
  _115 = pcb->remote_ip.u_addr.ip6.addr[1];
  _116 = ip_data.current_iphdr_src.u_addr.ip6.addr[1];
  if (_115 == _116)
    goto <bb 46>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 46> :
  _117 = pcb->remote_ip.u_addr.ip6.addr[2];
  _118 = ip_data.current_iphdr_src.u_addr.ip6.addr[2];
  if (_117 == _118)
    goto <bb 47>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 47> :
  _119 = pcb->remote_ip.u_addr.ip6.addr[3];
  _120 = ip_data.current_iphdr_src.u_addr.ip6.addr[3];
  if (_119 == _120)
    goto <bb 48>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 48> :
  _121 = pcb->remote_ip.u_addr.ip6.zone;
  _122 = ip_data.current_iphdr_src.u_addr.ip6.zone;
  if (_121 == _122)
    goto <bb 49>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 49> :
  iftmp.24 = 1;
  goto <bb 51>; [INV]

  <bb 50> :
  iftmp.24 = 0;

  <bb 51> :
  iftmp.23 = (_Bool) iftmp.24;
  goto <bb 53>; [INV]

  <bb 52> :
  _123 = pcb->remote_ip.u_addr.ip4.addr;
  _124 = ip_data.current_iphdr_src.u_addr.ip4.addr;
  iftmp.23 = _123 == _124;

  <bb 53> :
  iftmp.22 = iftmp.23;
  goto <bb 55>; [INV]

  <bb 54> :
  iftmp.22 = 0;

  <bb 55> :
  if (iftmp.22 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 56> :
  _125 = pcb->local_ip.type;
  _126 = ip_data.current_iphdr_dest.type;
  if (_125 == _126)
    goto <bb 57>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 57> :
  _127 = pcb->local_ip.type;
  if (_127 == 6)
    goto <bb 58>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 58> :
  _128 = pcb->local_ip.u_addr.ip6.addr[0];
  _129 = ip_data.current_iphdr_dest.u_addr.ip6.addr[0];
  if (_128 == _129)
    goto <bb 59>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 59> :
  _130 = pcb->local_ip.u_addr.ip6.addr[1];
  _131 = ip_data.current_iphdr_dest.u_addr.ip6.addr[1];
  if (_130 == _131)
    goto <bb 60>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 60> :
  _132 = pcb->local_ip.u_addr.ip6.addr[2];
  _133 = ip_data.current_iphdr_dest.u_addr.ip6.addr[2];
  if (_132 == _133)
    goto <bb 61>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 61> :
  _134 = pcb->local_ip.u_addr.ip6.addr[3];
  _135 = ip_data.current_iphdr_dest.u_addr.ip6.addr[3];
  if (_134 == _135)
    goto <bb 62>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 62> :
  _136 = pcb->local_ip.u_addr.ip6.zone;
  _137 = ip_data.current_iphdr_dest.u_addr.ip6.zone;
  if (_136 == _137)
    goto <bb 63>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 63> :
  iftmp.27 = 1;
  goto <bb 65>; [INV]

  <bb 64> :
  iftmp.27 = 0;

  <bb 65> :
  iftmp.26 = (_Bool) iftmp.27;
  goto <bb 67>; [INV]

  <bb 66> :
  _138 = pcb->local_ip.u_addr.ip4.addr;
  _139 = ip_data.current_iphdr_dest.u_addr.ip4.addr;
  iftmp.26 = _138 == _139;

  <bb 67> :
  iftmp.25 = iftmp.26;
  goto <bb 69>; [INV]

  <bb 68> :
  iftmp.25 = 0;

  <bb 69> :
  if (iftmp.25 != 0)
    goto <bb 70>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 70> :
  _140 = pcb->next;
  if (pcb == _140)
    goto <bb 71>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 71> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 71>; [INV]

  <bb 72> :
  if (prev != 0B)
    goto <bb 73>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 73> :
  _141 = pcb->next;
  prev->next = _141;
  tcp_active_pcbs.28_142 = tcp_active_pcbs;
  pcb->next = tcp_active_pcbs.28_142;
  tcp_active_pcbs = pcb;
  goto <bb 75>; [INV]

  <bb 74> :
  _143 = lwip_stats.tcp.cachehit;
  _144 = _143 + 1;
  lwip_stats.tcp.cachehit = _144;

  <bb 75> :
  _145 = pcb->next;
  if (pcb == _145)
    goto <bb 76>; [INV]
  else
    goto <bb 77>; [INV]

  <bb 76> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 76>; [INV]

  <bb 77> :
  goto <bb 81>; [INV]

  <bb 78> :
  prev = pcb;

  <bb 79> :
  pcb = pcb->next;

  <bb 80> :
  if (pcb != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 81>; [INV]

  <bb 81> :
  if (pcb == 0B)
    goto <bb 82>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 82> :
  pcb = tcp_tw_pcbs;
  goto <bb 120>; [INV]

  <bb 83> :
  _146 = pcb->state;
  if (_146 != 10)
    goto <bb 84>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 84> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 84>; [INV]

  <bb 85> :
  _147 = pcb->netif_idx;
  if (_147 != 0)
    goto <bb 86>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 86> :
  _148 = pcb->netif_idx;
  _149 = ip_data.current_input_netif;
  _150 = _149->num;
  _151 = _150 + 1;
  if (_148 != _151)
    goto <bb 87>; [INV]
  else
    goto <bb 88>; [INV]

  <bb 87> :
  // predicted unlikely by continue predictor.
  goto <bb 119>; [INV]

  <bb 88> :
  _152 = pcb->remote_port;
  tcphdr.29_153 = tcphdr;
  _154 = tcphdr.29_153->src;
  if (_152 == _154)
    goto <bb 89>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 89> :
  _155 = pcb->local_port;
  tcphdr.30_156 = tcphdr;
  _157 = tcphdr.30_156->dest;
  if (_155 == _157)
    goto <bb 90>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 90> :
  _158 = pcb->remote_ip.type;
  _159 = ip_data.current_iphdr_src.type;
  if (_158 == _159)
    goto <bb 91>; [INV]
  else
    goto <bb 102>; [INV]

  <bb 91> :
  _160 = pcb->remote_ip.type;
  if (_160 == 6)
    goto <bb 92>; [INV]
  else
    goto <bb 100>; [INV]

  <bb 92> :
  _161 = pcb->remote_ip.u_addr.ip6.addr[0];
  _162 = ip_data.current_iphdr_src.u_addr.ip6.addr[0];
  if (_161 == _162)
    goto <bb 93>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 93> :
  _163 = pcb->remote_ip.u_addr.ip6.addr[1];
  _164 = ip_data.current_iphdr_src.u_addr.ip6.addr[1];
  if (_163 == _164)
    goto <bb 94>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 94> :
  _165 = pcb->remote_ip.u_addr.ip6.addr[2];
  _166 = ip_data.current_iphdr_src.u_addr.ip6.addr[2];
  if (_165 == _166)
    goto <bb 95>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 95> :
  _167 = pcb->remote_ip.u_addr.ip6.addr[3];
  _168 = ip_data.current_iphdr_src.u_addr.ip6.addr[3];
  if (_167 == _168)
    goto <bb 96>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 96> :
  _169 = pcb->remote_ip.u_addr.ip6.zone;
  _170 = ip_data.current_iphdr_src.u_addr.ip6.zone;
  if (_169 == _170)
    goto <bb 97>; [INV]
  else
    goto <bb 98>; [INV]

  <bb 97> :
  iftmp.33 = 1;
  goto <bb 99>; [INV]

  <bb 98> :
  iftmp.33 = 0;

  <bb 99> :
  iftmp.32 = (_Bool) iftmp.33;
  goto <bb 101>; [INV]

  <bb 100> :
  _171 = pcb->remote_ip.u_addr.ip4.addr;
  _172 = ip_data.current_iphdr_src.u_addr.ip4.addr;
  iftmp.32 = _171 == _172;

  <bb 101> :
  iftmp.31 = iftmp.32;
  goto <bb 103>; [INV]

  <bb 102> :
  iftmp.31 = 0;

  <bb 103> :
  if (iftmp.31 != 0)
    goto <bb 104>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 104> :
  _173 = pcb->local_ip.type;
  _174 = ip_data.current_iphdr_dest.type;
  if (_173 == _174)
    goto <bb 105>; [INV]
  else
    goto <bb 116>; [INV]

  <bb 105> :
  _175 = pcb->local_ip.type;
  if (_175 == 6)
    goto <bb 106>; [INV]
  else
    goto <bb 114>; [INV]

  <bb 106> :
  _176 = pcb->local_ip.u_addr.ip6.addr[0];
  _177 = ip_data.current_iphdr_dest.u_addr.ip6.addr[0];
  if (_176 == _177)
    goto <bb 107>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 107> :
  _178 = pcb->local_ip.u_addr.ip6.addr[1];
  _179 = ip_data.current_iphdr_dest.u_addr.ip6.addr[1];
  if (_178 == _179)
    goto <bb 108>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 108> :
  _180 = pcb->local_ip.u_addr.ip6.addr[2];
  _181 = ip_data.current_iphdr_dest.u_addr.ip6.addr[2];
  if (_180 == _181)
    goto <bb 109>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 109> :
  _182 = pcb->local_ip.u_addr.ip6.addr[3];
  _183 = ip_data.current_iphdr_dest.u_addr.ip6.addr[3];
  if (_182 == _183)
    goto <bb 110>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 110> :
  _184 = pcb->local_ip.u_addr.ip6.zone;
  _185 = ip_data.current_iphdr_dest.u_addr.ip6.zone;
  if (_184 == _185)
    goto <bb 111>; [INV]
  else
    goto <bb 112>; [INV]

  <bb 111> :
  iftmp.36 = 1;
  goto <bb 113>; [INV]

  <bb 112> :
  iftmp.36 = 0;

  <bb 113> :
  iftmp.35 = (_Bool) iftmp.36;
  goto <bb 115>; [INV]

  <bb 114> :
  _186 = pcb->local_ip.u_addr.ip4.addr;
  _187 = ip_data.current_iphdr_dest.u_addr.ip4.addr;
  iftmp.35 = _186 == _187;

  <bb 115> :
  iftmp.34 = iftmp.35;
  goto <bb 117>; [INV]

  <bb 116> :
  iftmp.34 = 0;

  <bb 117> :
  if (iftmp.34 != 0)
    goto <bb 118>; [INV]
  else
    goto <bb 119>; [INV]

  <bb 118> :
  tcp_timewait_input (pcb);
  pbuf_free (p);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 228>; [INV]

  <bb 119> :
  pcb = pcb->next;

  <bb 120> :
  if (pcb != 0B)
    goto <bb 83>; [INV]
  else
    goto <bb 121>; [INV]

  <bb 121> :
  prev = 0B;
  lpcb = tcp_listen_pcbs.listen_pcbs;
  goto <bb 166>; [INV]

  <bb 122> :
  _188 = lpcb->netif_idx;
  if (_188 != 0)
    goto <bb 123>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 123> :
  _189 = lpcb->netif_idx;
  _190 = ip_data.current_input_netif;
  _191 = _190->num;
  _192 = _191 + 1;
  if (_189 != _192)
    goto <bb 124>; [INV]
  else
    goto <bb 125>; [INV]

  <bb 124> :
  prev = lpcb;
  // predicted unlikely by continue predictor.
  goto <bb 165>; [INV]

  <bb 125> :
  _193 = lpcb->local_port;
  tcphdr.37_194 = tcphdr;
  _195 = tcphdr.37_194->dest;
  if (_193 == _195)
    goto <bb 126>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 126> :
  _196 = lpcb->local_ip.type;
  if (_196 == 46)
    goto <bb 127>; [INV]
  else
    goto <bb 128>; [INV]

  <bb 127> :
  goto <bb 167>; [INV]

  <bb 128> :
  _197 = lpcb->local_ip.type;
  _198 = ip_data.current_iphdr_dest.type;
  if (_197 == _198)
    goto <bb 129>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 129> :
  _199 = lpcb->local_ip.type;
  _200 = ip_data.current_iphdr_dest.type;
  if (_199 == _200)
    goto <bb 130>; [INV]
  else
    goto <bb 141>; [INV]

  <bb 130> :
  _201 = lpcb->local_ip.type;
  if (_201 == 6)
    goto <bb 131>; [INV]
  else
    goto <bb 139>; [INV]

  <bb 131> :
  _202 = lpcb->local_ip.u_addr.ip6.addr[0];
  _203 = ip_data.current_iphdr_dest.u_addr.ip6.addr[0];
  if (_202 == _203)
    goto <bb 132>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 132> :
  _204 = lpcb->local_ip.u_addr.ip6.addr[1];
  _205 = ip_data.current_iphdr_dest.u_addr.ip6.addr[1];
  if (_204 == _205)
    goto <bb 133>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 133> :
  _206 = lpcb->local_ip.u_addr.ip6.addr[2];
  _207 = ip_data.current_iphdr_dest.u_addr.ip6.addr[2];
  if (_206 == _207)
    goto <bb 134>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 134> :
  _208 = lpcb->local_ip.u_addr.ip6.addr[3];
  _209 = ip_data.current_iphdr_dest.u_addr.ip6.addr[3];
  if (_208 == _209)
    goto <bb 135>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 135> :
  _210 = lpcb->local_ip.u_addr.ip6.zone;
  _211 = ip_data.current_iphdr_dest.u_addr.ip6.zone;
  if (_210 == _211)
    goto <bb 136>; [INV]
  else
    goto <bb 137>; [INV]

  <bb 136> :
  iftmp.40 = 1;
  goto <bb 138>; [INV]

  <bb 137> :
  iftmp.40 = 0;

  <bb 138> :
  iftmp.39 = (_Bool) iftmp.40;
  goto <bb 140>; [INV]

  <bb 139> :
  _212 = lpcb->local_ip.u_addr.ip4.addr;
  _213 = ip_data.current_iphdr_dest.u_addr.ip4.addr;
  iftmp.39 = _212 == _213;

  <bb 140> :
  iftmp.38 = iftmp.39;
  goto <bb 142>; [INV]

  <bb 141> :
  iftmp.38 = 0;

  <bb 142> :
  if (iftmp.38 != 0)
    goto <bb 143>; [INV]
  else
    goto <bb 144>; [INV]

  <bb 143> :
  goto <bb 167>; [INV]

  <bb 144> :
  _214 = &lpcb->local_ip;
  if (_214 != 0B)
    goto <bb 145>; [INV]
  else
    goto <bb 161>; [INV]

  <bb 145> :
  _215 = &lpcb->local_ip;
  if (_215 != 0B)
    goto <bb 146>; [INV]
  else
    goto <bb 155>; [INV]

  <bb 146> :
  _216 = lpcb->local_ip.type;
  if (_216 == 6)
    goto <bb 147>; [INV]
  else
    goto <bb 155>; [INV]

  <bb 147> :
  _217 = &lpcb->local_ip.u_addr.ip6;
  if (_217 == 0B)
    goto <bb 152>; [INV]
  else
    goto <bb 148>; [INV]

  <bb 148> :
  _218 = lpcb->local_ip.u_addr.ip6.addr[0];
  if (_218 == 0)
    goto <bb 149>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 149> :
  _219 = lpcb->local_ip.u_addr.ip6.addr[1];
  if (_219 == 0)
    goto <bb 150>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 150> :
  _220 = lpcb->local_ip.u_addr.ip6.addr[2];
  if (_220 == 0)
    goto <bb 151>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 151> :
  _221 = lpcb->local_ip.u_addr.ip6.addr[3];
  if (_221 == 0)
    goto <bb 152>; [INV]
  else
    goto <bb 153>; [INV]

  <bb 152> :
  iftmp.43 = 1;
  goto <bb 154>; [INV]

  <bb 153> :
  iftmp.43 = 0;

  <bb 154> :
  iftmp.42 = (_Bool) iftmp.43;
  goto <bb 160>; [INV]

  <bb 155> :
  _222 = &lpcb->local_ip.u_addr.ip4;
  if (_222 == 0B)
    goto <bb 157>; [INV]
  else
    goto <bb 156>; [INV]

  <bb 156> :
  _223 = lpcb->local_ip.u_addr.ip4.addr;
  if (_223 == 0)
    goto <bb 157>; [INV]
  else
    goto <bb 158>; [INV]

  <bb 157> :
  iftmp.44 = 1;
  goto <bb 159>; [INV]

  <bb 158> :
  iftmp.44 = 0;

  <bb 159> :
  iftmp.42 = (_Bool) iftmp.44;

  <bb 160> :
  iftmp.41 = iftmp.42;
  goto <bb 162>; [INV]

  <bb 161> :
  iftmp.41 = 1;

  <bb 162> :
  if (iftmp.41 != 0)
    goto <bb 163>; [INV]
  else
    goto <bb 164>; [INV]

  <bb 163> :
  goto <bb 167>; [INV]

  <bb 164> :
  prev = lpcb;

  <bb 165> :
  lpcb = lpcb->next;

  <bb 166> :
  if (lpcb != 0B)
    goto <bb 122>; [INV]
  else
    goto <bb 167>; [INV]

  <bb 167> :
  if (lpcb != 0B)
    goto <bb 168>; [INV]
  else
    goto <bb 172>; [INV]

  <bb 168> :
  if (prev != 0B)
    goto <bb 169>; [INV]
  else
    goto <bb 170>; [INV]

  <bb 169> :
  _224 = lpcb->next;
  MEM[(struct tcp_pcb_listen *)prev].next = _224;
  _225 = tcp_listen_pcbs.listen_pcbs;
  lpcb->next = _225;
  tcp_listen_pcbs.listen_pcbs = lpcb;
  goto <bb 171>; [INV]

  <bb 170> :
  _226 = lwip_stats.tcp.cachehit;
  _227 = _226 + 1;
  lwip_stats.tcp.cachehit = _227;

  <bb 171> :
  tcp_listen_input (lpcb);
  pbuf_free (p);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 228>; [INV]

  <bb 172> :
  if (pcb != 0B)
    goto <bb 173>; [INV]
  else
    goto <bb 223>; [INV]

  <bb 173> :
  inseg.next = 0B;
  _228 = p->tot_len;
  inseg.len = _228;
  inseg.p = p;
  tcphdr.45_229 = tcphdr;
  inseg.tcphdr = tcphdr.45_229;
  recv_data = 0B;
  recv_flags = 0;
  recv_acked = 0;
  flags.46_230 = flags;
  _231 = (unsigned int) flags.46_230;
  _232 = _231 & 8;
  if (_232 != 0)
    goto <bb 174>; [INV]
  else
    goto <bb 175>; [INV]

  <bb 174> :
  _233 = p->flags;
  _234 = _233 | 1;
  p->flags = _234;

  <bb 175> :
  _235 = pcb->refused_data;
  if (_235 != 0B)
    goto <bb 176>; [INV]
  else
    goto <bb 182>; [INV]

  <bb 176> :
  _236 = tcp_process_refused_data (pcb);
  if (_236 == -13)
    goto <bb 179>; [INV]
  else
    goto <bb 177>; [INV]

  <bb 177> :
  _237 = pcb->refused_data;
  if (_237 != 0B)
    goto <bb 178>; [INV]
  else
    goto <bb 182>; [INV]

  <bb 178> :
  tcplen.47_238 = tcplen;
  if (tcplen.47_238 != 0)
    goto <bb 179>; [INV]
  else
    goto <bb 182>; [INV]

  <bb 179> :
  _239 = pcb->rcv_ann_wnd;
  if (_239 == 0)
    goto <bb 180>; [INV]
  else
    goto <bb 181>; [INV]

  <bb 180> :
  tcp_send_empty_ack (pcb);

  <bb 181> :
  _240 = lwip_stats.tcp.drop;
  _241 = _240 + 1;
  lwip_stats.tcp.drop = _241;
  _242 = lwip_stats.mib2.tcpinerrs;
  _243 = _242 + 1;
  lwip_stats.mib2.tcpinerrs = _243;
  // predicted unlikely by goto predictor.
  goto <bb 221>; [INV]

  <bb 182> :
  tcp_input_pcb = pcb;
  err = tcp_process (pcb);
  if (err != -13)
    goto <bb 183>; [INV]
  else
    goto <bb 221>; [INV]

  <bb 183> :
  recv_flags.48_244 = recv_flags;
  _245 = (int) recv_flags.48_244;
  _246 = _245 & 8;
  if (_246 != 0)
    goto <bb 184>; [INV]
  else
    goto <bb 187>; [INV]

  <bb 184> :
  _247 = pcb->errf;
  if (_247 != 0B)
    goto <bb 185>; [INV]
  else
    goto <bb 186>; [INV]

  <bb 185> :
  _248 = pcb->errf;
  _249 = pcb->callback_arg;
  _248 (_249, -14);

  <bb 186> :
  tcp_pcb_remove (&tcp_active_pcbs, pcb);
  tcp_free (pcb);
  goto <bb 221>; [INV]

  <bb 187> :
  err = 0;
  recv_acked.49_250 = recv_acked;
  if (recv_acked.49_250 != 0)
    goto <bb 188>; [INV]
  else
    goto <bb 194>; [INV]

  <bb 188> :
  acked16 = recv_acked;
  _251 = pcb->sent;
  if (_251 != 0B)
    goto <bb 189>; [INV]
  else
    goto <bb 190>; [INV]

  <bb 189> :
  _252 = pcb->sent;
  _253 = pcb->callback_arg;
  err = _252 (_253, pcb, acked16);
  goto <bb 191>; [INV]

  <bb 190> :
  err = 0;

  <bb 191> :
  if (err == -13)
    goto <bb 192>; [INV]
  else
    goto <bb 193>; [INV]

  <bb 192> :
  // predicted unlikely by goto predictor.
  goto <bb 221>; [INV]

  <bb 193> :
  recv_acked = 0;

  <bb 194> :
  _254 = tcp_input_delayed_close (pcb);
  if (_254 != 0)
    goto <bb 195>; [INV]
  else
    goto <bb 196>; [INV]

  <bb 195> :
  // predicted unlikely by goto predictor.
  goto <bb 221>; [INV]

  <bb 196> :
  recv_data.50_255 = recv_data;
  if (recv_data.50_255 != 0B)
    goto <bb 197>; [INV]
  else
    goto <bb 208>; [INV]

  <bb 197> :
  _256 = pcb->refused_data;
  if (_256 != 0B)
    goto <bb 198>; [INV]
  else
    goto <bb 199>; [INV]

  <bb 198> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 198>; [INV]

  <bb 199> :
  _257 = pcb->flags;
  _258 = (unsigned int) _257;
  _259 = _258 & 16;
  if (_259 != 0)
    goto <bb 200>; [INV]
  else
    goto <bb 201>; [INV]

  <bb 200> :
  recv_data.51_260 = recv_data;
  pbuf_free (recv_data.51_260);
  tcp_abort (pcb);
  // predicted unlikely by goto predictor.
  goto <bb 221>; [INV]

  <bb 201> :
  _261 = pcb->recv;
  if (_261 != 0B)
    goto <bb 202>; [INV]
  else
    goto <bb 203>; [INV]

  <bb 202> :
  _262 = pcb->recv;
  _263 = pcb->callback_arg;
  recv_data.52_264 = recv_data;
  err = _262 (_263, pcb, recv_data.52_264, 0);
  goto <bb 204>; [INV]

  <bb 203> :
  recv_data.53_265 = recv_data;
  err = tcp_recv_null (0B, pcb, recv_data.53_265, 0);

  <bb 204> :
  if (err == -13)
    goto <bb 205>; [INV]
  else
    goto <bb 206>; [INV]

  <bb 205> :
  // predicted unlikely by goto predictor.
  goto <bb 221>; [INV]

  <bb 206> :
  if (err != 0)
    goto <bb 207>; [INV]
  else
    goto <bb 208>; [INV]

  <bb 207> :
  recv_data.54_266 = recv_data;
  pcb->refused_data = recv_data.54_266;

  <bb 208> :
  recv_flags.55_267 = recv_flags;
  _268 = (int) recv_flags.55_267;
  _269 = _268 & 32;
  if (_269 != 0)
    goto <bb 209>; [INV]
  else
    goto <bb 218>; [INV]

  <bb 209> :
  _270 = pcb->refused_data;
  if (_270 != 0B)
    goto <bb 210>; [INV]
  else
    goto <bb 211>; [INV]

  <bb 210> :
  _271 = pcb->refused_data;
  _272 = _271->flags;
  _273 = pcb->refused_data;
  _274 = _272 | 32;
  _273->flags = _274;
  goto <bb 218>; [INV]

  <bb 211> :
  _275 = pcb->rcv_wnd;
  if (_275 != 7300)
    goto <bb 212>; [INV]
  else
    goto <bb 213>; [INV]

  <bb 212> :
  _276 = pcb->rcv_wnd;
  _277 = _276;
  _278 = _277 + 1;
  pcb->rcv_wnd = _278;

  <bb 213> :
  _279 = pcb->recv;
  if (_279 != 0B)
    goto <bb 214>; [INV]
  else
    goto <bb 215>; [INV]

  <bb 214> :
  _280 = pcb->recv;
  _281 = pcb->callback_arg;
  err = _280 (_281, pcb, 0B, 0);
  goto <bb 216>; [INV]

  <bb 215> :
  err = 0;

  <bb 216> :
  if (err == -13)
    goto <bb 217>; [INV]
  else
    goto <bb 218>; [INV]

  <bb 217> :
  // predicted unlikely by goto predictor.
  goto <bb 221>; [INV]

  <bb 218> :
  tcp_input_pcb = 0B;
  _282 = tcp_input_delayed_close (pcb);
  if (_282 != 0)
    goto <bb 219>; [INV]
  else
    goto <bb 220>; [INV]

  <bb 219> :
  // predicted unlikely by goto predictor.
  goto <bb 221>; [INV]

  <bb 220> :
  tcp_output (pcb);

  <bb 221> :
aborted:
  tcp_input_pcb = 0B;
  recv_data = 0B;
  _283 = inseg.p;
  if (_283 != 0B)
    goto <bb 222>; [INV]
  else
    goto <bb 226>; [INV]

  <bb 222> :
  _284 = inseg.p;
  pbuf_free (_284);
  inseg.p = 0B;
  goto <bb 226>; [INV]

  <bb 223> :
  tcphdr.56_285 = tcphdr;
  _286 = tcphdr.56_285->_hdrlen_rsvd_flags;
  _287 = lwip_htons (_286);
  _288 = (unsigned char) _287;
  _289 = (unsigned int) _288;
  _290 = _289 & 4;
  if (_290 == 0)
    goto <bb 224>; [INV]
  else
    goto <bb 225>; [INV]

  <bb 224> :
  _291 = lwip_stats.tcp.proterr;
  _292 = _291 + 1;
  lwip_stats.tcp.proterr = _292;
  _293 = lwip_stats.tcp.drop;
  _294 = _293 + 1;
  lwip_stats.tcp.drop = _294;
  ackno.57_295 = ackno;
  tcplen.58_296 = tcplen;
  _297 = (long unsigned int) tcplen.58_296;
  seqno.59_298 = seqno;
  _299 = _297 + seqno.59_298;
  tcphdr.60_300 = tcphdr;
  _301 = tcphdr.60_300->dest;
  tcphdr.61_302 = tcphdr;
  _303 = tcphdr.61_302->src;
  tcp_rst (0B, ackno.57_295, _299, &ip_data.current_iphdr_dest, &ip_data.current_iphdr_src, _301, _303);

  <bb 225> :
  pbuf_free (p);

  <bb 226> :
  goto <bb 228>; [INV]

  <bb 227> :
dropped:
  _304 = lwip_stats.tcp.drop;
  _305 = _304 + 1;
  lwip_stats.tcp.drop = _305;
  _306 = lwip_stats.mib2.tcpinerrs;
  _307 = _306 + 1;
  lwip_stats.mib2.tcpinerrs = _307;
  pbuf_free (p);

  <bb 228> :
<L261>:
  return;

}


