
Marking local functions:


Marking externally visible functions: pbuf_strstr/35 pbuf_memfind/34 pbuf_memcmp/33 pbuf_put_at/32 pbuf_try_get_at/31 pbuf_get_at/30 pbuf_clone/29 pbuf_coalesce/28 pbuf_take_at/27 pbuf_take/26 pbuf_skip/25 pbuf_get_contiguous/23 pbuf_copy_partial/22 pbuf_copy_partial_pbuf/21 pbuf_copy/20 pbuf_dechain/19 pbuf_chain/18 pbuf_cat/17 pbuf_ref/16 pbuf_clen/15 pbuf_free/14 pbuf_free_header/13 pbuf_header_force/12 pbuf_header/11 pbuf_remove_header/9 pbuf_add_header_force/8 pbuf_add_header/7 pbuf_realloc/5 pbuf_alloced_custom/4 pbuf_alloc_reference/3 pbuf_alloc/2


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

strlen/42 (strlen) @06cfa460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: pbuf_strstr/35 
  Calls: 
memcpy/41 (memcpy) @06cd7620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: pbuf_take_at/27 pbuf_take/26 pbuf_copy_partial/22 pbuf_copy_partial_pbuf/21 
  Calls: 
mem_free/40 (mem_free) @06c93d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: pbuf_free/14 
  Calls: 
memp_free/39 (memp_free) @06c93c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: pbuf_free/14 pbuf_free/14 
  Calls: 
mem_trim/38 (mem_trim) @06c931c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: pbuf_realloc/5 
  Calls: 
mem_malloc/37 (mem_malloc) @06c730e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: pbuf_alloc/2 
  Calls: 
memp_malloc/36 (memp_malloc) @06c73ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: pbuf_alloc_reference/3 pbuf_alloc/2 
  Calls: 
pbuf_strstr/35 (pbuf_strstr) @06c737e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_memfind/34 strlen/42 
pbuf_memfind/34 (pbuf_memfind) @06c73540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_strstr/35 
  Calls: pbuf_memcmp/33 
pbuf_memcmp/33 (pbuf_memcmp) @06c732a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_memfind/34 
  Calls: pbuf_get_at/30 
pbuf_put_at/32 (pbuf_put_at) @06c73000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_skip/25 
pbuf_try_get_at/31 (pbuf_try_get_at) @06c67b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_get_at/30 
  Calls: pbuf_skip_const/24 
pbuf_get_at/30 (pbuf_get_at) @06c67540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_memcmp/33 
  Calls: pbuf_try_get_at/31 
pbuf_clone/29 (pbuf_clone) @06c67e00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_coalesce/28 
  Calls: pbuf_copy/20 pbuf_alloc/2 
pbuf_coalesce/28 (pbuf_coalesce) @06c67a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_free/14 pbuf_clone/29 
pbuf_take_at/27 (pbuf_take_at) @06c677e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_take/26 memcpy/41 pbuf_skip/25 
pbuf_take/26 (pbuf_take) @06c67460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_take_at/27 
  Calls: memcpy/41 
pbuf_skip/25 (pbuf_skip) @06c670e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_put_at/32 pbuf_take_at/27 
  Calls: pbuf_skip_const/24 
pbuf_skip_const/24 (pbuf_skip_const) @06c4ea80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_try_get_at/31 pbuf_skip/25 pbuf_get_contiguous/23 
  Calls: 
pbuf_get_contiguous/23 (pbuf_get_contiguous) @06c4e540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_copy_partial/22 pbuf_skip_const/24 
pbuf_copy_partial/22 (pbuf_copy_partial) @06c4e000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_get_contiguous/23 
  Calls: memcpy/41 
pbuf_copy_partial_pbuf/21 (pbuf_copy_partial_pbuf) @06c4ed20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_copy/20 
  Calls: memcpy/41 
pbuf_copy/20 (pbuf_copy) @06c4e9a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_clone/29 
  Calls: pbuf_copy_partial_pbuf/21 
pbuf_dechain/19 (pbuf_dechain) @06c4e700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_free/14 
pbuf_chain/18 (pbuf_chain) @06c4e460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_ref/16 pbuf_cat/17 
pbuf_cat/17 (pbuf_cat) @06c4e1c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_chain/18 
  Calls: 
pbuf_ref/16 (pbuf_ref) @06c43b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_chain/18 
  Calls: 
pbuf_clen/15 (pbuf_clen) @06c43620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
pbuf_free/14 (pbuf_free) @06c43ee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_coalesce/28 pbuf_dechain/19 pbuf_free_header/13 pbuf_realloc/5 pbuf_alloc/2 
  Calls: mem_free/40 memp_free/39 memp_free/39 
   Indirect call Num speculative call targets: 0
pbuf_free_header/13 (pbuf_free_header) @06c43a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_remove_header/9 pbuf_free/14 
pbuf_header_force/12 (pbuf_header_force) @06c437e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_header_impl/10 
pbuf_header/11 (pbuf_header) @06c43540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_header_impl/10 
pbuf_header_impl/10 (pbuf_header_impl) @06c432a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_header_force/12 pbuf_header/11 
  Calls: pbuf_add_header_impl/6 pbuf_remove_header/9 
pbuf_remove_header/9 (pbuf_remove_header) @06c43000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_free_header/13 pbuf_header_impl/10 
  Calls: 
pbuf_add_header_force/8 (pbuf_add_header_force) @06c39700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_add_header_impl/6 
pbuf_add_header/7 (pbuf_add_header) @06c39000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_add_header_impl/6 
pbuf_add_header_impl/6 (pbuf_add_header_impl) @06c39d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_header_impl/10 pbuf_add_header_force/8 pbuf_add_header/7 
  Calls: 
pbuf_realloc/5 (pbuf_realloc) @06c399a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_free/14 mem_trim/38 
pbuf_alloced_custom/4 (pbuf_alloced_custom) @06c39620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: pbuf_init_alloced_pbuf/1 
pbuf_alloc_reference/3 (pbuf_alloc_reference) @06c391c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_alloc/2 
  Calls: pbuf_init_alloced_pbuf/1 memp_malloc/36 
pbuf_alloc/2 (pbuf_alloc) @06c29540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_clone/29 
  Calls: pbuf_init_alloced_pbuf/1 mem_malloc/37 pbuf_init_alloced_pbuf/1 pbuf_free/14 memp_malloc/36 pbuf_alloc_reference/3 
pbuf_init_alloced_pbuf/1 (pbuf_init_alloced_pbuf) @06c29460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: pbuf_alloced_custom/4 pbuf_alloc_reference/3 pbuf_alloc/2 pbuf_alloc/2 
  Calls: 
pbuf_strstr (const struct pbuf * p, const char * substr)
{
  size_t substr_len;
  u16_t D.7712;

  <bb 2> :
  if (substr == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _1 = *substr;
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _2 = p->tot_len;
  if (_2 == 65535)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.7712 = 65535;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  substr_len = strlen (substr);
  if (substr_len > 65534)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.7712 = 65535;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  _3 = (short unsigned int) substr_len;
  D.7712 = pbuf_memfind (p, substr, _3, 0);

  <bb 9> :
<L6>:
  return D.7712;

}


pbuf_memfind (const struct pbuf * p, const void * mem, u16_t mem_len, u16_t start_offset)
{
  u16_t plus;
  u16_t max_cmp_start;
  u16_t i;
  u16_t D.7706;

  <bb 2> :
  _1 = p->tot_len;
  max_cmp_start = _1 - mem_len;
  _2 = p->tot_len;
  _3 = (int) _2;
  _4 = (int) mem_len;
  _5 = (int) start_offset;
  _6 = _4 + _5;
  if (_3 >= _6)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  i = start_offset;
  goto <bb 7>; [INV]

  <bb 4> :
  plus = pbuf_memcmp (p, i, mem, mem_len);
  if (plus == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.7706 = i;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 6> :
  i.17_7 = i;
  i = i.17_7 + 1;

  <bb 7> :
  if (i <= max_cmp_start)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.7706 = 65535;

  <bb 9> :
<L7>:
  return D.7706;

}


pbuf_memcmp (const struct pbuf * p, u16_t offset, const void * s2, u16_t n)
{
  u8_t b;
  u8_t a;
  u16_t i;
  const struct pbuf * q;
  u16_t start;
  u16_t D.7697;

  <bb 2> :
  start = offset;
  q = p;
  _1 = p->tot_len;
  _2 = (int) _1;
  _3 = (int) offset;
  _4 = (int) n;
  _5 = _3 + _4;
  if (_2 < _5)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7697 = 65535;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 4> :
  goto <bb 6>; [INV]

  <bb 5> :
  _6 = q->len;
  start = start - _6;
  q = q->next;

  <bb 6> :
  if (q != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _7 = q->len;
  if (start >= _7)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  i = 0;
  goto <bb 12>; [INV]

  <bb 9> :
  _8 = start + i;
  a = pbuf_get_at (q, _8);
  _9 = (sizetype) i;
  _10 = s2 + _9;
  b = *_10;
  if (a != b)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _11 = MIN_EXPR <i, 65534>;
  D.7697 = _11 + 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 11> :
  i.16_12 = i;
  i = i.16_12 + 1;

  <bb 12> :
  if (i < n)
    goto <bb 9>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  D.7697 = 0;

  <bb 14> :
<L11>:
  return D.7697;

}


pbuf_put_at (struct pbuf * p, u16_t offset, u8_t data)
{
  struct pbuf * q;
  u16_t q_idx;

  <bb 2> :
  q = pbuf_skip (p, offset, &q_idx);
  if (q != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = q->len;
  q_idx.14_2 = q_idx;
  if (_1 > q_idx.14_2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = q->payload;
  q_idx.15_4 = q_idx;
  _5 = (sizetype) q_idx.15_4;
  _6 = _3 + _5;
  *_6 = data;

  <bb 5> :
  q_idx = {CLOBBER};
  return;

}


pbuf_try_get_at (const struct pbuf * p, u16_t offset)
{
  const struct pbuf * q;
  u16_t q_idx;
  int D.7688;

  <bb 2> :
  q = pbuf_skip_const (p, offset, &q_idx);
  if (q != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = q->len;
  q_idx.12_2 = q_idx;
  if (_1 > q_idx.12_2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _3 = q->payload;
  q_idx.13_4 = q_idx;
  _5 = (sizetype) q_idx.13_4;
  _6 = _3 + _5;
  _7 = *_6;
  D.7688 = (int) _7;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  D.7688 = -1;

  <bb 6> :
  q_idx = {CLOBBER};

  <bb 7> :
<L5>:
  return D.7688;

}


pbuf_get_at (const struct pbuf * p, u16_t offset)
{
  int ret;
  u8_t D.7682;

  <bb 2> :
  ret = pbuf_try_get_at (p, offset);
  if (ret >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7682 = (u8_t) ret;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.7682 = 0;

  <bb 5> :
<L2>:
  return D.7682;

}


pbuf_clone (pbuf_layer layer, pbuf_type type, struct pbuf * p)
{
  err_t err;
  struct pbuf * q;
  struct pbuf * D.7676;

  <bb 2> :
  _1 = p->tot_len;
  q = pbuf_alloc (layer, _1, type);
  if (q == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7676 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  err = pbuf_copy (q, p);
  if (err != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  D.7676 = q;

  <bb 7> :
<L5>:
  return D.7676;

}


pbuf_coalesce (struct pbuf * p, pbuf_layer layer)
{
  struct pbuf * q;
  struct pbuf * D.7670;

  <bb 2> :
  _1 = p->next;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7670 = p;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  q = pbuf_clone (layer, 640, p);
  if (q == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.7670 = p;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  pbuf_free (p);
  D.7670 = q;

  <bb 7> :
<L4>:
  return D.7670;

}


pbuf_take_at (struct pbuf * buf, const void * dataptr, u16_t len, u16_t offset)
{
  u16_t first_copy_len;
  const u8_t * src_ptr;
  u16_t remaining_len;
  struct pbuf * q;
  u16_t target_offset;
  err_t D.7665;
  short unsigned int iftmp.8;

  <bb 2> :
  q = pbuf_skip (buf, offset, &target_offset);
  if (q != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  _1 = q->tot_len;
  _2 = (int) _1;
  target_offset.6_3 = target_offset;
  _4 = (int) target_offset.6_3;
  _5 = (int) len;
  _6 = _4 + _5;
  if (_2 >= _6)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 4> :
  remaining_len = len;
  src_ptr = dataptr;
  _7 = q->len;
  target_offset.7_8 = target_offset;
  if (_7 <= target_offset.7_8)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  _9 = q->len;
  _10 = (int) _9;
  target_offset.9_11 = target_offset;
  _12 = (int) target_offset.9_11;
  _13 = _10 - _12;
  _14 = (int) len;
  if (_13 < _14)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _15 = q->len;
  target_offset.10_16 = target_offset;
  iftmp.8 = _15 - target_offset.10_16;
  goto <bb 9>; [INV]

  <bb 8> :
  iftmp.8 = len;

  <bb 9> :
  first_copy_len = iftmp.8;
  _17 = q->payload;
  target_offset.11_18 = target_offset;
  _19 = (sizetype) target_offset.11_18;
  _20 = _17 + _19;
  _21 = (unsigned int) first_copy_len;
  memcpy (_20, dataptr, _21);
  remaining_len = remaining_len - first_copy_len;
  _22 = (sizetype) first_copy_len;
  src_ptr = src_ptr + _22;
  if (remaining_len != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _23 = q->next;
  D.7665 = pbuf_take (_23, src_ptr, remaining_len);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 11> :
  D.7665 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  D.7665 = -1;

  <bb 13> :
  target_offset = {CLOBBER};

  <bb 14> :
<L13>:
  return D.7665;

}


pbuf_take (struct pbuf * buf, const void * dataptr, u16_t len)
{
  size_t copied_total;
  size_t total_copy_len;
  size_t buf_copy_len;
  struct pbuf * p;
  err_t D.7636;

  <bb 2> :
  total_copy_len = (size_t) len;
  copied_total = 0;
  if (buf == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7636 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 4> :
  if (dataptr == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.7636 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 6> :
  _1 = buf->tot_len;
  if (len > _1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.7636 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 8> :
  if (buf == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  if (dataptr == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _2 = buf->tot_len;
  if (len > _2)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.7636 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 12> :
  p = buf;
  goto <bb 18>; [INV]

  <bb 13> :
  if (p == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 14>; [INV]

  <bb 15> :
  buf_copy_len = total_copy_len;
  _3 = p->len;
  _4 = (unsigned int) _3;
  if (buf_copy_len > _4)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _5 = p->len;
  buf_copy_len = (size_t) _5;

  <bb 17> :
  _6 = p->payload;
  _7 = dataptr + copied_total;
  memcpy (_6, _7, buf_copy_len);
  total_copy_len = total_copy_len - buf_copy_len;
  copied_total = copied_total + buf_copy_len;
  p = p->next;

  <bb 18> :
  if (total_copy_len != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  if (total_copy_len != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  _8 = (unsigned int) len;
  if (copied_total != _8)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 21>; [INV]

  <bb 22> :
  D.7636 = 0;

  <bb 23> :
<L22>:
  return D.7636;

}


pbuf_skip (struct pbuf * in, u16_t in_offset, u16_t * out_offset)
{
  const struct pbuf * out;
  struct pbuf * D.7632;

  <bb 2> :
  out = pbuf_skip_const (in, in_offset, out_offset);
  D.7632 = out;

  <bb 3> :
<L0>:
  return D.7632;

}


pbuf_skip_const (const struct pbuf * in, u16_t in_offset, u16_t * out_offset)
{
  const struct pbuf * q;
  u16_t offset_left;
  const struct pbuf * D.7630;

  <bb 2> :
  offset_left = in_offset;
  q = in;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = q->len;
  offset_left = offset_left - _1;
  q = q->next;

  <bb 4> :
  if (q != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _2 = q->len;
  if (offset_left >= _2)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (out_offset != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  *out_offset = offset_left;

  <bb 8> :
  D.7630 = q;

  <bb 9> :
<L6>:
  return D.7630;

}


pbuf_get_contiguous (const struct pbuf * p, void * buffer, size_t bufsize, u16_t len, u16_t offset)
{
  u16_t out_offset;
  const struct pbuf * q;
  void * D.7614;

  <bb 2> :
  if (p == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7614 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 4> :
  if (buffer == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.7614 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 6> :
  _1 = (unsigned int) len;
  if (bufsize < _1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.7614 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 8> :
  q = pbuf_skip_const (p, offset, &out_offset);
  if (q != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  _2 = q->len;
  _3 = (int) _2;
  out_offset.3_4 = out_offset;
  _5 = (int) out_offset.3_4;
  _6 = (int) len;
  _7 = _5 + _6;
  if (_3 >= _7)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _8 = q->payload;
  out_offset.4_9 = out_offset;
  _10 = (sizetype) out_offset.4_9;
  D.7614 = _8 + _10;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 11> :
  out_offset.5_11 = out_offset;
  _12 = pbuf_copy_partial (q, buffer, len, out_offset.5_11);
  if (len != _12)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.7614 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 13> :
  D.7614 = buffer;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 14> :
  D.7614 = 0B;

  <bb 15> :
  out_offset = {CLOBBER};

  <bb 16> :
<L13>:
  return D.7614;

}


pbuf_copy_partial (const struct pbuf * buf, void * dataptr, u16_t len, u16_t offset)
{
  u16_t copied_total;
  u16_t buf_copy_len;
  u16_t left;
  const struct pbuf * p;
  u16_t D.7601;

  <bb 2> :
  left = 0;
  copied_total = 0;
  if (buf == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7601 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 4> :
  if (dataptr == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.7601 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 17>; [INV]

  <bb 6> :
  p = buf;
  goto <bb 14>; [INV]

  <bb 7> :
  if (offset != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  _1 = p->len;
  if (offset >= _1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _2 = p->len;
  offset = offset - _2;
  goto <bb 13>; [INV]

  <bb 10> :
  _3 = p->len;
  buf_copy_len = _3 - offset;
  if (buf_copy_len > len)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  buf_copy_len = len;

  <bb 12> :
  _4 = (sizetype) left;
  _5 = dataptr + _4;
  _6 = p->payload;
  _7 = (sizetype) offset;
  _8 = _6 + _7;
  _9 = (unsigned int) buf_copy_len;
  memcpy (_5, _8, _9);
  copied_total = copied_total + buf_copy_len;
  left = left + buf_copy_len;
  len = len - buf_copy_len;
  offset = 0;

  <bb 13> :
  p = p->next;

  <bb 14> :
  if (len != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  if (p != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  D.7601 = copied_total;

  <bb 17> :
<L14>:
  return D.7601;

}


pbuf_copy_partial_pbuf (struct pbuf * p_to, const struct pbuf * p_from, u16_t copy_len, u16_t offset)
{
  u16_t len;
  size_t len_calc;
  size_t offset_from;
  size_t offset_to;
  short unsigned int iftmp.2;
  err_t D.7559;

  <bb 2> :
  offset_to = (size_t) offset;
  offset_from = 0;
  if (p_from == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _1 = p_from->tot_len;
  if (copy_len > _1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.7559 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 36>; [INV]

  <bb 5> :
  if (p_to == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _2 = p_to->tot_len;
  _3 = (int) _2;
  _4 = (int) offset;
  _5 = (int) copy_len;
  _6 = _4 + _5;
  if (_3 < _6)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.7559 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 36>; [INV]

  <bb 8> :
  _7 = p_to->len;
  _8 = (unsigned int) _7;
  _9 = _8 - offset_to;
  _10 = p_from->len;
  _11 = (unsigned int) _10;
  _12 = _11 - offset_from;
  if (_9 >= _12)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _13 = p_from->len;
  _14 = (unsigned int) _13;
  len_calc = _14 - offset_from;
  goto <bb 11>; [INV]

  <bb 10> :
  _15 = p_to->len;
  _16 = (unsigned int) _15;
  len_calc = _16 - offset_to;

  <bb 11> :
  _17 = (unsigned int) copy_len;
  if (len_calc <= _17)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  iftmp.2 = (short unsigned int) len_calc;
  goto <bb 14>; [INV]

  <bb 13> :
  iftmp.2 = copy_len;

  <bb 14> :
  len = iftmp.2;
  _18 = p_to->payload;
  _19 = _18 + offset_to;
  _20 = p_from->payload;
  _21 = _20 + offset_from;
  _22 = (unsigned int) len;
  memcpy (_19, _21, _22);
  _23 = (unsigned int) len;
  offset_to = offset_to + _23;
  _24 = (unsigned int) len;
  offset_from = offset_from + _24;
  copy_len = copy_len - len;
  _25 = p_to->len;
  _26 = (unsigned int) _25;
  if (offset_to > _26)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 15>; [INV]

  <bb 16> :
  _27 = p_from->len;
  _28 = (unsigned int) _27;
  if (offset_from > _28)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 17>; [INV]

  <bb 18> :
  _29 = p_from->len;
  _30 = (unsigned int) _29;
  if (offset_from >= _30)
    goto <bb 19>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 19> :
  offset_from = 0;
  p_from = p_from->next;
  if (p_from == 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  if (copy_len != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  D.7559 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 36>; [INV]

  <bb 22> :
  _31 = p_to->len;
  _32 = (unsigned int) _31;
  if (offset_to == _32)
    goto <bb 23>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 23> :
  offset_to = 0;
  p_to = p_to->next;
  if (p_to == 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 24> :
  if (copy_len != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  D.7559 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 36>; [INV]

  <bb 26> :
  if (p_from != 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 27> :
  _33 = p_from->len;
  _34 = p_from->tot_len;
  if (_33 == _34)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 28> :
  _35 = p_from->next;
  if (_35 != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  D.7559 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 36>; [INV]

  <bb 30> :
  if (p_to != 0B)
    goto <bb 31>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 31> :
  _36 = p_to->len;
  _37 = p_to->tot_len;
  if (_36 == _37)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _38 = p_to->next;
  if (_38 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  D.7559 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 36>; [INV]

  <bb 34> :
  if (copy_len != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 35> :
  D.7559 = 0;

  <bb 36> :
<L44>:
  return D.7559;

}


pbuf_copy (struct pbuf * p_to, const struct pbuf * p_from)
{
  err_t D.7554;

  <bb 2> :
  if (p_from == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7554 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = p_from->tot_len;
  D.7554 = pbuf_copy_partial_pbuf (p_to, p_from, _1, 0);

  <bb 5> :
<L2>:
  return D.7554;

}


pbuf_dechain (struct pbuf * p)
{
  u8_t tail_gone;
  struct pbuf * q;
  struct pbuf * iftmp.1;
  struct pbuf * D.7546;

  <bb 2> :
  tail_gone = 1;
  q = p->next;
  if (q != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _1 = q->tot_len;
  _2 = (int) _1;
  _3 = p->tot_len;
  _4 = (int) _3;
  _5 = p->len;
  _6 = (int) _5;
  _7 = _4 - _6;
  if (_2 != _7)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 4>; [INV]

  <bb 5> :
  _8 = p->tot_len;
  _9 = p->len;
  _10 = _8 - _9;
  q->tot_len = _10;
  p->next = 0B;
  _11 = p->len;
  p->tot_len = _11;
  tail_gone = pbuf_free (q);

  <bb 6> :
  _12 = p->tot_len;
  _13 = p->len;
  if (_12 != _13)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 7>; [INV]

  <bb 8> :
  if (tail_gone == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  iftmp.1 = q;
  goto <bb 11>; [INV]

  <bb 10> :
  iftmp.1 = 0B;

  <bb 11> :
  D.7546 = iftmp.1;

  <bb 12> :
<L13>:
  return D.7546;

}


pbuf_chain (struct pbuf * h, struct pbuf * t)
{
  <bb 2> :
  pbuf_cat (h, t);
  pbuf_ref (t);
  return;

}


pbuf_cat (struct pbuf * h, struct pbuf * t)
{
  struct pbuf * p;

  <bb 2> :
  if (h == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (t == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 5> :
  p = h;
  goto <bb 7>; [INV]

  <bb 6> :
  _1 = p->tot_len;
  _2 = t->tot_len;
  _3 = _1 + _2;
  p->tot_len = _3;
  p = p->next;

  <bb 7> :
  _4 = p->next;
  if (_4 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _5 = p->tot_len;
  _6 = p->len;
  if (_5 != _6)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 9>; [INV]

  <bb 10> :
  _7 = p->next;
  if (_7 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 11>; [INV]

  <bb 12> :
  _8 = p->tot_len;
  _9 = t->tot_len;
  _10 = _8 + _9;
  p->tot_len = _10;
  p->next = t;

  <bb 13> :
<L12>:
  return;

}


pbuf_ref (struct pbuf * p)
{
  <bb 2> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = p->ref;
  _2 = _1 + 1;
  p->ref = _2;
  _3 = p->ref;
  if (_3 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 4>; [INV]

  <bb 5> :
  return;

}


pbuf_clen (const struct pbuf * p)
{
  u16_t len;
  u16_t D.7524;

  <bb 2> :
  len = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  len = len + 1;
  p = p->next;

  <bb 4> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.7524 = len;

  <bb 6> :
<L3>:
  return D.7524;

}


pbuf_free (struct pbuf * p)
{
  struct pbuf_custom * pc;
  u8_t ref;
  u8_t count;
  struct pbuf * q;
  u8_t alloc_src;
  u8_t D.7501;

  <bb 2> :
  if (p == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  if (p == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 4>; [INV]

  <bb 5> :
  D.7501 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 6> :
  count = 0;
  goto <bb 23>; [INV]

  <bb 7> :
  _1 = p->ref;
  if (_1 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 8>; [INV]

  <bb 9> :
  _2 = p->ref;
  _3 = _2 + 255;
  p->ref = _3;
  ref = p->ref;
  if (ref == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 10> :
  q = p->next;
  _4 = p->type_internal;
  alloc_src = _4 & 15;
  _5 = p->flags;
  _6 = (unsigned int) _5;
  _7 = _6 & 2;
  if (_7 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  pc = p;
  _8 = pc->custom_free_function;
  if (_8 == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 12>; [INV]

  <bb 13> :
  _9 = pc->custom_free_function;
  _9 (p);
  goto <bb 21>; [INV]

  <bb 14> :
  if (alloc_src == 2)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  memp_free (14, p);
  goto <bb 21>; [INV]

  <bb 16> :
  if (alloc_src == 1)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  memp_free (13, p);
  goto <bb 21>; [INV]

  <bb 18> :
  if (alloc_src == 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  mem_free (p);
  goto <bb 21>; [INV]

  <bb 20> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 20>; [INV]

  <bb 21> :
  count.0_10 = count;
  count = count.0_10 + 1;
  p = q;
  goto <bb 23>; [INV]

  <bb 22> :
  p = 0B;

  <bb 23> :
  if (p != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  D.7501 = count;

  <bb 25> :
<L32>:
  return D.7501;

}


pbuf_free_header (struct pbuf * q, u16_t size)
{
  struct pbuf * f;
  u16_t free_left;
  struct pbuf * p;
  struct pbuf * D.7495;

  <bb 2> :
  p = q;
  free_left = size;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = p->len;
  if (free_left >= _1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  f = p;
  _2 = p->len;
  free_left = free_left - _2;
  p = p->next;
  f->next = 0B;
  pbuf_free (f);
  goto <bb 6>; [INV]

  <bb 5> :
  _3 = (unsigned int) free_left;
  pbuf_remove_header (p, _3);
  free_left = 0;

  <bb 6> :
  if (free_left != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  if (p != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  D.7495 = p;

  <bb 9> :
<L7>:
  return D.7495;

}


pbuf_header_force (struct pbuf * p, s16_t header_size_increment)
{
  u8_t D.7489;

  <bb 2> :
  D.7489 = pbuf_header_impl (p, header_size_increment, 1);

  <bb 3> :
<L0>:
  return D.7489;

}


pbuf_header (struct pbuf * p, s16_t header_size_increment)
{
  u8_t D.7487;

  <bb 2> :
  D.7487 = pbuf_header_impl (p, header_size_increment, 0);

  <bb 3> :
<L0>:
  return D.7487;

}


pbuf_header_impl (struct pbuf * p, s16_t header_size_increment, u8_t force)
{
  u8_t D.7485;

  <bb 2> :
  if (header_size_increment < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (int) header_size_increment;
  _2 = -_1;
  _3 = (unsigned int) _2;
  D.7485 = pbuf_remove_header (p, _3);
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = (unsigned int) header_size_increment;
  D.7485 = pbuf_add_header_impl (p, _4, force);
  // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.7485;

}


pbuf_remove_header (struct pbuf * p, size_t header_size_decrement)
{
  u16_t increment_magnitude;
  void * payload;
  u8_t D.7477;

  <bb 2> :
  if (p == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  if (p == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (header_size_decrement > 65535)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.7477 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 7> :
  if (header_size_decrement == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.7477 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 9> :
  increment_magnitude = (u16_t) header_size_decrement;
  _1 = p->len;
  if (increment_magnitude > _1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  D.7477 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 11> :
  payload = p->payload;
  _2 = p->payload;
  _3 = _2 + header_size_decrement;
  p->payload = _3;
  _4 = p->len;
  _5 = _4 - increment_magnitude;
  p->len = _5;
  _6 = p->tot_len;
  _7 = _6 - increment_magnitude;
  p->tot_len = _7;
  D.7477 = 0;

  <bb 12> :
<L10>:
  return D.7477;

}


pbuf_add_header_force (struct pbuf * p, size_t header_size_increment)
{
  u8_t D.7470;

  <bb 2> :
  D.7470 = pbuf_add_header_impl (p, header_size_increment, 1);

  <bb 3> :
<L0>:
  return D.7470;

}


pbuf_add_header (struct pbuf * p, size_t header_size_increment)
{
  u8_t D.7468;

  <bb 2> :
  D.7468 = pbuf_add_header_impl (p, header_size_increment, 0);

  <bb 3> :
<L0>:
  return D.7468;

}


pbuf_add_header_impl (struct pbuf * p, size_t header_size_increment, u8_t force)
{
  u16_t increment_magnitude;
  void * payload;
  u16_t type_internal;
  u8_t D.7454;

  <bb 2> :
  if (p == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  if (p == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (header_size_increment > 65535)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.7454 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 7> :
  if (header_size_increment == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.7454 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 9> :
  increment_magnitude = (u16_t) header_size_increment;
  _1 = p->tot_len;
  _2 = increment_magnitude + _1;
  if (increment_magnitude > _2)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  D.7454 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 11> :
  _3 = p->type_internal;
  type_internal = (u16_t) _3;
  _4 = (int) type_internal;
  _5 = _4 & 128;
  if (_5 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  _6 = p->payload;
  _7 = -header_size_increment;
  payload = _6 + _7;
  _8 = p + 24;
  if (payload < _8)
    goto <bb 13>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 13> :
  D.7454 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 14> :
  if (force != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  _9 = p->payload;
  _10 = -header_size_increment;
  payload = _9 + _10;
  goto <bb 17>; [INV]

  <bb 16> :
  D.7454 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 17> :
  p->payload = payload;
  _11 = p->len;
  _12 = increment_magnitude + _11;
  p->len = _12;
  _13 = p->tot_len;
  _14 = increment_magnitude + _13;
  p->tot_len = _14;
  D.7454 = 0;

  <bb 18> :
<L18>:
  return D.7454;

}


pbuf_realloc (struct pbuf * p, u16_t new_len)
{
  u16_t shrink;
  u16_t rem_len;
  struct pbuf * q;

  <bb 2> :
  if (p == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  _1 = p->tot_len;
  if (new_len >= _1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 18>; [INV]

  <bb 6> :
  _2 = p->tot_len;
  shrink = _2 - new_len;
  rem_len = new_len;
  q = p;
  goto <bb 9>; [INV]

  <bb 7> :
  _3 = q->len;
  rem_len = rem_len - _3;
  _4 = q->tot_len;
  _5 = _4 - shrink;
  q->tot_len = _5;
  q = q->next;
  if (q == 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 8>; [INV]

  <bb 9> :
  _6 = q->len;
  if (rem_len > _6)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _7 = q->type_internal;
  _8 = (int) _7;
  _9 = _8 & 15;
  if (_9 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  _10 = q->len;
  if (rem_len != _10)
    goto <bb 12>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 12> :
  _11 = q->flags;
  _12 = (unsigned int) _11;
  _13 = _12 & 2;
  if (_13 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  _14 = q->payload;
  _15 = _14 - q;
  _16 = (short unsigned int) _15;
  _17 = rem_len + _16;
  q = mem_trim (q, _17);
  if (q == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 14>; [INV]

  <bb 15> :
  q->len = rem_len;
  _18 = q->len;
  q->tot_len = _18;
  _19 = q->next;
  if (_19 != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _20 = q->next;
  pbuf_free (_20);

  <bb 17> :
  q->next = 0B;

  <bb 18> :
<L22>:
  return;

}


pbuf_alloced_custom (pbuf_layer l, u16_t length, pbuf_type type, struct pbuf_custom * p, void * payload_mem, u16_t payload_mem_len)
{
  void * payload;
  u16_t offset;
  struct pbuf * D.7427;

  <bb 2> :
  offset = (u16_t) l;
  _1 = (unsigned int) offset;
  _2 = _1 + 7;
  _3 = _2 & 4294967288;
  _4 = (unsigned int) length;
  _5 = _3 + _4;
  _6 = (unsigned int) payload_mem_len;
  if (_5 > _6)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7427 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 4> :
  if (payload_mem != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _7 = (unsigned int) offset;
  _8 = _7 + 7;
  _9 = _8 & 4294967288;
  payload = payload_mem + _9;
  goto <bb 7>; [INV]

  <bb 6> :
  payload = 0B;

  <bb 7> :
  _10 = &p->pbuf;
  pbuf_init_alloced_pbuf (_10, payload, length, length, type, 2);
  D.7427 = &p->pbuf;

  <bb 8> :
<L5>:
  return D.7427;

}


pbuf_alloc_reference (void * payload, u16_t length, pbuf_type type)
{
  struct pbuf * p;
  struct pbuf * D.7423;

  <bb 2> :
  if (type != 65)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (type != 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 4>; [INV]

  <bb 5> :
  p = memp_malloc (13);
  if (p == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.7423 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  pbuf_init_alloced_pbuf (p, payload, length, length, type, 0);
  D.7423 = p;

  <bb 8> :
<L7>:
  return D.7423;

}


pbuf_alloc (pbuf_layer layer, u16_t length, pbuf_type type)
{
  mem_size_t alloc_len;
  mem_size_t payload_len;
  u16_t qlen;
  u16_t rem_len;
  struct pbuf * last;
  struct pbuf * q;
  u16_t offset;
  struct pbuf * p;
  struct pbuf * D.7399;

  <bb 2> :
  offset = (u16_t) layer;
  switch (type) <default: <L27> [INV], case 1: <L0> [INV], case 65: <L0> [INV], case 386: <L2> [INV], case 640: <L18> [INV]>

  <bb 3> :
<L0>:
  p = pbuf_alloc_reference (0B, length, type);
  goto <bb 28>; [INV]

  <bb 4> :
<L2>:
  p = 0B;
  last = 0B;
  rem_len = length;

  <bb 5> :
  q = memp_malloc (14);
  if (q == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  if (p != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  pbuf_free (p);

  <bb 8> :
  D.7399 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 9> :
  _1 = offset + 7;
  _2 = _1 & 65528;
  _3 = 1536 - _2;
  qlen = MIN_EXPR <rem_len, _3>;
  _4 = (sizetype) offset;
  _5 = _4 + 24;
  _6 = q + _5;
  _7 = (unsigned int) _6;
  _8 = _7 + 7;
  _9 = _8 & 4294967288;
  _10 = (void *) _9;
  pbuf_init_alloced_pbuf (q, _10, rem_len, qlen, type, 0);
  _11 = q->payload;
  _12 = (unsigned int) _11;
  _13 = _12 & 7;
  if (_13 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 10>; [INV]

  <bb 11> :
  _14 = (unsigned int) offset;
  _15 = _14 + 7;
  _16 = _15 & 4294967288;
  if (_16 == 1536)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 12>; [INV]

  <bb 13> :
  if (p == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  p = q;
  goto <bb 16>; [INV]

  <bb 15> :
  last->next = q;

  <bb 16> :
  last = q;
  rem_len = rem_len - qlen;
  offset = 0;
  if (rem_len != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  goto <bb 28>; [INV]

  <bb 18> :
<L18>:
  _17 = offset + 7;
  _18 = _17 & 65528;
  _19 = length + 7;
  _20 = _19 & 65528;
  payload_len = _18 + _20;
  alloc_len = payload_len + 24;
  _21 = (unsigned int) payload_len;
  _22 = (unsigned int) length;
  _23 = _22 + 7;
  _24 = _23 & 4294967288;
  if (_21 < _24)
    goto <bb 20>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  _25 = (unsigned int) alloc_len;
  _26 = (unsigned int) length;
  _27 = _26 + 7;
  _28 = _27 & 4294967288;
  if (_25 < _28)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  D.7399 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 21> :
  p = mem_malloc (alloc_len);
  if (p == 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  D.7399 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]

  <bb 23> :
  _29 = (sizetype) offset;
  _30 = _29 + 24;
  _31 = p + _30;
  _32 = (unsigned int) _31;
  _33 = _32 + 7;
  _34 = _33 & 4294967288;
  _35 = (void *) _34;
  pbuf_init_alloced_pbuf (p, _35, length, length, type, 0);
  _36 = p->payload;
  _37 = (unsigned int) _36;
  _38 = _37 & 7;
  if (_38 != 0)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 24>; [INV]

  <bb 25> :
  goto <bb 28>; [INV]

  <bb 26> :
<L27>:

  <bb 27> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 27>; [INV]

  <bb 28> :
  D.7399 = p;

  <bb 29> :
<L32>:
  return D.7399;

}


pbuf_init_alloced_pbuf (struct pbuf * p, void * payload, u16_t tot_len, u16_t len, pbuf_type type, u8_t flags)
{
  <bb 2> :
  p->next = 0B;
  p->payload = payload;
  p->tot_len = tot_len;
  p->len = len;
  _1 = (unsigned char) type;
  p->type_internal = _1;
  p->flags = flags;
  p->ref = 1;
  p->if_idx = 0;
  return;

}


