
Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

memset/33 (memset) @06e28540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_new/14 
  Calls: 
memp_malloc/32 (memp_malloc) @06e28460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_new/14 
  Calls: 
memp_free/31 (memp_free) @06e282a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_remove/13 
  Calls: 
pbuf_free/30 (pbuf_free) @06e28000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto_if_src/11 
  Calls: 
ip6_chksum_pseudo/29 (ip6_chksum_pseudo) @06dc2e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto_if_src/11 
  Calls: 
pbuf_remove_header/28 (pbuf_remove_header) @06dc2d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto_if_src/11 
  Calls: 
pbuf_chain/27 (pbuf_chain) @06dc2c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto_if_src/11 
  Calls: 
pbuf_alloc/26 (pbuf_alloc) @06dc28c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto_if_src/11 
  Calls: 
pbuf_add_header/25 (pbuf_add_header) @06dc27e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto_if_src/11 
  Calls: 
ip4_output_if/24 (ip4_output_if) @06dc2540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto_if_src/11 raw_sendto_if_src/11 
  Calls: 
ip6_output_if/23 (ip6_output_if) @06dc2ee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto_if_src/11 raw_sendto_if_src/11 
  Calls: 
ip6_select_source_address/22 (ip6_select_source_address) @06dc2b60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto/10 
  Calls: 
ip4_route/21 (ip4_route) @06dc2a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto/10 
  Calls: 
netif_get_by_index/20 (netif_get_by_index) @06dc29a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto/10 raw_sendto/10 
  Calls: 
ip_addr_any_type/19 (ip_addr_any_type) @06e0b240
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: raw_disconnect/8 (read) raw_disconnect/8 (read) raw_disconnect/8 (read) raw_disconnect/8 (read) raw_disconnect/8 (read) raw_disconnect/8 (read) raw_disconnect/8 (read) raw_disconnect/8 (read) 
  Availability: not_available
  Varpool flags: read-only
ip6_route/18 (ip6_route) @06dc2000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_sendto/10 raw_connect/7 raw_bind/5 
  Calls: 
ip4_addr_isbroadcast_u32/17 (ip4_addr_isbroadcast_u32) @06d68e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: raw_input/4 
  Calls: 
raw_netif_ip_addr_changed/16 (raw_netif_ip_addr_changed) @06d68460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: raw_pcbs/1 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
raw_new_ip_type/15 (raw_new_ip_type) @06d577e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: raw_new/14 
raw_new/14 (raw_new) @06d57380
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: raw_pcbs/1 (read) raw_pcbs/1 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: raw_new_ip_type/15 
  Calls: memset/33 memp_malloc/32 
raw_remove/13 (raw_remove) @06d57000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: raw_pcbs/1 (read) raw_pcbs/1 (read) raw_pcbs/1 (write) raw_pcbs/1 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: memp_free/31 
raw_send/12 (raw_send) @06d401c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: raw_sendto/10 
raw_sendto_if_src/11 (raw_sendto_if_src) @06d40d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: raw_sendto/10 
  Calls: pbuf_free/30 ip4_output_if/24 ip6_output_if/23 ip6_chksum_pseudo/29 pbuf_remove_header/28 pbuf_chain/27 pbuf_alloc/26 pbuf_add_header/25 ip4_output_if/24 ip6_output_if/23 
raw_sendto/10 (raw_sendto) @06d400e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: raw_send/12 
  Calls: raw_sendto_if_src/11 ip6_select_source_address/22 ip4_route/21 ip6_route/18 netif_get_by_index/20 netif_get_by_index/20 
raw_recv/9 (raw_recv) @06ce0700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
raw_disconnect/8 (raw_disconnect) @06ce0460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: ip_addr_any_type/19 (read) ip_addr_any_type/19 (read) ip_addr_any_type/19 (read) ip_addr_any_type/19 (read) ip_addr_any_type/19 (read) ip_addr_any_type/19 (read) ip_addr_any_type/19 (read) ip_addr_any_type/19 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
raw_connect/7 (raw_connect) @06ccf460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: ip6_route/18 
raw_bind_netif/6 (raw_bind_netif) @06cb9540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
raw_bind/5 (raw_bind) @06cb92a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: ip6_route/18 
raw_input/4 (raw_input) @06cac2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) raw_pcbs/1 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (addr) raw_pcbs/1 (read) raw_pcbs/1 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: raw_input_local_match/2 ip4_addr_isbroadcast_u32/17 
   Indirect call Num speculative call targets: 0
ip_data/3 (ip_data) @06c9f750
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: raw_input_local_match/2 (read) raw_input_local_match/2 (read) raw_input_local_match/2 (read) raw_input_local_match/2 (read) raw_input_local_match/2 (read) raw_input_local_match/2 (read) raw_input_local_match/2 (read) raw_input_local_match/2 (read) raw_input_local_match/2 (read) raw_input/4 (read) raw_input/4 (read) raw_input/4 (read) raw_input/4 (read) raw_input/4 (read) raw_input/4 (read) raw_input/4 (read) raw_input/4 (read) raw_input/4 (read) raw_input/4 (read) raw_input/4 (addr) 
  Availability: not_available
  Varpool flags:
raw_input_local_match/2 (raw_input_local_match) @06ca47e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) ip_data/3 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: raw_input/4 
  Calls: 
raw_pcbs/1 (raw_pcbs) @06c9f510
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: raw_input/4 (read) raw_input/4 (write) raw_remove/13 (read) raw_new/14 (write) raw_input/4 (read) raw_remove/13 (write) raw_remove/13 (read) raw_remove/13 (read) raw_new/14 (read) raw_netif_ip_addr_changed/16 (read) 
  Availability: available
  Varpool flags:
raw_netif_ip_addr_changed (const struct ip_addr_t * old_addr, const struct ip_addr_t * new_addr)
{
  struct raw_pcb * rpcb;
  int iftmp.46;
  _Bool iftmp.45;
  _Bool iftmp.44;
  int iftmp.43;
  int iftmp.42;
  _Bool iftmp.41;
  _Bool iftmp.40;
  int iftmp.39;
  int iftmp.38;
  _Bool iftmp.37;
  _Bool iftmp.36;
  unsigned char _1;
  const struct ip6_addr_t * _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  const struct ip4_addr_t * _7;
  long unsigned int _8;
  unsigned char _9;
  const struct ip6_addr_t * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  const struct ip4_addr_t * _15;
  long unsigned int _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  unsigned char _28;
  unsigned char _29;
  long unsigned int _30;
  long unsigned int _31;
  unsigned char _32;
  unsigned char _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  unsigned char _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  _Bool iftmp.36_43;
  _Bool iftmp.37_44;
  int iftmp.38_45;
  int iftmp.39_46;
  _Bool iftmp.40_47;
  _Bool iftmp.41_48;
  int iftmp.42_49;
  int iftmp.43_50;
  _Bool iftmp.44_51;
  _Bool iftmp.45_52;
  int iftmp.46_53;
  _Bool iftmp.36_58;
  int iftmp.38_60;
  int iftmp.38_61;
  _Bool iftmp.37_62;
  int iftmp.39_63;
  int iftmp.39_64;
  _Bool iftmp.37_65;
  _Bool iftmp.36_66;
  _Bool iftmp.40_68;
  int iftmp.42_69;
  int iftmp.42_70;
  _Bool iftmp.41_71;
  int iftmp.43_72;
  int iftmp.43_73;
  _Bool iftmp.41_74;
  _Bool iftmp.40_75;
  _Bool iftmp.44_77;
  _Bool iftmp.45_78;
  int iftmp.46_79;
  int iftmp.46_80;
  _Bool iftmp.45_81;
  _Bool iftmp.44_82;

  <bb 2> :
  if (old_addr_57(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 3> :
  if (old_addr_57(D) != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 4> :
  _1 = old_addr_57(D)->type;
  if (_1 == 6)
    goto <bb 5>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 5> :
  _2 = &old_addr_57(D)->u_addr.ip6;
  if (_2 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 6> :
  _3 = old_addr_57(D)->u_addr.ip6.addr[0];
  if (_3 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _4 = old_addr_57(D)->u_addr.ip6.addr[1];
  if (_4 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _5 = old_addr_57(D)->u_addr.ip6.addr[2];
  if (_5 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _6 = old_addr_57(D)->u_addr.ip6.addr[3];
  if (_6 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.38_60 = 1;
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.38_61 = 0;

  <bb 12> :
  # iftmp.38_45 = PHI <iftmp.38_60(10), iftmp.38_61(11)>
  iftmp.37_62 = (_Bool) iftmp.38_45;
  goto <bb 18>; [INV]

  <bb 13> :
  _7 = &old_addr_57(D)->u_addr.ip4;
  if (_7 != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 14> :
  _8 = old_addr_57(D)->u_addr.ip4.addr;
  if (_8 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  iftmp.39_63 = 1;
  goto <bb 17>; [INV]

  <bb 16> :
  iftmp.39_64 = 0;

  <bb 17> :
  # iftmp.39_46 = PHI <iftmp.39_63(15), iftmp.39_64(16)>
  iftmp.37_65 = (_Bool) iftmp.39_46;

  <bb 18> :
  # iftmp.37_44 = PHI <iftmp.37_62(12), iftmp.37_65(17)>
  iftmp.36_66 = iftmp.37_44;
  goto <bb 20>; [INV]

  <bb 19> :
  iftmp.36_58 = 0;

  <bb 20> :
  # iftmp.36_43 = PHI <iftmp.36_66(18), iftmp.36_58(19)>
  if (iftmp.36_43 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 21> :
  if (new_addr_67(D) != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 22> :
  if (new_addr_67(D) != 0B)
    goto <bb 23>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 23> :
  _9 = new_addr_67(D)->type;
  if (_9 == 6)
    goto <bb 24>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 24> :
  _10 = &new_addr_67(D)->u_addr.ip6;
  if (_10 != 0B)
    goto <bb 25>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 25> :
  _11 = new_addr_67(D)->u_addr.ip6.addr[0];
  if (_11 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 26> :
  _12 = new_addr_67(D)->u_addr.ip6.addr[1];
  if (_12 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  _13 = new_addr_67(D)->u_addr.ip6.addr[2];
  if (_13 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 28> :
  _14 = new_addr_67(D)->u_addr.ip6.addr[3];
  if (_14 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  iftmp.42_69 = 1;
  goto <bb 31>; [INV]

  <bb 30> :
  iftmp.42_70 = 0;

  <bb 31> :
  # iftmp.42_49 = PHI <iftmp.42_69(29), iftmp.42_70(30)>
  iftmp.41_71 = (_Bool) iftmp.42_49;
  goto <bb 37>; [INV]

  <bb 32> :
  _15 = &new_addr_67(D)->u_addr.ip4;
  if (_15 != 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 33> :
  _16 = new_addr_67(D)->u_addr.ip4.addr;
  if (_16 != 0)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  iftmp.43_72 = 1;
  goto <bb 36>; [INV]

  <bb 35> :
  iftmp.43_73 = 0;

  <bb 36> :
  # iftmp.43_50 = PHI <iftmp.43_72(34), iftmp.43_73(35)>
  iftmp.41_74 = (_Bool) iftmp.43_50;

  <bb 37> :
  # iftmp.41_48 = PHI <iftmp.41_71(31), iftmp.41_74(36)>
  iftmp.40_75 = iftmp.41_48;
  goto <bb 39>; [INV]

  <bb 38> :
  iftmp.40_68 = 0;

  <bb 39> :
  # iftmp.40_47 = PHI <iftmp.40_75(37), iftmp.40_68(38)>
  if (iftmp.40_47 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 40> :
  rpcb_76 = raw_pcbs;
  goto <bb 59>; [INV]

  <bb 41> :
  _17 = rpcb_42->local_ip.type;
  _18 = old_addr_57(D)->type;
  if (_17 == _18)
    goto <bb 42>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 42> :
  _19 = rpcb_42->local_ip.type;
  if (_19 == 6)
    goto <bb 43>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 43> :
  _20 = rpcb_42->local_ip.u_addr.ip6.addr[0];
  _21 = old_addr_57(D)->u_addr.ip6.addr[0];
  if (_20 == _21)
    goto <bb 44>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 44> :
  _22 = rpcb_42->local_ip.u_addr.ip6.addr[1];
  _23 = old_addr_57(D)->u_addr.ip6.addr[1];
  if (_22 == _23)
    goto <bb 45>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 45> :
  _24 = rpcb_42->local_ip.u_addr.ip6.addr[2];
  _25 = old_addr_57(D)->u_addr.ip6.addr[2];
  if (_24 == _25)
    goto <bb 46>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 46> :
  _26 = rpcb_42->local_ip.u_addr.ip6.addr[3];
  _27 = old_addr_57(D)->u_addr.ip6.addr[3];
  if (_26 == _27)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 47> :
  _28 = rpcb_42->local_ip.u_addr.ip6.zone;
  _29 = old_addr_57(D)->u_addr.ip6.zone;
  if (_28 == _29)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  iftmp.46_79 = 1;
  goto <bb 50>; [INV]

  <bb 49> :
  iftmp.46_80 = 0;

  <bb 50> :
  # iftmp.46_53 = PHI <iftmp.46_79(48), iftmp.46_80(49)>
  iftmp.45_81 = (_Bool) iftmp.46_53;
  goto <bb 52>; [INV]

  <bb 51> :
  _30 = rpcb_42->local_ip.u_addr.ip4.addr;
  _31 = old_addr_57(D)->u_addr.ip4.addr;
  iftmp.45_78 = _30 == _31;

  <bb 52> :
  # iftmp.45_52 = PHI <iftmp.45_81(50), iftmp.45_78(51)>
  iftmp.44_82 = iftmp.45_52;
  goto <bb 54>; [INV]

  <bb 53> :
  iftmp.44_77 = 0;

  <bb 54> :
  # iftmp.44_51 = PHI <iftmp.44_82(52), iftmp.44_77(53)>
  if (iftmp.44_51 != 0)
    goto <bb 55>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 55> :
  _32 = new_addr_67(D)->type;
  rpcb_42->local_ip.type = _32;
  _33 = new_addr_67(D)->type;
  if (_33 == 6)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  _34 = new_addr_67(D)->u_addr.ip6.addr[0];
  rpcb_42->local_ip.u_addr.ip6.addr[0] = _34;
  _35 = new_addr_67(D)->u_addr.ip6.addr[1];
  rpcb_42->local_ip.u_addr.ip6.addr[1] = _35;
  _36 = new_addr_67(D)->u_addr.ip6.addr[2];
  rpcb_42->local_ip.u_addr.ip6.addr[2] = _36;
  _37 = new_addr_67(D)->u_addr.ip6.addr[3];
  rpcb_42->local_ip.u_addr.ip6.addr[3] = _37;
  _38 = new_addr_67(D)->u_addr.ip6.zone;
  rpcb_42->local_ip.u_addr.ip6.zone = _38;
  goto <bb 58>; [INV]

  <bb 57> :
  _39 = new_addr_67(D)->u_addr.ip4.addr;
  rpcb_42->local_ip.u_addr.ip4.addr = _39;
  rpcb_42->local_ip.u_addr.ip6.addr[3] = 0;
  _40 = rpcb_42->local_ip.u_addr.ip6.addr[3];
  rpcb_42->local_ip.u_addr.ip6.addr[2] = _40;
  _41 = rpcb_42->local_ip.u_addr.ip6.addr[2];
  rpcb_42->local_ip.u_addr.ip6.addr[1] = _41;
  rpcb_42->local_ip.u_addr.ip6.zone = 0;

  <bb 58> :
  rpcb_94 = rpcb_42->next;

  <bb 59> :
  # rpcb_42 = PHI <rpcb_76(40), rpcb_94(58)>
  if (rpcb_42 != 0B)
    goto <bb 41>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 60> :
  return;

}


raw_new_ip_type (u8_t type, u8_t proto)
{
  struct raw_pcb * pcb;
  struct raw_pcb * D.7802;
  struct raw_pcb * _9;

  <bb 2> :
  pcb_5 = raw_new (proto_3(D));
  if (pcb_5 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  pcb_5->local_ip.type = type_6(D);
  pcb_5->remote_ip.type = type_6(D);

  <bb 4> :
  _9 = pcb_5;

  <bb 5> :
<L2>:
  return _9;

}


raw_new (u8_t proto)
{
  struct raw_pcb * pcb;
  struct raw_pcb * D.7798;
  struct raw_pcb * raw_pcbs.35_1;
  struct raw_pcb * _13;

  <bb 2> :
  pcb_5 = memp_malloc (0);
  if (pcb_5 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  memset (pcb_5, 0, 72);
  pcb_5->protocol = proto_7(D);
  pcb_5->ttl = 255;
  pcb_5->mcast_ttl = 255;
  raw_pcbs.35_1 = raw_pcbs;
  pcb_5->next = raw_pcbs.35_1;
  raw_pcbs = pcb_5;

  <bb 4> :
  _13 = pcb_5;

  <bb 5> :
<L2>:
  return _13;

}


raw_remove (struct raw_pcb * pcb)
{
  struct raw_pcb * pcb2;
  struct raw_pcb * raw_pcbs.33_1;
  struct raw_pcb * raw_pcbs.34_2;
  struct raw_pcb * _3;
  struct raw_pcb * _4;
  struct raw_pcb * _5;
  struct raw_pcb * _6;

  <bb 2> :
  raw_pcbs.33_1 = raw_pcbs;
  if (pcb_10(D) == raw_pcbs.33_1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  raw_pcbs.34_2 = raw_pcbs;
  _3 = raw_pcbs.34_2->next;
  raw_pcbs = _3;
  goto <bb 10>; [INV]

  <bb 4> :
  pcb2_11 = raw_pcbs;
  goto <bb 9>; [INV]

  <bb 5> :
  _4 = pcb2_7->next;
  if (_4 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _5 = pcb2_7->next;
  if (pcb_10(D) == _5)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _6 = pcb_10(D)->next;
  pcb2_7->next = _6;
  goto <bb 10>; [INV]

  <bb 8> :
  pcb2_13 = pcb2_7->next;

  <bb 9> :
  # pcb2_7 = PHI <pcb2_11(4), pcb2_13(8)>
  if (pcb2_7 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  memp_free (0, pcb_10(D));
  return;

}


raw_send (struct raw_pcb * pcb, struct pbuf * p)
{
  err_t D.7787;
  struct ip_addr_t * _1;
  err_t _6;

  <bb 2> :
  _1 = &pcb_2(D)->remote_ip;
  _6 = raw_sendto (pcb_2(D), p_4(D), _1);

  <bb 3> :
<L0>:
  return _6;

}


raw_sendto_if_src (struct raw_pcb * pcb, struct pbuf * p, const struct ip_addr_t * dst_ip, struct netif * netif, const struct ip_addr_t * src_ip)
{
  short unsigned int D.7786;
  u16_t chksum;
  u8_t ttl;
  u16_t header_size;
  struct pbuf * q;
  err_t err;
  err_t iftmp.32;
  _Bool iftmp.31;
  u8_t iftmp.30;
  _Bool iftmp.29;
  err_t iftmp.28;
  u16_t iftmp.27;
  err_t D.7724;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  unsigned char _7;
  unsigned char _8;
  unsigned int _9;
  unsigned int _10;
  short unsigned int _11;
  unsigned char _12;
  const struct ip6_addr_t * _13;
  const struct ip4_addr_t * _14;
  short unsigned int _15;
  short unsigned int _16;
  short unsigned int _17;
  unsigned int _18;
  unsigned char _19;
  short unsigned int _20;
  unsigned int _21;
  unsigned char _22;
  unsigned char _23;
  unsigned int _24;
  unsigned int _25;
  unsigned char _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;
  unsigned char _34;
  unsigned char _35;
  short unsigned int _36;
  const struct ip6_addr_t * _37;
  const struct ip6_addr_t * _38;
  short unsigned int _39;
  short unsigned int _40;
  int _41;
  int _42;
  short unsigned int _43;
  int _44;
  void * _45;
  short unsigned int _46;
  sizetype _47;
  void * _48;
  unsigned char _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;
  unsigned char _54;
  const struct ip6_addr_t * _55;
  const struct ip6_addr_t * _56;
  unsigned char _57;
  unsigned char _58;
  const struct ip4_addr_t * _59;
  const struct ip4_addr_t * _60;
  unsigned char _61;
  unsigned char _62;
  err_t _64;
  u16_t iftmp.27_65;
  err_t iftmp.28_66;
  _Bool iftmp.29_67;
  u8_t iftmp.30_68;
  _Bool iftmp.31_69;
  err_t iftmp.32_70;
  u16_t iftmp.27_85;
  u16_t iftmp.27_86;
  err_t _96;
  _Bool iftmp.29_97;
  _Bool iftmp.29_98;
  short unsigned int _102;
  _Bool iftmp.31_106;
  _Bool iftmp.31_107;
  u8_t iftmp.30_108;
  u8_t iftmp.30_109;
  err_t iftmp.32_112;
  err_t iftmp.32_114;
  err_t _117;
  err_t _118;
  err_t iftmp.28_120;
  err_t iftmp.28_122;
  err_t _124;
  err_t _125;
  err_t _126;

  <bb 2> :
  if (pcb_80(D) == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (dst_ip_81(D) == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (netif_82(D) == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  if (src_ip_83(D) == 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _1 = pcb_80(D)->local_ip.type;
  if (_1 != 46)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _2 = pcb_80(D)->local_ip.type;
  _3 = src_ip_83(D)->type;
  if (_2 != _3)
    goto <bb 10>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _4 = pcb_80(D)->local_ip.type;
  if (_4 != 46)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 9> :
  _5 = pcb_80(D)->local_ip.type;
  _6 = dst_ip_81(D)->type;
  if (_5 != _6)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _126 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]

  <bb 11> :
  if (dst_ip_81(D) != 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  _7 = dst_ip_81(D)->type;
  if (_7 == 6)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.27_85 = 40;
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.27_86 = 20;

  <bb 15> :
  # iftmp.27_65 = PHI <iftmp.27_85(13), iftmp.27_86(14)>
  header_size_87 = iftmp.27_65;
  _8 = pcb_80(D)->flags;
  _9 = (unsigned int) _8;
  _10 = _9 & 2;
  if (_10 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 16> :
  _11 = p_88(D)->len;
  if (header_size_87 > _11)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _125 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]

  <bb 18> :
  if (dst_ip_81(D) != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  _12 = dst_ip_81(D)->type;
  if (_12 == 6)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _13 = &src_ip_83(D)->u_addr.ip6;
  iftmp.28_120 = ip6_output_if (p_88(D), _13, 0B, 0, 0, 0, netif_82(D));
  goto <bb 22>; [INV]

  <bb 21> :
  _14 = &src_ip_83(D)->u_addr.ip4;
  iftmp.28_122 = ip4_output_if (p_88(D), _14, 0B, 0, 0, 0, netif_82(D));

  <bb 22> :
  # iftmp.28_66 = PHI <iftmp.28_120(20), iftmp.28_122(21)>
  err_123 = iftmp.28_66;
  _124 = err_123;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]

  <bb 23> :
  _15 = p_88(D)->tot_len;
  _16 = header_size_87 + _15;
  _17 = p_88(D)->tot_len;
  if (_16 < _17)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  _118 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]

  <bb 25> :
  _18 = (unsigned int) header_size_87;
  _19 = pbuf_add_header (p_88(D), _18);
  if (_19 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 26> :
  q_94 = pbuf_alloc (54, 0, 640);
  if (q_94 == 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  _96 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]

  <bb 28> :
  _20 = p_88(D)->tot_len;
  if (_20 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 29> :
  pbuf_chain (q_94, p_88(D));
  goto <bb 32>; [INV]

  <bb 30> :
  q_90 = p_88(D);
  _21 = (unsigned int) header_size_87;
  _22 = pbuf_remove_header (q_90, _21);
  if (_22 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 31>; [INV]

  <bb 32> :
  # q_63 = PHI <q_94(29), q_90(30), q_94(28)>
  _23 = pcb_80(D)->flags;
  _24 = (unsigned int) _23;
  _25 = _24 & 4;
  if (_25 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 33> :
  if (dst_ip_81(D) != 0B)
    goto <bb 34>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 34> :
  _26 = dst_ip_81(D)->type;
  if (_26 == 6)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _27 = dst_ip_81(D)->u_addr.ip6.addr[0];
  _28 = _27 & 255;
  iftmp.29_97 = _28 == 255;
  goto <bb 37>; [INV]

  <bb 36> :
  _29 = dst_ip_81(D)->u_addr.ip4.addr;
  _30 = _29 & 240;
  iftmp.29_98 = _30 == 224;

  <bb 37> :
  # iftmp.29_67 = PHI <iftmp.29_97(35), iftmp.29_98(36)>
  if (iftmp.29_67 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  _31 = q_63->flags;
  _32 = _31 | 4;
  q_63->flags = _32;

  <bb 39> :
  if (dst_ip_81(D) != 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 40> :
  _33 = dst_ip_81(D)->type;
  if (_33 == 6)
    goto <bb 41>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 41> :
  _34 = pcb_80(D)->chksum_reqd;
  if (_34 != 0)
    goto <bb 42>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 42> :
  _35 = pcb_80(D)->protocol;
  _36 = p_88(D)->tot_len;
  _37 = &src_ip_83(D)->u_addr.ip6;
  _38 = &dst_ip_81(D)->u_addr.ip6;
  _39 = ip6_chksum_pseudo (p_88(D), _35, _36, _37, _38);
  chksum = _39;
  _40 = pcb_80(D)->chksum_offset;
  _41 = (int) _40;
  _42 = _41 + 1;
  _43 = p_88(D)->len;
  _44 = (int) _43;
  if (_42 >= _44)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 43>; [INV]

  <bb 44> :
  _45 = p_88(D)->payload;
  _46 = pcb_80(D)->chksum_offset;
  _47 = (sizetype) _46;
  _48 = _45 + _47;
  _102 = MEM <short unsigned int> [(char * {ref-all})&chksum];
  MEM <short unsigned int> [(char * {ref-all})_48] = _102;
  chksum ={v} {CLOBBER};

  <bb 45> :
  if (dst_ip_81(D) != 0B)
    goto <bb 46>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 46> :
  _49 = dst_ip_81(D)->type;
  if (_49 == 6)
    goto <bb 47>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 47> :
  _50 = dst_ip_81(D)->u_addr.ip6.addr[0];
  _51 = _50 & 255;
  iftmp.31_106 = _51 == 255;
  goto <bb 49>; [INV]

  <bb 48> :
  _52 = dst_ip_81(D)->u_addr.ip4.addr;
  _53 = _52 & 240;
  iftmp.31_107 = _53 == 224;

  <bb 49> :
  # iftmp.31_69 = PHI <iftmp.31_106(47), iftmp.31_107(48)>
  if (iftmp.31_69 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 50> :
  iftmp.30_109 = pcb_80(D)->mcast_ttl;
  goto <bb 52>; [INV]

  <bb 51> :
  iftmp.30_108 = pcb_80(D)->ttl;

  <bb 52> :
  # iftmp.30_68 = PHI <iftmp.30_109(50), iftmp.30_108(51)>
  ttl_110 = iftmp.30_68;
  if (dst_ip_81(D) != 0B)
    goto <bb 53>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 53> :
  _54 = dst_ip_81(D)->type;
  if (_54 == 6)
    goto <bb 54>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 54> :
  _55 = &src_ip_83(D)->u_addr.ip6;
  _56 = &dst_ip_81(D)->u_addr.ip6;
  _57 = pcb_80(D)->tos;
  _58 = pcb_80(D)->protocol;
  iftmp.32_112 = ip6_output_if (q_63, _55, _56, ttl_110, _57, _58, netif_82(D));
  goto <bb 56>; [INV]

  <bb 55> :
  _59 = &src_ip_83(D)->u_addr.ip4;
  _60 = &dst_ip_81(D)->u_addr.ip4;
  _61 = pcb_80(D)->tos;
  _62 = pcb_80(D)->protocol;
  iftmp.32_114 = ip4_output_if (q_63, _59, _60, ttl_110, _61, _62, netif_82(D));

  <bb 56> :
  # iftmp.32_70 = PHI <iftmp.32_112(54), iftmp.32_114(55)>
  err_115 = iftmp.32_70;
  if (q_63 != p_88(D))
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  pbuf_free (q_63);

  <bb 58> :
  _117 = err_115;

  <bb 59> :
  # _64 = PHI <_126(10), _125(17), _124(22), _118(24), _96(27), _117(58)>
<L65>:
  return _64;

}


raw_sendto (struct raw_pcb * pcb, struct pbuf * p, const struct ip_addr_t * ipaddr)
{
  const struct ip_addr_t * src_ip;
  struct netif * netif;
  const struct ip_addr_t * iftmp.26;
  const struct ip_addr_t * iftmp.25;
  const struct ip_addr_t * iftmp.24;
  int iftmp.23;
  int iftmp.22;
  struct netif * iftmp.21;
  _Bool iftmp.20;
  err_t D.7645;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  unsigned char _11;
  unsigned char _12;
  struct ip6_addr_t * _13;
  const struct ip6_addr_t * _14;
  const struct ip4_addr_t * _15;
  unsigned char _16;
  struct ip_addr_t * _17;
  struct ip_addr_t * _18;
  unsigned char _19;
  struct ip6_addr_t * _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  _Bool _25;
  struct ip4_addr_t * _26;
  long unsigned int _27;
  _Bool _28;
  struct ip_addr_t * _29;
  unsigned char _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  unsigned char _35;
  const struct ip6_addr_t * _36;
  err_t _40;
  _Bool iftmp.20_41;
  struct netif * iftmp.21_42;
  int iftmp.22_43;
  int iftmp.23_44;
  const struct ip_addr_t * iftmp.24_45;
  const struct ip_addr_t * iftmp.25_46;
  const struct ip_addr_t * iftmp.26_47;
  _Bool iftmp.20_59;
  _Bool iftmp.20_60;
  struct netif * iftmp.21_64;
  struct netif * iftmp.21_66;
  int iftmp.22_70;
  int iftmp.22_71;
  int iftmp.23_72;
  int iftmp.23_73;
  const struct ip_addr_t * iftmp.25_75;
  const struct ip_addr_t * iftmp.25_77;
  const struct ip_addr_t * iftmp.24_78;
  const struct ip_addr_t * iftmp.26_79;
  const struct ip_addr_t * iftmp.26_80;
  const struct ip_addr_t * iftmp.24_81;
  err_t _83;
  err_t _86;
  err_t _87;
  err_t _88;

  <bb 2> :
  if (pcb_55(D) == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (ipaddr_56(D) == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _1 = pcb_55(D)->local_ip.type;
  if (_1 != 46)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _2 = pcb_55(D)->local_ip.type;
  _3 = ipaddr_56(D)->type;
  if (_2 != _3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _88 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 62>; [INV]

  <bb 7> :
  _4 = pcb_55(D)->netif_idx;
  if (_4 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _5 = pcb_55(D)->netif_idx;
  netif_69 = netif_get_by_index (_5);
  goto <bb 21>; [INV]

  <bb 9> :
  netif_58 = 0B;
  if (ipaddr_56(D) != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 10> :
  _6 = ipaddr_56(D)->type;
  if (_6 == 6)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _7 = ipaddr_56(D)->u_addr.ip6.addr[0];
  _8 = _7 & 255;
  iftmp.20_59 = _8 == 255;
  goto <bb 13>; [INV]

  <bb 12> :
  _9 = ipaddr_56(D)->u_addr.ip4.addr;
  _10 = _9 & 240;
  iftmp.20_60 = _10 == 224;

  <bb 13> :
  # iftmp.20_41 = PHI <iftmp.20_59(11), iftmp.20_60(12)>
  if (iftmp.20_41 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _11 = pcb_55(D)->mcast_ifindex;
  netif_62 = netif_get_by_index (_11);

  <bb 15> :
  # netif_37 = PHI <netif_58(13), netif_62(14)>
  if (netif_37 == 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 16> :
  if (ipaddr_56(D) != 0B)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  _12 = ipaddr_56(D)->type;
  if (_12 == 6)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _13 = &pcb_55(D)->local_ip.u_addr.ip6;
  _14 = &ipaddr_56(D)->u_addr.ip6;
  iftmp.21_64 = ip6_route (_13, _14);
  goto <bb 20>; [INV]

  <bb 19> :
  _15 = &ipaddr_56(D)->u_addr.ip4;
  iftmp.21_66 = ip4_route (_15);

  <bb 20> :
  # iftmp.21_42 = PHI <iftmp.21_64(18), iftmp.21_66(19)>
  netif_67 = iftmp.21_42;

  <bb 21> :
  # netif_38 = PHI <netif_69(8), netif_37(15), netif_67(20)>
  if (netif_38 == 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 22> :
  if (ipaddr_56(D) != 0B)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  _16 = ipaddr_56(D)->type;

  <bb 24> :
  _87 = -4;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 62>; [INV]

  <bb 25> :
  _17 = &pcb_55(D)->local_ip;
  if (_17 != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 26> :
  _18 = &pcb_55(D)->local_ip;
  if (_18 != 0B)
    goto <bb 27>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 27> :
  _19 = pcb_55(D)->local_ip.type;
  if (_19 == 6)
    goto <bb 28>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 28> :
  _20 = &pcb_55(D)->local_ip.u_addr.ip6;
  if (_20 == 0B)
    goto <bb 33>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _21 = pcb_55(D)->local_ip.u_addr.ip6.addr[0];
  if (_21 == 0)
    goto <bb 30>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 30> :
  _22 = pcb_55(D)->local_ip.u_addr.ip6.addr[1];
  if (_22 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 31> :
  _23 = pcb_55(D)->local_ip.u_addr.ip6.addr[2];
  if (_23 == 0)
    goto <bb 32>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 32> :
  _24 = pcb_55(D)->local_ip.u_addr.ip6.addr[3];
  if (_24 == 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  iftmp.22_71 = 1;
  goto <bb 35>; [INV]

  <bb 34> :
  iftmp.22_70 = 0;

  <bb 35> :
  # iftmp.22_43 = PHI <iftmp.22_71(33), iftmp.22_70(34)>
  _25 = (_Bool) iftmp.22_43;
  if (_25 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  goto <bb 42>; [INV]

  <bb 37> :
  _26 = &pcb_55(D)->local_ip.u_addr.ip4;
  if (_26 == 0B)
    goto <bb 39>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 38> :
  _27 = pcb_55(D)->local_ip.u_addr.ip4.addr;
  if (_27 == 0)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  iftmp.23_73 = 1;
  goto <bb 41>; [INV]

  <bb 40> :
  iftmp.23_72 = 0;

  <bb 41> :
  # iftmp.23_44 = PHI <iftmp.23_73(39), iftmp.23_72(40)>
  _28 = (_Bool) iftmp.23_44;
  if (_28 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 42> :

  <bb 43> :
  _29 = &pcb_55(D)->local_ip;
  if (_29 != 0B)
    goto <bb 44>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 44> :
  _30 = pcb_55(D)->local_ip.type;
  if (_30 == 6)
    goto <bb 45>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 45> :
  _31 = pcb_55(D)->local_ip.u_addr.ip6.addr[0];
  _32 = _31 & 255;
  if (_32 == 255)
    goto <bb 47>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 46> :
  _33 = pcb_55(D)->local_ip.u_addr.ip4.addr;
  _34 = _33 & 240;
  if (_34 == 224)
    goto <bb 47>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 47> :
  if (ipaddr_56(D) != 0B)
    goto <bb 48>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 48> :
  _35 = ipaddr_56(D)->type;
  if (_35 == 6)
    goto <bb 49>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 49> :
  if (netif_38 != 0B)
    goto <bb 50>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 50> :
  _36 = &ipaddr_56(D)->u_addr.ip6;
  iftmp.25_77 = ip6_select_source_address (netif_38, _36);
  goto <bb 52>; [INV]

  <bb 51> :
  iftmp.25_75 = 0B;

  <bb 52> :
  # iftmp.25_46 = PHI <iftmp.25_77(50), iftmp.25_75(51)>
  iftmp.24_78 = iftmp.25_46;
  goto <bb 57>; [INV]

  <bb 53> :
  if (netif_38 != 0B)
    goto <bb 54>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 54> :
  iftmp.26_80 = &netif_38->ip_addr;
  goto <bb 56>; [INV]

  <bb 55> :
  iftmp.26_79 = 0B;

  <bb 56> :
  # iftmp.26_47 = PHI <iftmp.26_80(54), iftmp.26_79(55)>
  iftmp.24_81 = iftmp.26_47;

  <bb 57> :
  # iftmp.24_45 = PHI <iftmp.24_78(52), iftmp.24_81(56)>
  src_ip_82 = iftmp.24_45;
  if (src_ip_82 == 0B)
    goto <bb 58>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 58> :
  _83 = -4;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 62>; [INV]

  <bb 59> :
  goto <bb 61>; [INV]

  <bb 60> :
  src_ip_74 = &pcb_55(D)->local_ip;

  <bb 61> :
  # src_ip_39 = PHI <src_ip_82(59), src_ip_74(60)>
  _86 = raw_sendto_if_src (pcb_55(D), p_84(D), ipaddr_56(D), netif_38, src_ip_39);

  <bb 62> :
  # _40 = PHI <_88(6), _87(24), _83(58), _86(61)>
<L66>:
  return _40;

}


raw_recv (struct raw_pcb * pcb, u8_t (*raw_recv_fn) (void *, struct raw_pcb *, struct pbuf *, const struct ip_addr_t *) recv, void * recv_arg)
{
  <bb 2> :
  pcb_2(D)->recv = recv_3(D);
  pcb_2(D)->recv_arg = recv_arg_5(D);
  return;

}


raw_disconnect (struct raw_pcb * pcb)
{
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  unsigned char _12;
  struct ip_addr_t * _13;
  struct ip_addr_t * _14;
  long unsigned int _15;
  long unsigned int _16;
  unsigned char _17;
  unsigned char _18;

  <bb 2> :
  _1 = pcb_22(D)->local_ip.type;
  if (_1 == 46)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _2 = ip_addr_any_type.type;
  pcb_22(D)->remote_ip.type = _2;
  _3 = ip_addr_any_type.type;
  if (_3 == 6)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _4 = ip_addr_any_type.u_addr.ip6.addr[0];
  pcb_22(D)->remote_ip.u_addr.ip6.addr[0] = _4;
  _5 = ip_addr_any_type.u_addr.ip6.addr[1];
  pcb_22(D)->remote_ip.u_addr.ip6.addr[1] = _5;
  _6 = ip_addr_any_type.u_addr.ip6.addr[2];
  pcb_22(D)->remote_ip.u_addr.ip6.addr[2] = _6;
  _7 = ip_addr_any_type.u_addr.ip6.addr[3];
  pcb_22(D)->remote_ip.u_addr.ip6.addr[3] = _7;
  _8 = ip_addr_any_type.u_addr.ip6.zone;
  pcb_22(D)->remote_ip.u_addr.ip6.zone = _8;
  goto <bb 12>; [INV]

  <bb 5> :
  _9 = ip_addr_any_type.u_addr.ip4.addr;
  pcb_22(D)->remote_ip.u_addr.ip4.addr = _9;
  pcb_22(D)->remote_ip.u_addr.ip6.addr[3] = 0;
  _10 = pcb_22(D)->remote_ip.u_addr.ip6.addr[3];
  pcb_22(D)->remote_ip.u_addr.ip6.addr[2] = _10;
  _11 = pcb_22(D)->remote_ip.u_addr.ip6.addr[2];
  pcb_22(D)->remote_ip.u_addr.ip6.addr[1] = _11;
  pcb_22(D)->remote_ip.u_addr.ip6.zone = 0;
  goto <bb 12>; [INV]

  <bb 6> :
  _12 = pcb_22(D)->remote_ip.type;
  if (_12 == 6)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  pcb_22(D)->remote_ip.u_addr.ip6.addr[0] = 0;
  pcb_22(D)->remote_ip.u_addr.ip6.addr[1] = 0;
  pcb_22(D)->remote_ip.u_addr.ip6.addr[2] = 0;
  pcb_22(D)->remote_ip.u_addr.ip6.addr[3] = 0;
  pcb_22(D)->remote_ip.u_addr.ip6.zone = 0;
  _13 = &pcb_22(D)->remote_ip;
  if (_13 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 8> :
  pcb_22(D)->remote_ip.type = 6;
  goto <bb 12>; [INV]

  <bb 9> :
  pcb_22(D)->remote_ip.u_addr.ip4.addr = 0;
  _14 = &pcb_22(D)->remote_ip;
  if (_14 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  pcb_22(D)->remote_ip.type = 0;

  <bb 11> :
  pcb_22(D)->remote_ip.u_addr.ip6.addr[3] = 0;
  _15 = pcb_22(D)->remote_ip.u_addr.ip6.addr[3];
  pcb_22(D)->remote_ip.u_addr.ip6.addr[2] = _15;
  _16 = pcb_22(D)->remote_ip.u_addr.ip6.addr[2];
  pcb_22(D)->remote_ip.u_addr.ip6.addr[1] = _16;
  pcb_22(D)->remote_ip.u_addr.ip6.zone = 0;

  <bb 12> :
  pcb_22(D)->netif_idx = 0;
  _17 = pcb_22(D)->flags;
  _18 = _17 & 254;
  pcb_22(D)->flags = _18;
  return;

}


raw_connect (struct raw_pcb * pcb, const struct ip_addr_t * ipaddr)
{
  struct netif * selected_netif;
  u8_t iftmp.19;
  const long unsigned int iftmp.18;
  u8_t iftmp.17;
  const long unsigned int iftmp.16;
  const long unsigned int iftmp.15;
  const long unsigned int iftmp.14;
  const long unsigned int iftmp.13;
  err_t D.7577;
  struct ip_addr_t * _1;
  unsigned char _2;
  unsigned char _3;
  const struct ip6_addr_t * _4;
  const struct ip6_addr_t * _5;
  const struct ip6_addr_t * _6;
  const struct ip6_addr_t * _7;
  const struct ip6_addr_t * _8;
  const struct ip4_addr_t * _9;
  long unsigned int _10;
  long unsigned int _11;
  struct ip_addr_t * _12;
  unsigned char _13;
  unsigned char _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  struct ip6_addr_t * _21;
  struct ip6_addr_t * _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  err_t _32;
  const long unsigned int iftmp.13_33;
  const long unsigned int iftmp.14_34;
  const long unsigned int iftmp.15_35;
  const long unsigned int iftmp.16_36;
  u8_t iftmp.17_37;
  const long unsigned int iftmp.18_38;
  u8_t iftmp.19_39;
  const long unsigned int iftmp.13_48;
  const long unsigned int iftmp.13_49;
  const long unsigned int iftmp.14_51;
  const long unsigned int iftmp.14_52;
  const long unsigned int iftmp.15_54;
  const long unsigned int iftmp.15_55;
  const long unsigned int iftmp.16_57;
  const long unsigned int iftmp.16_58;
  u8_t iftmp.17_60;
  u8_t iftmp.17_61;
  const long unsigned int iftmp.18_63;
  const long unsigned int iftmp.18_64;
  u8_t iftmp.19_72;
  u8_t iftmp.19_73;
  err_t _76;
  err_t _77;

  <bb 2> :
  if (pcb_44(D) == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (ipaddr_45(D) == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _77 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 43>; [INV]

  <bb 5> :
  _1 = &pcb_44(D)->remote_ip;
  if (_1 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _2 = ipaddr_45(D)->type;
  pcb_44(D)->remote_ip.type = _2;

  <bb 7> :
  if (ipaddr_45(D) != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 8> :
  _3 = ipaddr_45(D)->type;
  if (_3 == 6)
    goto <bb 9>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 9> :
  _4 = &ipaddr_45(D)->u_addr.ip6;
  if (_4 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.13_49 = ipaddr_45(D)->u_addr.ip6.addr[0];
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.13_48 = 0;

  <bb 12> :
  # iftmp.13_33 = PHI <iftmp.13_49(10), iftmp.13_48(11)>
  pcb_44(D)->remote_ip.u_addr.ip6.addr[0] = iftmp.13_33;
  _5 = &ipaddr_45(D)->u_addr.ip6;
  if (_5 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.14_52 = ipaddr_45(D)->u_addr.ip6.addr[1];
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.14_51 = 0;

  <bb 15> :
  # iftmp.14_34 = PHI <iftmp.14_52(13), iftmp.14_51(14)>
  pcb_44(D)->remote_ip.u_addr.ip6.addr[1] = iftmp.14_34;
  _6 = &ipaddr_45(D)->u_addr.ip6;
  if (_6 != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.15_55 = ipaddr_45(D)->u_addr.ip6.addr[2];
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.15_54 = 0;

  <bb 18> :
  # iftmp.15_35 = PHI <iftmp.15_55(16), iftmp.15_54(17)>
  pcb_44(D)->remote_ip.u_addr.ip6.addr[2] = iftmp.15_35;
  _7 = &ipaddr_45(D)->u_addr.ip6;
  if (_7 != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  iftmp.16_58 = ipaddr_45(D)->u_addr.ip6.addr[3];
  goto <bb 21>; [INV]

  <bb 20> :
  iftmp.16_57 = 0;

  <bb 21> :
  # iftmp.16_36 = PHI <iftmp.16_58(19), iftmp.16_57(20)>
  pcb_44(D)->remote_ip.u_addr.ip6.addr[3] = iftmp.16_36;
  _8 = &ipaddr_45(D)->u_addr.ip6;
  if (_8 != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  iftmp.17_61 = ipaddr_45(D)->u_addr.ip6.zone;
  goto <bb 24>; [INV]

  <bb 23> :
  iftmp.17_60 = 0;

  <bb 24> :
  # iftmp.17_37 = PHI <iftmp.17_61(22), iftmp.17_60(23)>
  pcb_44(D)->remote_ip.u_addr.ip6.zone = iftmp.17_37;
  goto <bb 29>; [INV]

  <bb 25> :
  _9 = &ipaddr_45(D)->u_addr.ip4;
  if (_9 != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  iftmp.18_64 = ipaddr_45(D)->u_addr.ip4.addr;
  goto <bb 28>; [INV]

  <bb 27> :
  iftmp.18_63 = 0;

  <bb 28> :
  # iftmp.18_38 = PHI <iftmp.18_64(26), iftmp.18_63(27)>
  pcb_44(D)->remote_ip.u_addr.ip4.addr = iftmp.18_38;
  pcb_44(D)->remote_ip.u_addr.ip6.addr[3] = 0;
  _10 = pcb_44(D)->remote_ip.u_addr.ip6.addr[3];
  pcb_44(D)->remote_ip.u_addr.ip6.addr[2] = _10;
  _11 = pcb_44(D)->remote_ip.u_addr.ip6.addr[2];
  pcb_44(D)->remote_ip.u_addr.ip6.addr[1] = _11;
  pcb_44(D)->remote_ip.u_addr.ip6.zone = 0;

  <bb 29> :
  _12 = &pcb_44(D)->remote_ip;
  if (_12 != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 30> :
  _13 = pcb_44(D)->remote_ip.type;
  if (_13 == 6)
    goto <bb 31>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 31> :
  _14 = pcb_44(D)->remote_ip.u_addr.ip6.zone;
  if (_14 == 0)
    goto <bb 32>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 32> :
  _15 = pcb_44(D)->remote_ip.u_addr.ip6.addr[0];
  _16 = _15 & 49407;
  if (_16 == 33022)
    goto <bb 35>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  _17 = pcb_44(D)->remote_ip.u_addr.ip6.addr[0];
  _18 = _17 & 36863;
  if (_18 == 511)
    goto <bb 35>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  _19 = pcb_44(D)->remote_ip.u_addr.ip6.addr[0];
  _20 = _19 & 36863;
  if (_20 == 767)
    goto <bb 35>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 35> :
  _21 = &pcb_44(D)->local_ip.u_addr.ip6;
  _22 = &pcb_44(D)->remote_ip.u_addr.ip6;
  selected_netif_71 = ip6_route (_21, _22);
  if (selected_netif_71 != 0B)
    goto <bb 36>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 36> :
  _23 = pcb_44(D)->remote_ip.u_addr.ip6.addr[0];
  _24 = _23 & 49407;
  if (_24 == 33022)
    goto <bb 39>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 37> :
  _25 = pcb_44(D)->remote_ip.u_addr.ip6.addr[0];
  _26 = _25 & 36863;
  if (_26 == 511)
    goto <bb 39>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 38> :
  _27 = pcb_44(D)->remote_ip.u_addr.ip6.addr[0];
  _28 = _27 & 36863;
  if (_28 == 767)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  _29 = selected_netif_71->num;
  iftmp.19_73 = _29 + 1;
  goto <bb 41>; [INV]

  <bb 40> :
  iftmp.19_72 = 0;

  <bb 41> :
  # iftmp.19_39 = PHI <iftmp.19_73(39), iftmp.19_72(40)>
  pcb_44(D)->remote_ip.u_addr.ip6.zone = iftmp.19_39;

  <bb 42> :
  _30 = pcb_44(D)->flags;
  _31 = _30 | 1;
  pcb_44(D)->flags = _31;
  _76 = 0;

  <bb 43> :
  # _32 = PHI <_77(4), _76(42)>
<L44>:
  return _32;

}


raw_bind_netif (struct raw_pcb * pcb, const struct netif * netif)
{
  unsigned char _1;
  unsigned char _2;

  <bb 2> :
  if (netif_4(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = netif_4(D)->num;
  _2 = _1 + 1;
  pcb_6(D)->netif_idx = _2;
  goto <bb 5>; [INV]

  <bb 4> :
  pcb_6(D)->netif_idx = 0;

  <bb 5> :
  return;

}


raw_bind (struct raw_pcb * pcb, const struct ip_addr_t * ipaddr)
{
  struct netif * selected_netif;
  u8_t iftmp.12;
  const long unsigned int iftmp.11;
  u8_t iftmp.10;
  const long unsigned int iftmp.9;
  const long unsigned int iftmp.8;
  const long unsigned int iftmp.7;
  const long unsigned int iftmp.6;
  err_t D.7521;
  struct ip_addr_t * _1;
  unsigned char _2;
  unsigned char _3;
  const struct ip6_addr_t * _4;
  const struct ip6_addr_t * _5;
  const struct ip6_addr_t * _6;
  const struct ip6_addr_t * _7;
  const struct ip6_addr_t * _8;
  const struct ip4_addr_t * _9;
  long unsigned int _10;
  long unsigned int _11;
  struct ip_addr_t * _12;
  unsigned char _13;
  unsigned char _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  struct ip6_addr_t * _21;
  struct ip6_addr_t * _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  unsigned char _29;
  err_t _30;
  const long unsigned int iftmp.6_31;
  const long unsigned int iftmp.7_32;
  const long unsigned int iftmp.8_33;
  const long unsigned int iftmp.9_34;
  u8_t iftmp.10_35;
  const long unsigned int iftmp.11_36;
  u8_t iftmp.12_37;
  const long unsigned int iftmp.6_46;
  const long unsigned int iftmp.6_47;
  const long unsigned int iftmp.7_49;
  const long unsigned int iftmp.7_50;
  const long unsigned int iftmp.8_52;
  const long unsigned int iftmp.8_53;
  const long unsigned int iftmp.9_55;
  const long unsigned int iftmp.9_56;
  u8_t iftmp.10_58;
  u8_t iftmp.10_59;
  const long unsigned int iftmp.11_61;
  const long unsigned int iftmp.11_62;
  u8_t iftmp.12_70;
  u8_t iftmp.12_71;
  err_t _73;
  err_t _74;

  <bb 2> :
  if (pcb_42(D) == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  if (ipaddr_43(D) == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _74 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 43>; [INV]

  <bb 5> :
  _1 = &pcb_42(D)->local_ip;
  if (_1 != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _2 = ipaddr_43(D)->type;
  pcb_42(D)->local_ip.type = _2;

  <bb 7> :
  if (ipaddr_43(D) != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 8> :
  _3 = ipaddr_43(D)->type;
  if (_3 == 6)
    goto <bb 9>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 9> :
  _4 = &ipaddr_43(D)->u_addr.ip6;
  if (_4 != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  iftmp.6_47 = ipaddr_43(D)->u_addr.ip6.addr[0];
  goto <bb 12>; [INV]

  <bb 11> :
  iftmp.6_46 = 0;

  <bb 12> :
  # iftmp.6_31 = PHI <iftmp.6_47(10), iftmp.6_46(11)>
  pcb_42(D)->local_ip.u_addr.ip6.addr[0] = iftmp.6_31;
  _5 = &ipaddr_43(D)->u_addr.ip6;
  if (_5 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  iftmp.7_50 = ipaddr_43(D)->u_addr.ip6.addr[1];
  goto <bb 15>; [INV]

  <bb 14> :
  iftmp.7_49 = 0;

  <bb 15> :
  # iftmp.7_32 = PHI <iftmp.7_50(13), iftmp.7_49(14)>
  pcb_42(D)->local_ip.u_addr.ip6.addr[1] = iftmp.7_32;
  _6 = &ipaddr_43(D)->u_addr.ip6;
  if (_6 != 0B)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  iftmp.8_53 = ipaddr_43(D)->u_addr.ip6.addr[2];
  goto <bb 18>; [INV]

  <bb 17> :
  iftmp.8_52 = 0;

  <bb 18> :
  # iftmp.8_33 = PHI <iftmp.8_53(16), iftmp.8_52(17)>
  pcb_42(D)->local_ip.u_addr.ip6.addr[2] = iftmp.8_33;
  _7 = &ipaddr_43(D)->u_addr.ip6;
  if (_7 != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  iftmp.9_56 = ipaddr_43(D)->u_addr.ip6.addr[3];
  goto <bb 21>; [INV]

  <bb 20> :
  iftmp.9_55 = 0;

  <bb 21> :
  # iftmp.9_34 = PHI <iftmp.9_56(19), iftmp.9_55(20)>
  pcb_42(D)->local_ip.u_addr.ip6.addr[3] = iftmp.9_34;
  _8 = &ipaddr_43(D)->u_addr.ip6;
  if (_8 != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  iftmp.10_59 = ipaddr_43(D)->u_addr.ip6.zone;
  goto <bb 24>; [INV]

  <bb 23> :
  iftmp.10_58 = 0;

  <bb 24> :
  # iftmp.10_35 = PHI <iftmp.10_59(22), iftmp.10_58(23)>
  pcb_42(D)->local_ip.u_addr.ip6.zone = iftmp.10_35;
  goto <bb 29>; [INV]

  <bb 25> :
  _9 = &ipaddr_43(D)->u_addr.ip4;
  if (_9 != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  iftmp.11_62 = ipaddr_43(D)->u_addr.ip4.addr;
  goto <bb 28>; [INV]

  <bb 27> :
  iftmp.11_61 = 0;

  <bb 28> :
  # iftmp.11_36 = PHI <iftmp.11_62(26), iftmp.11_61(27)>
  pcb_42(D)->local_ip.u_addr.ip4.addr = iftmp.11_36;
  pcb_42(D)->local_ip.u_addr.ip6.addr[3] = 0;
  _10 = pcb_42(D)->local_ip.u_addr.ip6.addr[3];
  pcb_42(D)->local_ip.u_addr.ip6.addr[2] = _10;
  _11 = pcb_42(D)->local_ip.u_addr.ip6.addr[2];
  pcb_42(D)->local_ip.u_addr.ip6.addr[1] = _11;
  pcb_42(D)->local_ip.u_addr.ip6.zone = 0;

  <bb 29> :
  _12 = &pcb_42(D)->local_ip;
  if (_12 != 0B)
    goto <bb 30>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 30> :
  _13 = pcb_42(D)->local_ip.type;
  if (_13 == 6)
    goto <bb 31>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 31> :
  _14 = pcb_42(D)->local_ip.u_addr.ip6.zone;
  if (_14 == 0)
    goto <bb 32>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 32> :
  _15 = pcb_42(D)->local_ip.u_addr.ip6.addr[0];
  _16 = _15 & 49407;
  if (_16 == 33022)
    goto <bb 35>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  _17 = pcb_42(D)->local_ip.u_addr.ip6.addr[0];
  _18 = _17 & 36863;
  if (_18 == 511)
    goto <bb 35>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 34> :
  _19 = pcb_42(D)->local_ip.u_addr.ip6.addr[0];
  _20 = _19 & 36863;
  if (_20 == 767)
    goto <bb 35>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 35> :
  _21 = &pcb_42(D)->local_ip.u_addr.ip6;
  _22 = &pcb_42(D)->local_ip.u_addr.ip6;
  selected_netif_69 = ip6_route (_21, _22);
  if (selected_netif_69 != 0B)
    goto <bb 36>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 36> :
  _23 = pcb_42(D)->local_ip.u_addr.ip6.addr[0];
  _24 = _23 & 49407;
  if (_24 == 33022)
    goto <bb 39>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 37> :
  _25 = pcb_42(D)->local_ip.u_addr.ip6.addr[0];
  _26 = _25 & 36863;
  if (_26 == 511)
    goto <bb 39>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 38> :
  _27 = pcb_42(D)->local_ip.u_addr.ip6.addr[0];
  _28 = _27 & 36863;
  if (_28 == 767)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  _29 = selected_netif_69->num;
  iftmp.12_71 = _29 + 1;
  goto <bb 41>; [INV]

  <bb 40> :
  iftmp.12_70 = 0;

  <bb 41> :
  # iftmp.12_37 = PHI <iftmp.12_71(39), iftmp.12_70(40)>
  pcb_42(D)->local_ip.u_addr.ip6.zone = iftmp.12_37;

  <bb 42> :
  _73 = 0;

  <bb 43> :
  # _30 = PHI <_74(4), _73(42)>
<L44>:
  return _30;

}


raw_input (struct pbuf * p, struct netif * inp)
{
  void * old_payload;
  u8_t eaten;
  struct ip6_hdr * ip6hdr;
  u8_t broadcast;
  raw_input_state_t ret;
  s16_t proto;
  struct raw_pcb * prev;
  struct raw_pcb * pcb;
  raw_input_state_t D.7514;
  int iftmp.4;
  u8_t iftmp.3;
  unsigned char _1;
  long unsigned int _2;
  struct netif * _3;
  void * _4;
  unsigned char _5;
  unsigned char _6;
  unsigned char _7;
  void * _8;
  unsigned char _9;
  unsigned char _10;
  int _11;
  int _12;
  unsigned char _13;
  unsigned char _14;
  unsigned int _15;
  unsigned int _16;
  unsigned char _17;
  unsigned char _18;
  unsigned char _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  unsigned char _28;
  unsigned char _29;
  _Bool _30;
  long unsigned int _31;
  long unsigned int _32;
  u8_t (*<T751>) (void *, struct raw_pcb *, struct pbuf *, const struct ip_addr_t *) _33;
  u8_t (*<T751>) (void *, struct raw_pcb *, struct pbuf *, const struct ip_addr_t *) _34;
  void * _35;
  struct raw_pcb * _36;
  struct raw_pcb * raw_pcbs.5_37;
  void * _38;
  u8_t iftmp.3_44;
  int iftmp.4_45;
  raw_input_state_t _46;
  u8_t iftmp.3_55;
  u8_t iftmp.3_57;
  raw_input_state_t _65;
  int iftmp.4_67;
  int iftmp.4_68;
  raw_input_state_t _78;

  <bb 2> :
  ret_53 = 0;
  _1 = ip_data.current_iphdr_dest.type;
  if (_1 != 6)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = ip_data.current_iphdr_dest.u_addr.ip4.addr;
  _3 = ip_data.current_netif;
  iftmp.3_57 = ip4_addr_isbroadcast_u32 (_2, _3);
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.3_55 = 0;

  <bb 5> :
  # iftmp.3_44 = PHI <iftmp.3_57(3), iftmp.3_55(4)>
  broadcast_58 = iftmp.3_44;
  _4 = p_59(D)->payload;
  _5 = MEM[(u8_t *)_4];
  _6 = _5 >> 4;
  if (_6 == 6)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  ip6hdr_61 = p_59(D)->payload;
  _7 = ip6hdr_61->_nexth;
  proto_62 = (s16_t) _7;
  goto <bb 8>; [INV]

  <bb 7> :
  _8 = p_59(D)->payload;
  _9 = MEM[(struct ip_hdr *)_8]._proto;
  proto_60 = (s16_t) _9;

  <bb 8> :
  # proto_41 = PHI <proto_62(6), proto_60(7)>
  prev_63 = 0B;
  pcb_64 = raw_pcbs;
  goto <bb 31>; [INV]

  <bb 9> :
  _10 = pcb_39->protocol;
  _11 = (int) _10;
  _12 = (int) proto_41;
  if (_11 == _12)
    goto <bb 10>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 10> :
  _13 = raw_input_local_match (pcb_39, broadcast_58);
  if (_13 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 11> :
  _14 = pcb_39->flags;
  _15 = (unsigned int) _14;
  _16 = _15 & 1;
  if (_16 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _17 = pcb_39->remote_ip.type;
  _18 = ip_data.current_iphdr_src.type;
  if (_17 == _18)
    goto <bb 13>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 13> :
  _19 = pcb_39->remote_ip.type;
  if (_19 == 6)
    goto <bb 14>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 14> :
  _20 = pcb_39->remote_ip.u_addr.ip6.addr[0];
  _21 = ip_data.current_iphdr_src.u_addr.ip6.addr[0];
  if (_20 == _21)
    goto <bb 15>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 15> :
  _22 = pcb_39->remote_ip.u_addr.ip6.addr[1];
  _23 = ip_data.current_iphdr_src.u_addr.ip6.addr[1];
  if (_22 == _23)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 16> :
  _24 = pcb_39->remote_ip.u_addr.ip6.addr[2];
  _25 = ip_data.current_iphdr_src.u_addr.ip6.addr[2];
  if (_24 == _25)
    goto <bb 17>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 17> :
  _26 = pcb_39->remote_ip.u_addr.ip6.addr[3];
  _27 = ip_data.current_iphdr_src.u_addr.ip6.addr[3];
  if (_26 == _27)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 18> :
  _28 = pcb_39->remote_ip.u_addr.ip6.zone;
  _29 = ip_data.current_iphdr_src.u_addr.ip6.zone;
  if (_28 == _29)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  iftmp.4_67 = 1;
  goto <bb 21>; [INV]

  <bb 20> :
  iftmp.4_68 = 0;

  <bb 21> :
  # iftmp.4_45 = PHI <iftmp.4_67(19), iftmp.4_68(20)>
  _30 = (_Bool) iftmp.4_45;
  if (_30 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 22> :
  _31 = pcb_39->remote_ip.u_addr.ip4.addr;
  _32 = ip_data.current_iphdr_src.u_addr.ip4.addr;
  if (_31 == _32)
    goto <bb 23>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 23> :
  _33 = pcb_39->recv;
  if (_33 != 0B)
    goto <bb 24>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 24> :
  old_payload_69 = p_59(D)->payload;
  ret_70 = 2;
  _34 = pcb_39->recv;
  _35 = pcb_39->recv_arg;
  eaten_72 = _34 (_35, pcb_39, p_59(D), &ip_data.current_iphdr_src);
  if (eaten_72 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 25> :
  p_74 = 0B;
  if (prev_40 != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  _36 = pcb_39->next;
  prev_40->next = _36;
  raw_pcbs.5_37 = raw_pcbs;
  pcb_39->next = raw_pcbs.5_37;
  raw_pcbs = pcb_39;

  <bb 27> :
  _78 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 33>; [INV]

  <bb 28> :
  _38 = p_59(D)->payload;
  if (old_payload_69 != _38)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 29>; [INV]

  <bb 30> :
  # ret_42 = PHI <ret_43(9), ret_43(10), ret_43(21), ret_43(22), ret_43(12), ret_43(23), ret_70(28)>
  prev_79 = pcb_39;
  pcb_80 = pcb_39->next;

  <bb 31> :
  # pcb_39 = PHI <pcb_64(8), pcb_80(30)>
  # prev_40 = PHI <prev_63(8), prev_79(30)>
  # ret_43 = PHI <ret_53(8), ret_42(30)>
  if (pcb_39 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 32> :
  _65 = ret_43;

  <bb 33> :
  # _46 = PHI <_78(27), _65(32)>
<L36>:
  return _46;

}


raw_input_local_match (struct raw_pcb * pcb, u8_t broadcast)
{
  int iftmp.2;
  int iftmp.1;
  int iftmp.0;
  u8_t D.7433;
  unsigned char _1;
  unsigned char _2;
  struct netif * _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _6;
  unsigned char _7;
  unsigned char _8;
  struct ip4_addr_t * _9;
  long unsigned int _10;
  struct ip_addr_t * _11;
  struct ip_addr_t * _12;
  unsigned char _13;
  struct ip6_addr_t * _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  _Bool _19;
  struct ip4_addr_t * _20;
  long unsigned int _21;
  _Bool _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  unsigned char _34;
  unsigned char _35;
  _Bool _36;
  long unsigned int _37;
  long unsigned int _38;
  u8_t _39;
  int iftmp.0_40;
  int iftmp.1_41;
  int iftmp.2_42;
  u8_t _45;
  int iftmp.0_47;
  int iftmp.0_48;
  int iftmp.1_49;
  int iftmp.1_50;
  int iftmp.2_51;
  int iftmp.2_52;
  u8_t _53;
  u8_t _54;
  u8_t _55;
  u8_t _56;

  <bb 2> :
  _1 = pcb_44(D)->netif_idx;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _2 = pcb_44(D)->netif_idx;
  _3 = ip_data.current_input_netif;
  _4 = _3->num;
  _5 = _4 + 1;
  if (_2 != _5)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _45 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 43>; [INV]

  <bb 5> :
  _6 = pcb_44(D)->local_ip.type;
  if (_6 == 46)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _56 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 43>; [INV]

  <bb 7> :
  _7 = pcb_44(D)->local_ip.type;
  _8 = ip_data.current_iphdr_dest.type;
  if (_7 == _8)
    goto <bb 8>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 8> :
  if (broadcast_46(D) != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 9> :
  _9 = &pcb_44(D)->local_ip.u_addr.ip4;
  if (_9 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _10 = pcb_44(D)->local_ip.u_addr.ip4.addr;
  if (_10 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 11> :
  _54 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 43>; [INV]

  <bb 12> :
  _11 = &pcb_44(D)->local_ip;
  if (_11 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 13> :
  _12 = &pcb_44(D)->local_ip;
  if (_12 != 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 14> :
  _13 = pcb_44(D)->local_ip.type;
  if (_13 == 6)
    goto <bb 15>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 15> :
  _14 = &pcb_44(D)->local_ip.u_addr.ip6;
  if (_14 == 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _15 = pcb_44(D)->local_ip.u_addr.ip6.addr[0];
  if (_15 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 17> :
  _16 = pcb_44(D)->local_ip.u_addr.ip6.addr[1];
  if (_16 == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 18> :
  _17 = pcb_44(D)->local_ip.u_addr.ip6.addr[2];
  if (_17 == 0)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 19> :
  _18 = pcb_44(D)->local_ip.u_addr.ip6.addr[3];
  if (_18 == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  iftmp.0_48 = 1;
  goto <bb 22>; [INV]

  <bb 21> :
  iftmp.0_47 = 0;

  <bb 22> :
  # iftmp.0_40 = PHI <iftmp.0_48(20), iftmp.0_47(21)>
  _19 = (_Bool) iftmp.0_40;
  if (_19 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  goto <bb 29>; [INV]

  <bb 24> :
  _20 = &pcb_44(D)->local_ip.u_addr.ip4;
  if (_20 == 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 25> :
  _21 = pcb_44(D)->local_ip.u_addr.ip4.addr;
  if (_21 == 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  iftmp.1_50 = 1;
  goto <bb 28>; [INV]

  <bb 27> :
  iftmp.1_49 = 0;

  <bb 28> :
  # iftmp.1_41 = PHI <iftmp.1_50(26), iftmp.1_49(27)>
  _22 = (_Bool) iftmp.1_41;
  if (_22 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :

  <bb 30> :
  _23 = pcb_44(D)->local_ip.type;
  _24 = ip_data.current_iphdr_dest.type;
  if (_23 == _24)
    goto <bb 31>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 31> :
  _25 = pcb_44(D)->local_ip.type;
  if (_25 == 6)
    goto <bb 32>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 32> :
  _26 = pcb_44(D)->local_ip.u_addr.ip6.addr[0];
  _27 = ip_data.current_iphdr_dest.u_addr.ip6.addr[0];
  if (_26 == _27)
    goto <bb 33>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 33> :
  _28 = pcb_44(D)->local_ip.u_addr.ip6.addr[1];
  _29 = ip_data.current_iphdr_dest.u_addr.ip6.addr[1];
  if (_28 == _29)
    goto <bb 34>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 34> :
  _30 = pcb_44(D)->local_ip.u_addr.ip6.addr[2];
  _31 = ip_data.current_iphdr_dest.u_addr.ip6.addr[2];
  if (_30 == _31)
    goto <bb 35>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 35> :
  _32 = pcb_44(D)->local_ip.u_addr.ip6.addr[3];
  _33 = ip_data.current_iphdr_dest.u_addr.ip6.addr[3];
  if (_32 == _33)
    goto <bb 36>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 36> :
  _34 = pcb_44(D)->local_ip.u_addr.ip6.zone;
  _35 = ip_data.current_iphdr_dest.u_addr.ip6.zone;
  if (_34 == _35)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  iftmp.2_51 = 1;
  goto <bb 39>; [INV]

  <bb 38> :
  iftmp.2_52 = 0;

  <bb 39> :
  # iftmp.2_42 = PHI <iftmp.2_51(37), iftmp.2_52(38)>
  _36 = (_Bool) iftmp.2_42;
  if (_36 != 0)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 40> :
  _37 = pcb_44(D)->local_ip.u_addr.ip4.addr;
  _38 = ip_data.current_iphdr_dest.u_addr.ip4.addr;
  if (_37 == _38)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 41> :
  _53 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 43>; [INV]

  <bb 42> :
  _55 = 0;

  <bb 43> :
  # _39 = PHI <_45(4), _56(6), _54(11), _53(41), _55(42)>
<L48>:
  return _39;

}


