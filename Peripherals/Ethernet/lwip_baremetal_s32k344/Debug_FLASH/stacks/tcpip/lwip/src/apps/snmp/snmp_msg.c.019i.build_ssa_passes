snmp_vb_enumerator_get_next (struct snmp_varbind_enumerator * enumerator, struct snmp_varbind * varbind)
{
  err_t err;
  u16_t varbind_len;
  struct snmp_asn1_tlv tlv;
  snmp_vb_enumerator_err_t D.8086;

  <bb 2> :
  _1 = enumerator->pbuf_stream.length;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.8086 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 4> :
  _2 = enumerator->varbind_count;
  _3 = _2;
  _4 = _3 + 1;
  enumerator->varbind_count = _4;
  _5 = &enumerator->pbuf_stream;
  _6 = snmp_asn1_dec_tlv (_5, &tlv);
  if (_6 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _7 = snmp_stats.inasnparseerrs;
  _8 = _7 + 1;
  snmp_stats.inasnparseerrs = _8;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 6> :
  _9 = tlv.type;
  if (_9 != 48)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _10 = tlv.value_len;
  _11 = enumerator->pbuf_stream.length;
  if (_10 > _11)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _12 = snmp_stats.inasnparseerrs;
  _13 = _12 + 1;
  snmp_stats.inasnparseerrs = _13;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 9> :
  varbind_len = tlv.value_len;
  _14 = &enumerator->pbuf_stream;
  _15 = snmp_asn1_dec_tlv (_14, &tlv);
  if (_15 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _16 = snmp_stats.inasnparseerrs;
  _17 = _16 + 1;
  snmp_stats.inasnparseerrs = _17;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 11> :
  _18 = tlv.type;
  if (_18 != 6)
    goto <bb 14>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _19 = tlv.type_len;
  _20 = (int) _19;
  _21 = tlv.length_len;
  _22 = (int) _21;
  _23 = _20 + _22;
  _24 = tlv.value_len;
  _25 = (int) _24;
  _26 = _23 + _25;
  _27 = (int) varbind_len;
  if (_26 >= _27)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _28 = tlv.value_len;
  _29 = enumerator->pbuf_stream.length;
  if (_28 >= _29)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _30 = snmp_stats.inasnparseerrs;
  _31 = _30 + 1;
  snmp_stats.inasnparseerrs = _31;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 15> :
  _32 = &enumerator->pbuf_stream;
  _33 = tlv.value_len;
  _34 = &varbind->oid.id;
  _35 = &varbind->oid.len;
  _36 = snmp_asn1_dec_oid (_32, _33, _34, _35, 50);
  if (_36 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _37 = snmp_stats.inasnparseerrs;
  _38 = _37 + 1;
  snmp_stats.inasnparseerrs = _38;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 17> :
  _39 = tlv.type_len;
  _40 = (short unsigned int) _39;
  _41 = tlv.length_len;
  _42 = (short unsigned int) _41;
  _43 = _40 + _42;
  _44 = tlv.value_len;
  _45 = _43 + _44;
  varbind_len = varbind_len - _45;
  _46 = &enumerator->pbuf_stream;
  _47 = snmp_asn1_dec_tlv (_46, &tlv);
  if (_47 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _48 = snmp_stats.inasnparseerrs;
  _49 = _48 + 1;
  snmp_stats.inasnparseerrs = _49;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 19> :
  _50 = tlv.type_len;
  _51 = (int) _50;
  _52 = tlv.length_len;
  _53 = (int) _52;
  _54 = _51 + _53;
  _55 = tlv.value_len;
  _56 = (int) _55;
  _57 = _54 + _56;
  _58 = (int) varbind_len;
  if (_57 != _58)
    goto <bb 21>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  _59 = tlv.value_len;
  _60 = enumerator->pbuf_stream.length;
  if (_59 > _60)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _61 = snmp_stats.inasnparseerrs;
  _62 = _61 + 1;
  snmp_stats.inasnparseerrs = _62;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 22> :
  _63 = tlv.type;
  varbind->type = _63;
  _64 = varbind->value;
  if (_64 != 0B)
    goto <bb 23>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 23> :
  _65 = varbind->type;
  _66 = (int) _65;
  switch (_66) <default: <L52> [INV], case 2: <L21> [INV], case 4: <L29> [INV], case 5: <L35> [INV], case 6: <L36> [INV], case 64: <L41> [INV], case 65 ... 67: <L24> [INV], case 68: <L29> [INV], case 70: <L49> [INV]>

  <bb 24> :
<L21>:
  _67 = &enumerator->pbuf_stream;
  _68 = tlv.value_len;
  _69 = varbind->value;
  _70 = snmp_asn1_dec_s32t (_67, _68, _69);
  if (_70 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _71 = snmp_stats.inasnparseerrs;
  _72 = _71 + 1;
  snmp_stats.inasnparseerrs = _72;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 26> :
  varbind->value_len = 4;
  goto <bb 51>; [INV]

  <bb 27> :
<L24>:
  _73 = &enumerator->pbuf_stream;
  _74 = tlv.value_len;
  _75 = varbind->value;
  _76 = snmp_asn1_dec_u32t (_73, _74, _75);
  if (_76 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 28> :
  _77 = snmp_stats.inasnparseerrs;
  _78 = _77 + 1;
  snmp_stats.inasnparseerrs = _78;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 29> :
  varbind->value_len = 4;
  goto <bb 51>; [INV]

  <bb 30> :
<L29>:
  _79 = &enumerator->pbuf_stream;
  _80 = tlv.value_len;
  _81 = varbind->value;
  _82 = &varbind->value_len;
  err = snmp_asn1_dec_raw (_79, _80, _81, _82, 200);
  if (err == -1)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  D.8086 = 3;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 32> :
  if (err != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  _83 = snmp_stats.inasnparseerrs;
  _84 = _83 + 1;
  snmp_stats.inasnparseerrs = _84;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 34> :
  goto <bb 51>; [INV]

  <bb 35> :
<L35>:
  varbind->value_len = 0;
  goto <bb 51>; [INV]

  <bb 36> :
<L36>:
  _85 = &enumerator->pbuf_stream;
  _86 = tlv.value_len;
  _87 = varbind->value;
  err = snmp_asn1_dec_oid (_85, _86, _87, &tlv.length_len, 50);
  if (err == -1)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  D.8086 = 3;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 38> :
  if (err != 0)
    goto <bb 39>; [INV]
  else
    goto <bb 40>; [INV]

  <bb 39> :
  _88 = snmp_stats.inasnparseerrs;
  _89 = _88 + 1;
  snmp_stats.inasnparseerrs = _89;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 40> :
  _90 = tlv.length_len;
  _91 = (short unsigned int) _90;
  _92 = _91 * 4;
  varbind->value_len = _92;
  goto <bb 51>; [INV]

  <bb 41> :
<L41>:
  _93 = tlv.value_len;
  if (_93 == 4)
    goto <bb 42>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 42> :
  _94 = &enumerator->pbuf_stream;
  _95 = tlv.value_len;
  _96 = varbind->value;
  _97 = &varbind->value_len;
  _98 = snmp_asn1_dec_raw (_94, _95, _96, _97, 200);
  if (_98 != 0)
    goto <bb 43>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 43> :
  _99 = snmp_stats.inasnparseerrs;
  _100 = _99 + 1;
  snmp_stats.inasnparseerrs = _100;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 44> :
  _101 = snmp_stats.inasnparseerrs;
  _102 = _101 + 1;
  snmp_stats.inasnparseerrs = _102;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 45> :
  goto <bb 51>; [INV]

  <bb 46> :
<L49>:
  _103 = &enumerator->pbuf_stream;
  _104 = tlv.value_len;
  _105 = varbind->value;
  _106 = snmp_asn1_dec_u64t (_103, _104, _105);
  if (_106 != 0)
    goto <bb 47>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 47> :
  _107 = snmp_stats.inasnparseerrs;
  _108 = _107 + 1;
  snmp_stats.inasnparseerrs = _108;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 48> :
  varbind->value_len = 8;
  goto <bb 51>; [INV]

  <bb 49> :
<L52>:

  <bb 50> :
  _109 = snmp_stats.inasnparseerrs;
  _110 = _109 + 1;
  snmp_stats.inasnparseerrs = _110;
  D.8086 = 2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 54>; [INV]

  <bb 51> :
  goto <bb 53>; [INV]

  <bb 52> :
  _111 = &enumerator->pbuf_stream;
  _112 = tlv.value_len;
  _113 = (long int) _112;
  snmp_pbuf_stream_seek (_111, _113);
  _114 = tlv.value_len;
  varbind->value_len = _114;

  <bb 53> :
  D.8086 = 0;

  <bb 54> :
  tlv = {CLOBBER};

  <bb 55> :
<L59>:
  return D.8086;

}


snmp_vb_enumerator_init (struct snmp_varbind_enumerator * enumerator, struct pbuf * p, u16_t offset, u16_t length)
{
  <bb 2> :
  _1 = &enumerator->pbuf_stream;
  snmp_pbuf_stream_init (_1, p, offset, length);
  enumerator->varbind_count = 0;
  return;

}


snmp_execute_write_callbacks (struct snmp_request * request)
{
  struct snmp_varbind vb;
  struct snmp_varbind_enumerator inbound_varbind_enumerator;

  <bb 2> :
  _1 = request->inbound_pbuf;
  _2 = request->inbound_varbind_offset;
  _3 = request->inbound_varbind_len;
  snmp_vb_enumerator_init (&inbound_varbind_enumerator, _1, _2, _3);
  vb.value = 0B;
  goto <bb 4>; [INV]

  <bb 3> :
  snmp_write_callback.14_4 = snmp_write_callback;
  _5 = vb.oid.len;
  snmp_write_callback_arg.15_6 = snmp_write_callback_arg;
  snmp_write_callback.14_4 (&vb.oid.id, _5, snmp_write_callback_arg.15_6);

  <bb 4> :
  _7 = snmp_vb_enumerator_get_next (&inbound_varbind_enumerator, &vb);
  if (_7 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  inbound_varbind_enumerator = {CLOBBER};
  vb = {CLOBBER};
  return;

}


snmp_complete_outbound_frame (struct snmp_request * request)
{
  unsigned int D.8083;
  unsigned int D.8082;
  u16_t len;
  u16_t len;
  struct snmp_pbuf_stream inbound_stream;
  u8_t outbound_padding;
  u16_t frame_size;
  struct snmp_asn1_tlv tlv;
  err_t D.8027;

  <bb 2> :
  outbound_padding = 0;
  _1 = request->version;
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  _2 = request->error_status;
  if (_2 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  _3 = request->error_status;
  switch (_3) <default: <L15> [INV], case 6: <L10> [INV], case 7 ... 10: <L5> [INV], case 11: <L10> [INV], case 12: <L5> [INV], case 16 ... 18: <L10> [INV], case 240 ... 242: <L2> [INV]>

  <bb 5> :
<L2>:
  request->error_status = 2;
  goto <bb 9>; [INV]

  <bb 6> :
<L5>:
  request->error_status = 3;
  goto <bb 9>; [INV]

  <bb 7> :
<L10>:
  request->error_status = 2;
  goto <bb 9>; [INV]

  <bb 8> :
<L15>:
  request->error_status = 5;

  <bb 9> :
  goto <bb 16>; [INV]

  <bb 10> :
  _4 = request->request_type;
  if (_4 == 3)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  _5 = request->error_status;
  D.8082 = (unsigned int) _5;
  D.8083 = D.8082 + 4294967056;
  if (D.8083 <= 2)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
<L23>:
  request->error_status = 17;
  goto <bb 14>; [INV]

  <bb 13> :
<L26>:

  <bb 14> :
  _6 = request->error_status;
  if (_6 > 239)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 69>; [INV]

  <bb 16> :
  _7 = request->error_status;
  if (_7 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  _8 = request->request_type;
  if (_8 == 3)
    goto <bb 18>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 18> :
  _9 = request->inbound_pbuf;
  _10 = request->inbound_varbind_offset;
  _11 = request->inbound_varbind_len;
  _12 = snmp_pbuf_stream_init (&inbound_stream, _9, _10, _11);
  if (_12 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 20> :
  _13 = &request->outbound_pbuf_stream;
  _14 = request->outbound_pbuf;
  _15 = request->outbound_varbind_offset;
  _16 = request->outbound_pbuf;
  _17 = _16->tot_len;
  _18 = request->outbound_varbind_offset;
  _19 = _17 - _18;
  _20 = snmp_pbuf_stream_init (_13, _14, _15, _19);
  if (_20 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 22> :
  _21 = &request->outbound_pbuf_stream;
  _22 = snmp_pbuf_stream_writeto (&inbound_stream, _21, 0);
  if (_22 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 24> :
  inbound_stream = {CLOBBER};
  goto <bb 26>; [INV]

  <bb 25> :
  inbound_stream = {CLOBBER};
  goto <bb 69>; [INV]

  <bb 26> :
  frame_size = request->outbound_pbuf_stream.offset;
  tlv.type = 48;
  tlv.type_len = 0;
  tlv.length_len = 3;
  _23 = (short unsigned int) outbound_padding;
  _24 = frame_size + _23;
  _25 = _24 + 65532;
  tlv.value_len = _25;
  _26 = &request->outbound_pbuf_stream;
  _27 = request->outbound_pbuf;
  _28 = request->outbound_pbuf;
  _29 = _28->tot_len;
  _30 = snmp_pbuf_stream_init (_26, _27, 0, _29);
  if (_30 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 69>; [INV]

  <bb 28> :
  _31 = &request->outbound_pbuf_stream;
  _32 = snmp_ans1_enc_tlv (_31, &tlv);
  if (_32 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 69>; [INV]

  <bb 30> :
  _33 = request->request_out_type;
  tlv.type = _33;
  tlv.type_len = 0;
  tlv.length_len = 3;
  _34 = request->outbound_pdu_offset;
  _35 = frame_size - _34;
  _36 = _35 + 65532;
  tlv.value_len = _36;
  _37 = &request->outbound_pbuf_stream;
  _38 = request->outbound_pdu_offset;
  _39 = (long unsigned int) _38;
  _40 = snmp_pbuf_stream_seek_abs (_37, _39);
  if (_40 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 69>; [INV]

  <bb 32> :
  _41 = &request->outbound_pbuf_stream;
  _42 = snmp_ans1_enc_tlv (_41, &tlv);
  if (_42 != 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 69>; [INV]

  <bb 34> :
  _43 = request->error_status;
  if (_43 != 0)
    goto <bb 35>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 35> :
  _44 = request->error_status;
  snmp_asn1_enc_s32t_cnt (_44, &len);
  len.10_45 = len;
  if (len.10_45 != 1)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]

  <bb 36> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 37> :
  _46 = &request->outbound_pbuf_stream;
  _47 = request->outbound_error_status_offset;
  _48 = (long unsigned int) _47;
  _49 = snmp_pbuf_stream_seek_abs (_46, _48);
  if (_49 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 39> :
  _50 = &request->outbound_pbuf_stream;
  len.11_51 = len;
  _52 = request->error_status;
  _53 = snmp_asn1_enc_s32t (_50, len.11_51, _52);
  if (_53 != 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 41> :
  _54 = request->error_status;
  switch (_54) <default: <L61> [INV], case 1: <L58> [INV], case 2: <L59> [INV], case 3: <L60> [INV]>

  <bb 42> :
<L58>:
  _55 = snmp_stats.outtoobigs;
  _56 = _55 + 1;
  snmp_stats.outtoobigs = _56;
  goto <bb 46>; [INV]

  <bb 43> :
<L59>:
  _57 = snmp_stats.outnosuchnames;
  _58 = _57 + 1;
  snmp_stats.outnosuchnames = _58;
  goto <bb 46>; [INV]

  <bb 44> :
<L60>:
  _59 = snmp_stats.outbadvalues;
  _60 = _59 + 1;
  snmp_stats.outbadvalues = _60;
  goto <bb 46>; [INV]

  <bb 45> :
<L61>:
  _61 = snmp_stats.outgenerrs;
  _62 = _61 + 1;
  snmp_stats.outgenerrs = _62;

  <bb 46> :
  _63 = request->error_status;
  if (_63 == 1)
    goto <bb 47>; [INV]
  else
    goto <bb 48>; [INV]

  <bb 47> :
  request->error_index = 0;
  goto <bb 50>; [INV]

  <bb 48> :
  _64 = request->error_index;
  if (_64 == 0)
    goto <bb 49>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 49> :
  _65 = request->inbound_varbind_enumerator.varbind_count;
  _66 = (long int) _65;
  request->error_index = _66;

  <bb 50> :
  len = {CLOBBER};
  goto <bb 55>; [INV]

  <bb 51> :
  len = {CLOBBER};
  goto <bb 69>; [INV]

  <bb 52> :
  _67 = request->request_type;
  if (_67 == 3)
    goto <bb 53>; [INV]
  else
    goto <bb 54>; [INV]

  <bb 53> :
  _68 = snmp_stats.intotalsetvars;
  _69 = request->inbound_varbind_enumerator.varbind_count;
  _70 = (long unsigned int) _69;
  _71 = _68 + _70;
  snmp_stats.intotalsetvars = _71;
  goto <bb 55>; [INV]

  <bb 54> :
  _72 = snmp_stats.intotalreqvars;
  _73 = request->inbound_varbind_enumerator.varbind_count;
  _74 = (long unsigned int) _73;
  _75 = _72 + _74;
  snmp_stats.intotalreqvars = _75;

  <bb 55> :
  _76 = request->error_index;
  if (_76 != 0)
    goto <bb 56>; [INV]
  else
    goto <bb 64>; [INV]

  <bb 56> :
  _77 = request->error_index;
  snmp_asn1_enc_s32t_cnt (_77, &len);
  len.12_78 = len;
  if (len.12_78 != 1)
    goto <bb 57>; [INV]
  else
    goto <bb 58>; [INV]

  <bb 57> :
  D.8027 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 63>; [INV]

  <bb 58> :
  _79 = &request->outbound_pbuf_stream;
  _80 = request->outbound_error_index_offset;
  _81 = (long unsigned int) _80;
  _82 = snmp_pbuf_stream_seek_abs (_79, _81);
  if (_82 != 0)
    goto <bb 59>; [INV]
  else
    goto <bb 60>; [INV]

  <bb 59> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 63>; [INV]

  <bb 60> :
  _83 = &request->outbound_pbuf_stream;
  len.13_84 = len;
  _85 = request->error_index;
  _86 = snmp_asn1_enc_s32t (_83, len.13_84, _85);
  if (_86 != 0)
    goto <bb 61>; [INV]
  else
    goto <bb 62>; [INV]

  <bb 61> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 63>; [INV]

  <bb 62> :
  len = {CLOBBER};
  goto <bb 64>; [INV]

  <bb 63> :
  len = {CLOBBER};
  goto <bb 69>; [INV]

  <bb 64> :
  tlv.type = 48;
  tlv.type_len = 0;
  tlv.length_len = 3;
  _87 = request->outbound_varbind_offset;
  _88 = frame_size - _87;
  tlv.value_len = _88;
  _89 = &request->outbound_pbuf_stream;
  _90 = request->outbound_varbind_offset;
  _91 = (int) _90;
  _92 = _91 + -4;
  _93 = (long unsigned int) _92;
  _94 = snmp_pbuf_stream_seek_abs (_89, _93);
  if (_94 != 0)
    goto <bb 65>; [INV]
  else
    goto <bb 66>; [INV]

  <bb 65> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 69>; [INV]

  <bb 66> :
  _95 = &request->outbound_pbuf_stream;
  _96 = snmp_ans1_enc_tlv (_95, &tlv);
  if (_96 != 0)
    goto <bb 67>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 67> :
  D.8027 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 69>; [INV]

  <bb 68> :
  _97 = request->outbound_pbuf;
  _98 = (short unsigned int) outbound_padding;
  _99 = frame_size + _98;
  pbuf_realloc (_97, _99);
  _100 = snmp_stats.outgetresponses;
  _101 = _100 + 1;
  snmp_stats.outgetresponses = _101;
  _102 = snmp_stats.outpkts;
  _103 = _102 + 1;
  snmp_stats.outpkts = _103;
  D.8027 = 0;

  <bb 69> :
  tlv = {CLOBBER};

  <bb 70> :
<L91>:
  return D.8027;

}


snmp_append_outbound_varbind (struct snmp_pbuf_stream * pbuf_stream, struct snmp_varbind * varbind)
{
  err_t err;
  struct snmp_varbind_len len;
  struct snmp_asn1_tlv tlv;
  err_t D.7986;

  <bb 2> :
  err = snmp_varbind_length (varbind, &len);
  if (err != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7986 = err;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 4> :
  _1 = len.vb_len_len;
  _2 = (int) _1;
  _3 = _2 + 1;
  _4 = len.vb_value_len;
  _5 = (int) _4;
  _6 = _3 + _5;
  _7 = pbuf_stream->length;
  _8 = (int) _7;
  if (_6 > _8)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.7986 = -2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 6> :
  tlv.type = 48;
  tlv.type_len = 0;
  _9 = len.vb_len_len;
  tlv.length_len = _9;
  _10 = len.vb_value_len;
  tlv.value_len = _10;
  _11 = snmp_ans1_enc_tlv (pbuf_stream, &tlv);
  if (_11 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.7986 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 8> :
  tlv.type = 6;
  tlv.type_len = 0;
  _12 = len.oid_len_len;
  tlv.length_len = _12;
  _13 = len.oid_value_len;
  tlv.value_len = _13;
  _14 = snmp_ans1_enc_tlv (pbuf_stream, &tlv);
  if (_14 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.7986 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 10> :
  _15 = &varbind->oid.id;
  _16 = varbind->oid.len;
  _17 = (short unsigned int) _16;
  _18 = snmp_asn1_enc_oid (pbuf_stream, _15, _17);
  if (_18 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.7986 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 12> :
  _19 = varbind->type;
  tlv.type = _19;
  tlv.type_len = 0;
  _20 = len.value_len_len;
  tlv.length_len = _20;
  _21 = len.value_value_len;
  tlv.value_len = _21;
  _22 = snmp_ans1_enc_tlv (pbuf_stream, &tlv);
  if (_22 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  D.7986 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 14> :
  _23 = len.value_value_len;
  if (_23 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 15> :
  _24 = varbind->value_len;
  _25 = (int) _24;
  _26 = _25 & 16384;
  if (_26 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 16> :
  _27 = varbind->value;
  _28 = len.value_value_len;
  _29 = snmp_asn1_enc_raw (pbuf_stream, _27, _28);
  if (_29 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 17> :
  D.7986 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 18> :
  _30 = varbind->type;
  _31 = (int) _30;
  switch (_31) <default: <L36> [INV], case 2: <L17> [INV], case 4: <L25> [INV], case 6: <L30> [INV], case 64: <L25> [INV], case 65 ... 67: <L20> [INV], case 68: <L25> [INV], case 70: <L33> [INV]>

  <bb 19> :
<L17>:
  _32 = len.value_value_len;
  _33 = varbind->value;
  _34 = MEM[(s32_t *)_33];
  _35 = snmp_asn1_enc_s32t (pbuf_stream, _32, _34);
  if (_35 != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  D.7986 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 21> :
  goto <bb 36>; [INV]

  <bb 22> :
<L20>:
  _36 = len.value_value_len;
  _37 = varbind->value;
  _38 = MEM[(u32_t *)_37];
  _39 = snmp_asn1_enc_u32t (pbuf_stream, _36, _38);
  if (_39 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.7986 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 24> :
  goto <bb 36>; [INV]

  <bb 25> :
<L25>:
  _40 = varbind->value;
  _41 = len.value_value_len;
  _42 = snmp_asn1_enc_raw (pbuf_stream, _40, _41);
  if (_42 != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  D.7986 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 27> :
  _43 = varbind->value_len;
  len.value_value_len = _43;
  goto <bb 36>; [INV]

  <bb 28> :
<L30>:
  _44 = varbind->value;
  _45 = varbind->value_len;
  _46 = _45 / 4;
  _47 = snmp_asn1_enc_oid (pbuf_stream, _44, _46);
  if (_47 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  D.7986 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 30> :
  goto <bb 36>; [INV]

  <bb 31> :
<L33>:
  _48 = len.value_value_len;
  _49 = varbind->value;
  _50 = MEM[(u64_t *)_49];
  _51 = snmp_asn1_enc_u64t (pbuf_stream, _48, _50);
  if (_51 != 0)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  D.7986 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 37>; [INV]

  <bb 33> :
  goto <bb 36>; [INV]

  <bb 34> :
<L36>:

  <bb 35> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 35>; [INV]

  <bb 36> :
  D.7986 = 0;

  <bb 37> :
  tlv = {CLOBBER};
  len = {CLOBBER};

  <bb 38> :
<L44>:
  return D.7986;

}


snmp_varbind_length (struct snmp_varbind * varbind, struct snmp_varbind_len * len)
{
  err_t D.7974;

  <bb 2> :
  _1 = &varbind->oid.id;
  _2 = varbind->oid.len;
  _3 = (short unsigned int) _2;
  _4 = &len->oid_value_len;
  snmp_asn1_enc_oid_cnt (_1, _3, _4);
  _5 = len->oid_value_len;
  _6 = &len->oid_len_len;
  snmp_asn1_enc_length_cnt (_5, _6);
  _7 = varbind->value_len;
  if (_7 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  len->value_value_len = 0;
  goto <bb 24>; [INV]

  <bb 4> :
  _8 = varbind->value_len;
  _9 = (int) _8;
  _10 = _9 & 16384;
  if (_10 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _11 = varbind->value_len;
  _12 = _11 & 49151;
  len->value_value_len = _12;
  goto <bb 24>; [INV]

  <bb 6> :
  _13 = varbind->type;
  _14 = (int) _13;
  switch (_14) <default: <L24> [INV], case 2: <L4> [INV], case 4: <L12> [INV], case 5: <L15> [INV], case 6: <L18> [INV], case 64: <L12> [INV], case 65 ... 67: <L7> [INV], case 68: <L12> [INV], case 70: <L21> [INV]>

  <bb 7> :
<L4>:
  _15 = varbind->value_len;
  if (_15 != 4)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  D.7974 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 9> :
  _16 = varbind->value;
  _17 = MEM[(s32_t *)_16];
  _18 = &len->value_value_len;
  snmp_asn1_enc_s32t_cnt (_17, _18);
  goto <bb 24>; [INV]

  <bb 10> :
<L7>:
  _19 = varbind->value_len;
  if (_19 != 4)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.7974 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 12> :
  _20 = varbind->value;
  _21 = MEM[(u32_t *)_20];
  _22 = &len->value_value_len;
  snmp_asn1_enc_u32t_cnt (_21, _22);
  goto <bb 24>; [INV]

  <bb 13> :
<L12>:
  _23 = varbind->value_len;
  len->value_value_len = _23;
  goto <bb 24>; [INV]

  <bb 14> :
<L15>:
  _24 = varbind->value_len;
  if (_24 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  D.7974 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 16> :
  len->value_value_len = 0;
  goto <bb 24>; [INV]

  <bb 17> :
<L18>:
  _25 = varbind->value_len;
  _26 = (int) _25;
  _27 = _26 & 3;
  if (_27 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  D.7974 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 19> :
  _28 = varbind->value;
  _29 = varbind->value_len;
  _30 = _29 >> 2;
  _31 = &len->value_value_len;
  snmp_asn1_enc_oid_cnt (_28, _30, _31);
  goto <bb 24>; [INV]

  <bb 20> :
<L21>:
  _32 = varbind->value_len;
  if (_32 != 8)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  D.7974 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 22> :
  _33 = varbind->value;
  _34 = MEM[(u64_t *)_33];
  _35 = &len->value_value_len;
  snmp_asn1_enc_u64t_cnt (_34, _35);
  goto <bb 24>; [INV]

  <bb 23> :
<L24>:
  D.7974 = -6;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 25>; [INV]

  <bb 24> :
  _36 = len->value_value_len;
  _37 = &len->value_len_len;
  snmp_asn1_enc_length_cnt (_36, _37);
  _38 = len->oid_len_len;
  _39 = (short unsigned int) _38;
  _40 = len->oid_value_len;
  _41 = _39 + _40;
  _42 = len->value_len_len;
  _43 = (short unsigned int) _42;
  _44 = _41 + _43;
  _45 = len->value_value_len;
  _46 = _44 + _45;
  _47 = _46 + 2;
  len->vb_value_len = _47;
  _48 = len->vb_value_len;
  _49 = &len->vb_len_len;
  snmp_asn1_enc_length_cnt (_48, _49);
  D.7974 = 0;

  <bb 25> :
<L28>:
  return D.7974;

}


snmp_prepare_outbound_frame (struct snmp_request * request)
{
  struct snmp_pbuf_stream * pbuf_stream;
  struct snmp_asn1_tlv tlv;
  err_t D.7937;

  <bb 2> :
  pbuf_stream = &request->outbound_pbuf_stream;
  _1 = pbuf_alloc (74, 1472, 640);
  request->outbound_pbuf = _1;
  _2 = request->outbound_pbuf;
  if (_2 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.7937 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 4> :
  _3 = request->outbound_pbuf;
  _4 = request->outbound_pbuf;
  _5 = _4->tot_len;
  snmp_pbuf_stream_init (pbuf_stream, _3, 0, _5);
  tlv.type = 48;
  tlv.type_len = 0;
  tlv.length_len = 3;
  tlv.value_len = 0;
  _6 = snmp_ans1_enc_tlv (pbuf_stream, &tlv);
  if (_6 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 6> :
  tlv.type = 2;
  tlv.type_len = 0;
  tlv.length_len = 0;
  tlv.value_len = 0;
  _7 = request->version;
  _8 = (long int) _7;
  snmp_asn1_enc_s32t_cnt (_8, &tlv.value_len);
  _9 = snmp_ans1_enc_tlv (pbuf_stream, &tlv);
  if (_9 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 8> :
  _10 = tlv.value_len;
  _11 = request->version;
  _12 = (long int) _11;
  _13 = snmp_asn1_enc_s32t (pbuf_stream, _10, _12);
  if (_13 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 10> :
  tlv.type = 4;
  tlv.type_len = 0;
  tlv.length_len = 0;
  _14 = request->community_strlen;
  tlv.value_len = _14;
  _15 = snmp_ans1_enc_tlv (pbuf_stream, &tlv);
  if (_15 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 12> :
  _16 = &request->community;
  _17 = request->community_strlen;
  _18 = snmp_asn1_enc_raw (pbuf_stream, _16, _17);
  if (_18 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 14> :
  _19 = pbuf_stream->offset;
  request->outbound_pdu_offset = _19;
  _20 = request->request_out_type;
  tlv.type = _20;
  tlv.type_len = 0;
  tlv.length_len = 3;
  tlv.value_len = 0;
  _21 = snmp_ans1_enc_tlv (pbuf_stream, &tlv);
  if (_21 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 16> :
  tlv.type = 2;
  tlv.type_len = 0;
  tlv.length_len = 0;
  tlv.value_len = 0;
  _22 = request->request_id;
  snmp_asn1_enc_s32t_cnt (_22, &tlv.value_len);
  _23 = snmp_ans1_enc_tlv (pbuf_stream, &tlv);
  if (_23 != 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 18> :
  _24 = tlv.value_len;
  _25 = request->request_id;
  _26 = snmp_asn1_enc_s32t (pbuf_stream, _24, _25);
  if (_26 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 20> :
  tlv.type = 2;
  tlv.type_len = 0;
  tlv.length_len = 0;
  tlv.value_len = 1;
  _27 = snmp_ans1_enc_tlv (pbuf_stream, &tlv);
  if (_27 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 22> :
  _28 = pbuf_stream->offset;
  request->outbound_error_status_offset = _28;
  _29 = snmp_pbuf_stream_write (pbuf_stream, 0);
  if (_29 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 24> :
  tlv.type = 2;
  tlv.type_len = 0;
  tlv.length_len = 0;
  tlv.value_len = 1;
  _30 = snmp_ans1_enc_tlv (pbuf_stream, &tlv);
  if (_30 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 26> :
  _31 = pbuf_stream->offset;
  request->outbound_error_index_offset = _31;
  _32 = snmp_pbuf_stream_write (pbuf_stream, 0);
  if (_32 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 28> :
  tlv.type = 48;
  tlv.type_len = 0;
  tlv.length_len = 3;
  tlv.value_len = 0;
  _33 = snmp_ans1_enc_tlv (pbuf_stream, &tlv);
  if (_33 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  D.7937 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 31>; [INV]

  <bb 30> :
  _34 = pbuf_stream->offset;
  request->outbound_varbind_offset = _34;
  D.7937 = 0;

  <bb 31> :
  tlv = {CLOBBER};

  <bb 32> :
<L29>:
  return D.7937;

}


snmp_parse_inbound_frame (struct snmp_request * request)
{
  err_t err;
  s32_t s32_value;
  s32_t parent_tlv_value_len;
  struct snmp_asn1_tlv tlv;
  struct snmp_pbuf_stream pbuf_stream;
  err_t D.7839;

  <bb 2> :
  _1 = request->inbound_pbuf;
  _2 = request->inbound_pbuf;
  _3 = _2->tot_len;
  _4 = snmp_pbuf_stream_init (&pbuf_stream, _1, 0, _3);
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = snmp_stats.inasnparseerrs;
  _6 = _5 + 1;
  snmp_stats.inasnparseerrs = _6;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 4> :
  _7 = snmp_asn1_dec_tlv (&pbuf_stream, &tlv);
  if (_7 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _8 = snmp_stats.inasnparseerrs;
  _9 = _8 + 1;
  snmp_stats.inasnparseerrs = _9;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 6> :
  _10 = tlv.type;
  if (_10 != 48)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _11 = tlv.value_len;
  _12 = pbuf_stream.length;
  if (_11 != _12)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _13 = snmp_stats.inasnparseerrs;
  _14 = _13 + 1;
  snmp_stats.inasnparseerrs = _14;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 9> :
  _15 = tlv.value_len;
  parent_tlv_value_len = (s32_t) _15;
  _16 = snmp_asn1_dec_tlv (&pbuf_stream, &tlv);
  if (_16 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  _17 = snmp_stats.inasnparseerrs;
  _18 = _17 + 1;
  snmp_stats.inasnparseerrs = _18;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 11> :
  _19 = tlv.type;
  if (_19 != 2)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _20 = snmp_stats.inasnparseerrs;
  _21 = _20 + 1;
  snmp_stats.inasnparseerrs = _21;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 13> :
  _22 = tlv.type_len;
  _23 = (int) _22;
  _24 = tlv.length_len;
  _25 = (int) _24;
  _26 = _23 + _25;
  _27 = tlv.value_len;
  _28 = (int) _27;
  _29 = _26 + _28;
  parent_tlv_value_len = parent_tlv_value_len - _29;
  if (parent_tlv_value_len <= 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _30 = snmp_stats.inasnparseerrs;
  _31 = _30 + 1;
  snmp_stats.inasnparseerrs = _31;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 15> :
  _32 = tlv.value_len;
  _33 = snmp_asn1_dec_s32t (&pbuf_stream, _32, &s32_value);
  if (_33 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  _34 = snmp_stats.inasnparseerrs;
  _35 = _34 + 1;
  snmp_stats.inasnparseerrs = _35;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 17> :
  s32_value.2_36 = s32_value;
  if (s32_value.2_36 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 18> :
  s32_value.3_37 = s32_value;
  if (s32_value.3_37 != 1)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  _38 = snmp_stats.inbadversions;
  _39 = _38 + 1;
  snmp_stats.inbadversions = _39;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 20> :
  s32_value.4_40 = s32_value;
  _41 = (unsigned char) s32_value.4_40;
  request->version = _41;
  _42 = snmp_asn1_dec_tlv (&pbuf_stream, &tlv);
  if (_42 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  _43 = snmp_stats.inasnparseerrs;
  _44 = _43 + 1;
  snmp_stats.inasnparseerrs = _44;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 22> :
  _45 = tlv.type;
  if (_45 != 4)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  _46 = snmp_stats.inasnparseerrs;
  _47 = _46 + 1;
  snmp_stats.inasnparseerrs = _47;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 24> :
  _48 = tlv.type_len;
  _49 = (int) _48;
  _50 = tlv.length_len;
  _51 = (int) _50;
  _52 = _49 + _51;
  _53 = tlv.value_len;
  _54 = (int) _53;
  _55 = _52 + _54;
  parent_tlv_value_len = parent_tlv_value_len - _55;
  if (parent_tlv_value_len <= 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  _56 = snmp_stats.inasnparseerrs;
  _57 = _56 + 1;
  snmp_stats.inasnparseerrs = _57;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 26> :
  _58 = tlv.value_len;
  _59 = &request->community;
  _60 = &request->community_strlen;
  err = snmp_asn1_dec_raw (&pbuf_stream, _58, _59, _60, 8);
  if (err == -1)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  request->community_strlen = 0;
  _61 = tlv.value_len;
  _62 = (long int) _61;
  snmp_pbuf_stream_seek (&pbuf_stream, _62);
  goto <bb 30>; [INV]

  <bb 28> :
  if (err != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  _63 = snmp_stats.inasnparseerrs;
  _64 = _63 + 1;
  snmp_stats.inasnparseerrs = _64;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 30> :
  _65 = request->community_strlen;
  _66 = (int) _65;
  request->community[_66] = 0;
  _67 = snmp_asn1_dec_tlv (&pbuf_stream, &tlv);
  if (_67 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  _68 = snmp_stats.inasnparseerrs;
  _69 = _68 + 1;
  snmp_stats.inasnparseerrs = _69;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 32> :
  _70 = tlv.value_len;
  _71 = pbuf_stream.length;
  if (_70 > _71)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 33> :
  _72 = snmp_stats.inasnparseerrs;
  _73 = _72 + 1;
  snmp_stats.inasnparseerrs = _73;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 34> :
  _74 = pbuf_stream.length;
  _75 = tlv.value_len;
  _76 = _74 - _75;
  request->inbound_padding_len = _76;
  _77 = tlv.value_len;
  parent_tlv_value_len = (s32_t) _77;
  _78 = tlv.type;
  _79 = (int) _78;
  switch (_79) <default: <L40> [INV], case 160: <L34> [INV], case 161: <L35> [INV], case 163: <L39> [INV], case 165: <L36> [INV]>

  <bb 35> :
<L34>:
  _80 = snmp_stats.ingetrequests;
  _81 = _80 + 1;
  snmp_stats.ingetrequests = _81;
  goto <bb 42>; [INV]

  <bb 36> :
<L35>:
  _82 = snmp_stats.ingetnexts;
  _83 = _82 + 1;
  snmp_stats.ingetnexts = _83;
  goto <bb 42>; [INV]

  <bb 37> :
<L36>:
  _84 = request->version;
  if (_84 == 0)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 38> :
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 39> :
  goto <bb 42>; [INV]

  <bb 40> :
<L39>:
  _85 = snmp_stats.insetrequests;
  _86 = _85 + 1;
  snmp_stats.insetrequests = _86;
  goto <bb 42>; [INV]

  <bb 41> :
<L40>:
  D.7839 = -16;
  goto <bb 95>; [INV]

  <bb 42> :
  _87 = tlv.type;
  _88 = _87 & 31;
  request->request_type = _88;
  request->request_out_type = 162;
  _89 = request->community_strlen;
  if (_89 == 0)
    goto <bb 43>; [INV]
  else
    goto <bb 44>; [INV]

  <bb 43> :
  _90 = snmp_stats.inbadcommunitynames;
  _91 = _90 + 1;
  snmp_stats.inbadcommunitynames = _91;
  snmp_authfail_trap ();
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 44> :
  _92 = request->request_type;
  if (_92 == 3)
    goto <bb 45>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 45> :
  snmp_community_write.5_93 = snmp_community_write;
  _94 = *snmp_community_write.5_93;
  if (_94 == 0)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]

  <bb 46> :
  request->error_status = 17;
  request->error_index = 1;
  goto <bb 51>; [INV]

  <bb 47> :
  snmp_community_write.6_95 = snmp_community_write;
  _96 = &request->community;
  _97 = strncmp (snmp_community_write.6_95, _96, 8);
  if (_97 != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 48> :
  _98 = snmp_stats.inbadcommunitynames;
  _99 = _98 + 1;
  snmp_stats.inbadcommunitynames = _99;
  snmp_authfail_trap ();
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 49> :
  snmp_community.7_100 = snmp_community;
  _101 = &request->community;
  _102 = strncmp (snmp_community.7_100, _101, 8);
  if (_102 != 0)
    goto <bb 50>; [INV]
  else
    goto <bb 51>; [INV]

  <bb 50> :
  _103 = snmp_stats.inbadcommunitynames;
  _104 = _103 + 1;
  snmp_stats.inbadcommunitynames = _104;
  snmp_authfail_trap ();
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 51> :
  _105 = snmp_asn1_dec_tlv (&pbuf_stream, &tlv);
  if (_105 != 0)
    goto <bb 52>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 52> :
  _106 = snmp_stats.inasnparseerrs;
  _107 = _106 + 1;
  snmp_stats.inasnparseerrs = _107;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 53> :
  _108 = tlv.type;
  if (_108 != 2)
    goto <bb 54>; [INV]
  else
    goto <bb 55>; [INV]

  <bb 54> :
  _109 = snmp_stats.inasnparseerrs;
  _110 = _109 + 1;
  snmp_stats.inasnparseerrs = _110;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 55> :
  _111 = tlv.type_len;
  _112 = (int) _111;
  _113 = tlv.length_len;
  _114 = (int) _113;
  _115 = _112 + _114;
  _116 = tlv.value_len;
  _117 = (int) _116;
  _118 = _115 + _117;
  parent_tlv_value_len = parent_tlv_value_len - _118;
  if (parent_tlv_value_len <= 0)
    goto <bb 56>; [INV]
  else
    goto <bb 57>; [INV]

  <bb 56> :
  _119 = snmp_stats.inasnparseerrs;
  _120 = _119 + 1;
  snmp_stats.inasnparseerrs = _120;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 57> :
  _121 = tlv.value_len;
  _122 = &request->request_id;
  _123 = snmp_asn1_dec_s32t (&pbuf_stream, _121, _122);
  if (_123 != 0)
    goto <bb 58>; [INV]
  else
    goto <bb 59>; [INV]

  <bb 58> :
  _124 = snmp_stats.inasnparseerrs;
  _125 = _124 + 1;
  snmp_stats.inasnparseerrs = _125;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 59> :
  _126 = snmp_asn1_dec_tlv (&pbuf_stream, &tlv);
  if (_126 != 0)
    goto <bb 60>; [INV]
  else
    goto <bb 61>; [INV]

  <bb 60> :
  _127 = snmp_stats.inasnparseerrs;
  _128 = _127 + 1;
  snmp_stats.inasnparseerrs = _128;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 61> :
  _129 = tlv.type;
  if (_129 != 2)
    goto <bb 62>; [INV]
  else
    goto <bb 63>; [INV]

  <bb 62> :
  _130 = snmp_stats.inasnparseerrs;
  _131 = _130 + 1;
  snmp_stats.inasnparseerrs = _131;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 63> :
  _132 = tlv.type_len;
  _133 = (int) _132;
  _134 = tlv.length_len;
  _135 = (int) _134;
  _136 = _133 + _135;
  _137 = tlv.value_len;
  _138 = (int) _137;
  _139 = _136 + _138;
  parent_tlv_value_len = parent_tlv_value_len - _139;
  if (parent_tlv_value_len <= 0)
    goto <bb 64>; [INV]
  else
    goto <bb 65>; [INV]

  <bb 64> :
  _140 = snmp_stats.inasnparseerrs;
  _141 = _140 + 1;
  snmp_stats.inasnparseerrs = _141;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 65> :
  _142 = request->request_type;
  if (_142 == 5)
    goto <bb 66>; [INV]
  else
    goto <bb 70>; [INV]

  <bb 66> :
  _143 = tlv.value_len;
  _144 = &request->non_repeaters;
  _145 = snmp_asn1_dec_s32t (&pbuf_stream, _143, _144);
  if (_145 != 0)
    goto <bb 67>; [INV]
  else
    goto <bb 68>; [INV]

  <bb 67> :
  _146 = snmp_stats.inasnparseerrs;
  _147 = _146 + 1;
  snmp_stats.inasnparseerrs = _147;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 68> :
  _148 = request->non_repeaters;
  if (_148 < 0)
    goto <bb 69>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 69> :
  request->non_repeaters = 0;
  goto <bb 74>; [INV]

  <bb 70> :
  _149 = tlv.value_len;
  _150 = snmp_asn1_dec_s32t (&pbuf_stream, _149, &s32_value);
  if (_150 != 0)
    goto <bb 71>; [INV]
  else
    goto <bb 72>; [INV]

  <bb 71> :
  _151 = snmp_stats.inasnparseerrs;
  _152 = _151 + 1;
  snmp_stats.inasnparseerrs = _152;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 72> :
  s32_value.8_153 = s32_value;
  if (s32_value.8_153 != 0)
    goto <bb 73>; [INV]
  else
    goto <bb 74>; [INV]

  <bb 73> :
  _154 = snmp_stats.inasnparseerrs;
  _155 = _154 + 1;
  snmp_stats.inasnparseerrs = _155;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 74> :
  _156 = snmp_asn1_dec_tlv (&pbuf_stream, &tlv);
  if (_156 != 0)
    goto <bb 75>; [INV]
  else
    goto <bb 76>; [INV]

  <bb 75> :
  _157 = snmp_stats.inasnparseerrs;
  _158 = _157 + 1;
  snmp_stats.inasnparseerrs = _158;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 76> :
  _159 = tlv.type;
  if (_159 != 2)
    goto <bb 77>; [INV]
  else
    goto <bb 78>; [INV]

  <bb 77> :
  _160 = snmp_stats.inasnparseerrs;
  _161 = _160 + 1;
  snmp_stats.inasnparseerrs = _161;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 78> :
  _162 = tlv.type_len;
  _163 = (int) _162;
  _164 = tlv.length_len;
  _165 = (int) _164;
  _166 = _163 + _165;
  _167 = tlv.value_len;
  _168 = (int) _167;
  _169 = _166 + _168;
  parent_tlv_value_len = parent_tlv_value_len - _169;
  if (parent_tlv_value_len <= 0)
    goto <bb 79>; [INV]
  else
    goto <bb 80>; [INV]

  <bb 79> :
  _170 = snmp_stats.inasnparseerrs;
  _171 = _170 + 1;
  snmp_stats.inasnparseerrs = _171;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 80> :
  _172 = request->request_type;
  if (_172 == 5)
    goto <bb 81>; [INV]
  else
    goto <bb 85>; [INV]

  <bb 81> :
  _173 = tlv.value_len;
  _174 = &request->max_repetitions;
  _175 = snmp_asn1_dec_s32t (&pbuf_stream, _173, _174);
  if (_175 != 0)
    goto <bb 82>; [INV]
  else
    goto <bb 83>; [INV]

  <bb 82> :
  _176 = snmp_stats.inasnparseerrs;
  _177 = _176 + 1;
  snmp_stats.inasnparseerrs = _177;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 83> :
  _178 = request->max_repetitions;
  if (_178 < 0)
    goto <bb 84>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 84> :
  request->max_repetitions = 0;
  goto <bb 89>; [INV]

  <bb 85> :
  _179 = tlv.value_len;
  _180 = &request->error_index;
  _181 = snmp_asn1_dec_s32t (&pbuf_stream, _179, _180);
  if (_181 != 0)
    goto <bb 86>; [INV]
  else
    goto <bb 87>; [INV]

  <bb 86> :
  _182 = snmp_stats.inasnparseerrs;
  _183 = _182 + 1;
  snmp_stats.inasnparseerrs = _183;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 87> :
  s32_value.9_184 = s32_value;
  if (s32_value.9_184 != 0)
    goto <bb 88>; [INV]
  else
    goto <bb 89>; [INV]

  <bb 88> :
  _185 = snmp_stats.inasnparseerrs;
  _186 = _185 + 1;
  snmp_stats.inasnparseerrs = _186;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 89> :
  _187 = snmp_asn1_dec_tlv (&pbuf_stream, &tlv);
  if (_187 != 0)
    goto <bb 90>; [INV]
  else
    goto <bb 91>; [INV]

  <bb 90> :
  _188 = snmp_stats.inasnparseerrs;
  _189 = _188 + 1;
  snmp_stats.inasnparseerrs = _189;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 91> :
  _190 = tlv.type;
  if (_190 != 48)
    goto <bb 93>; [INV]
  else
    goto <bb 92>; [INV]

  <bb 92> :
  _191 = tlv.value_len;
  _192 = pbuf_stream.length;
  if (_191 > _192)
    goto <bb 93>; [INV]
  else
    goto <bb 94>; [INV]

  <bb 93> :
  _193 = snmp_stats.inasnparseerrs;
  _194 = _193 + 1;
  snmp_stats.inasnparseerrs = _194;
  D.7839 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 95>; [INV]

  <bb 94> :
  _195 = pbuf_stream.offset;
  request->inbound_varbind_offset = _195;
  _196 = pbuf_stream.length;
  _197 = request->inbound_padding_len;
  _198 = _196 - _197;
  request->inbound_varbind_len = _198;
  _199 = &request->inbound_varbind_enumerator;
  _200 = request->inbound_pbuf;
  _201 = request->inbound_varbind_offset;
  _202 = request->inbound_varbind_len;
  snmp_vb_enumerator_init (_199, _200, _201, _202);
  D.7839 = 0;

  <bb 95> :
  pbuf_stream = {CLOBBER};
  tlv = {CLOBBER};
  s32_value = {CLOBBER};

  <bb 96> :
<L102>:
  return D.7839;

}


snmp_process_set_request (struct snmp_request * request)
{
  struct snmp_node_instance node_instance;
  struct snmp_node_instance node_instance;
  struct snmp_varbind vb;
  snmp_vb_enumerator_err_t err;
  err_t D.7818;

  <bb 2> :
  _1 = &request->value_buffer;
  vb.value = _1;
  goto <bb 22>; [INV]

  <bb 3> :
  _2 = &request->inbound_varbind_enumerator;
  err = snmp_vb_enumerator_get_next (_2, &vb);
  if (err == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 4> :
  memset (&node_instance, 0, 248);
  _3 = vb.oid.len;
  _4 = snmp_get_node_instance_from_oid (&vb.oid.id, _3, &node_instance);
  _5 = (long int) _4;
  request->error_status = _5;
  _6 = request->error_status;
  if (_6 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 5> :
  _7 = node_instance.asn1_type;
  _8 = vb.type;
  if (_7 != _8)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  request->error_status = 7;
  goto <bb 12>; [INV]

  <bb 7> :
  _9 = node_instance.access;
  _10 = _9 & 2;
  if (_10 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _11 = node_instance.set_value;
  if (_11 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  request->error_status = 17;
  goto <bb 12>; [INV]

  <bb 10> :
  _12 = node_instance.set_test;
  if (_12 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _13 = node_instance.set_test;
  _14 = vb.value_len;
  _15 = vb.value;
  _16 = _13 (&node_instance, _14, _15);
  _17 = (long int) _16;
  request->error_status = _17;

  <bb 12> :
  _18 = node_instance.release_instance;
  if (_18 != 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _19 = node_instance.release_instance;
  _19 (&node_instance);

  <bb 14> :
  node_instance = {CLOBBER};
  goto <bb 22>; [INV]

  <bb 15> :
  if (err == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  goto <bb 23>; [INV]

  <bb 17> :
  if (err == 3)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  request->error_status = 8;
  goto <bb 22>; [INV]

  <bb 19> :
  if (err == 2)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  D.7818 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 39>; [INV]

  <bb 21> :
  request->error_status = 5;

  <bb 22> :
  _20 = request->error_status;
  if (_20 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 23> :
  _21 = request->error_status;
  if (_21 == 0)
    goto <bb 24>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 24> :
  _22 = &request->inbound_varbind_enumerator;
  _23 = request->inbound_pbuf;
  _24 = request->inbound_varbind_offset;
  _25 = request->inbound_varbind_len;
  snmp_vb_enumerator_init (_22, _23, _24, _25);
  goto <bb 37>; [INV]

  <bb 25> :
  _26 = &request->inbound_varbind_enumerator;
  err = snmp_vb_enumerator_get_next (_26, &vb);
  if (err == 0)
    goto <bb 26>; [INV]
  else
    goto <bb 34>; [INV]

  <bb 26> :
  memset (&node_instance, 0, 248);
  _27 = vb.oid.len;
  _28 = snmp_get_node_instance_from_oid (&vb.oid.id, _27, &node_instance);
  _29 = (long int) _28;
  request->error_status = _29;
  _30 = request->error_status;
  if (_30 == 0)
    goto <bb 27>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 27> :
  _31 = node_instance.set_value;
  _32 = vb.value_len;
  _33 = vb.value;
  _34 = _31 (&node_instance, _32, _33);
  if (_34 != 0)
    goto <bb 28>; [INV]
  else
    goto <bb 31>; [INV]

  <bb 28> :
  _35 = request->inbound_varbind_enumerator.varbind_count;
  if (_35 == 1)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  request->error_status = 14;
  goto <bb 31>; [INV]

  <bb 30> :
  request->error_status = 15;

  <bb 31> :
  _36 = node_instance.release_instance;
  if (_36 != 0B)
    goto <bb 32>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 32> :
  _37 = node_instance.release_instance;
  _37 (&node_instance);

  <bb 33> :
  node_instance = {CLOBBER};
  goto <bb 37>; [INV]

  <bb 34> :
  if (err == 1)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  goto <bb 38>; [INV]

  <bb 36> :
  request->error_status = 5;

  <bb 37> :
  _38 = request->error_status;
  if (_38 == 0)
    goto <bb 25>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 38> :
  D.7818 = 0;

  <bb 39> :
  vb = {CLOBBER};

  <bb 40> :
<L46>:
  return D.7818;

}


snmp_process_getbulk_request (struct snmp_request * request)
{
  u8_t all_endofmibview;
  struct snmp_varbind vb;
  struct snmp_varbind_enumerator repetition_varbind_enumerator;
  u16_t repetition_offset;
  s32_t repetitions;
  s32_t non_repeaters;
  snmp_vb_enumerator_err_t err;
  err_t D.7769;

  <bb 2> :
  non_repeaters = request->non_repeaters;
  repetition_offset = 0;
  _1 = &request->value_buffer;
  vb.value = _1;

  <bb 3> :
  repetitions = request->max_repetitions;
  goto <bb 17>; [INV]

  <bb 4> :
  if (non_repeaters == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  repetition_offset = request->outbound_pbuf_stream.offset;
  if (repetitions == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  goto <bb 18>; [INV]

  <bb 7> :
  repetitions = repetitions + -1;

  <bb 8> :
  _3 = &request->inbound_varbind_enumerator;
  err = snmp_vb_enumerator_get_next (_3, &vb);
  if (err == 1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  goto <bb 18>; [INV]

  <bb 10> :
  if (err == 2)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.7769 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 39>; [INV]

  <bb 12> :
  if (err != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _4 = vb.type;
  if (_4 != 5)
    goto <bb 15>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _5 = vb.value_len;
  if (_5 != 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  request->error_status = 5;
  goto <bb 17>; [INV]

  <bb 16> :
  snmp_process_varbind (request, &vb, 1);
  non_repeaters = non_repeaters + -1;

  <bb 17> :
  _6 = request->error_status;
  if (_6 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  goto <bb 33>; [INV]

  <bb 19> :
  all_endofmibview = 1;
  _7 = request->outbound_pbuf;
  _8 = request->outbound_pbuf_stream.offset;
  _9 = _8 - repetition_offset;
  snmp_vb_enumerator_init (&repetition_varbind_enumerator, _7, repetition_offset, _9);
  repetition_offset = request->outbound_pbuf_stream.offset;
  goto <bb 28>; [INV]

  <bb 20> :
  vb.value = 0B;
  err = snmp_vb_enumerator_get_next (&repetition_varbind_enumerator, &vb);
  if (err == 0)
    goto <bb 21>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 21> :
  _10 = &request->value_buffer;
  vb.value = _10;
  snmp_process_varbind (request, &vb, 1);
  _11 = request->error_status;
  if (_11 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  _12 = request->non_repeaters;
  _13 = repetition_varbind_enumerator.varbind_count;
  _14 = (long int) _13;
  _15 = _12 + _14;
  request->error_index = _15;
  goto <bb 28>; [INV]

  <bb 23> :
  _16 = vb.type;
  if (_16 != 130)
    goto <bb 24>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 24> :
  all_endofmibview = 0;
  goto <bb 28>; [INV]

  <bb 25> :
  if (err == 1)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  goto <bb 29>; [INV]

  <bb 27> :
  request->error_status = 5;
  _17 = request->non_repeaters;
  _18 = repetition_varbind_enumerator.varbind_count;
  _19 = (long int) _18;
  _20 = _17 + _19;
  request->error_index = _20;

  <bb 28> :
  _21 = request->error_status;
  if (_21 == 0)
    goto <bb 20>; [INV]
  else
    goto <bb 29>; [INV]

  <bb 29> :
  _22 = request->error_status;
  if (_22 == 0)
    goto <bb 30>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 30> :
  if (all_endofmibview != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  goto <bb 36>; [INV]

  <bb 32> :
  repetitions = repetitions + -1;

  <bb 33> :
  _23 = request->error_status;
  if (_23 == 0)
    goto <bb 34>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 34> :
  if (repetitions > 0)
    goto <bb 35>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 35> :
  _24 = request->outbound_pbuf_stream.offset;
  if (repetition_offset != _24)
    goto <bb 19>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  _25 = request->error_status;
  if (_25 == 1)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  request->error_status = 0;

  <bb 38> :
  D.7769 = 0;

  <bb 39> :
  repetition_varbind_enumerator = {CLOBBER};
  vb = {CLOBBER};

  <bb 40> :
<L44>:
  return D.7769;

}


snmp_process_getnext_request (struct snmp_request * request)
{
  struct snmp_varbind vb;
  snmp_vb_enumerator_err_t err;
  err_t D.7755;

  <bb 2> :
  _1 = &request->value_buffer;
  vb.value = _1;
  goto <bb 14>; [INV]

  <bb 3> :
  _2 = &request->inbound_varbind_enumerator;
  err = snmp_vb_enumerator_get_next (_2, &vb);
  if (err == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  _3 = vb.type;
  if (_3 == 5)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _4 = vb.value_len;
  if (_4 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  snmp_process_varbind (request, &vb, 1);
  goto <bb 8>; [INV]

  <bb 7> :
  request->error_status = 5;

  <bb 8> :
  goto <bb 14>; [INV]

  <bb 9> :
  if (err == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  goto <bb 15>; [INV]

  <bb 11> :
  if (err == 2)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.7755 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 13> :
  request->error_status = 5;

  <bb 14> :
  _5 = request->error_status;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  D.7755 = 0;

  <bb 16> :
  vb = {CLOBBER};

  <bb 17> :
<L15>:
  return D.7755;

}


snmp_process_get_request (struct snmp_request * request)
{
  struct snmp_varbind vb;
  snmp_vb_enumerator_err_t err;
  err_t D.7741;

  <bb 2> :
  _1 = &request->value_buffer;
  vb.value = _1;
  goto <bb 14>; [INV]

  <bb 3> :
  _2 = &request->inbound_varbind_enumerator;
  err = snmp_vb_enumerator_get_next (_2, &vb);
  if (err == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  _3 = vb.type;
  if (_3 == 5)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _4 = vb.value_len;
  if (_4 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  snmp_process_varbind (request, &vb, 0);
  goto <bb 8>; [INV]

  <bb 7> :
  request->error_status = 5;

  <bb 8> :
  goto <bb 14>; [INV]

  <bb 9> :
  if (err == 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  goto <bb 15>; [INV]

  <bb 11> :
  if (err == 2)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.7741 = -16;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 13> :
  request->error_status = 5;

  <bb 14> :
  _5 = request->error_status;
  if (_5 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  D.7741 = 0;

  <bb 16> :
  vb = {CLOBBER};

  <bb 17> :
<L15>:
  return D.7741;

}


snmp_process_varbind (struct snmp_request * request, struct snmp_varbind * vb, u8_t get_next)
{
  s16_t len;
  struct snmp_obj_id result_oid;
  struct snmp_node_instance node_instance;
  err_t err;

  <bb 2> :
  memset (&node_instance, 0, 248);
  if (get_next != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _1 = &vb->oid.id;
  _2 = vb->oid.len;
  _3 = snmp_get_next_node_instance_from_oid (_1, _2, snmp_msg_getnext_validate_node_inst, request, &result_oid, &node_instance);
  _4 = (long int) _3;
  request->error_status = _4;
  _5 = request->error_status;
  if (_5 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _6 = &vb->oid;
  _7 = result_oid.len;
  snmp_oid_assign (_6, &result_oid.id, _7);

  <bb 5> :
  result_oid = {CLOBBER};
  goto <bb 10>; [INV]

  <bb 6> :
  _8 = &vb->oid.id;
  _9 = vb->oid.len;
  _10 = snmp_get_node_instance_from_oid (_8, _9, &node_instance);
  _11 = (long int) _10;
  request->error_status = _11;
  _12 = request->error_status;
  if (_12 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  _13 = snmp_msg_getnext_validate_node_inst (&node_instance, request);
  _14 = (long int) _13;
  request->error_status = _14;
  _15 = request->error_status;
  if (_15 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  _16 = node_instance.release_instance;
  if (_16 != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _17 = node_instance.release_instance;
  _17 (&node_instance);

  <bb 10> :
  _18 = request->error_status;
  if (_18 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 11> :
  _19 = request->error_status;
  if (_19 > 239)
    goto <bb 12>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 12> :
  _20 = request->version;
  if (_20 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _21 = request->version;
  if (_21 == 3)
    goto <bb 14>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 14> :
  _22 = request->error_status;
  _23 = (signed char) _22;
  _24 = _23 & 15;
  _25 = _24 | -128;
  _26 = (unsigned char) _25;
  vb->type = _26;
  vb->value_len = 0;
  _27 = &request->outbound_pbuf_stream;
  err = snmp_append_outbound_varbind (_27, vb);
  if (err == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  request->error_status = 0;
  goto <bb 30>; [INV]

  <bb 16> :
  if (err == -2)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  request->error_status = 1;
  goto <bb 30>; [INV]

  <bb 18> :
  request->error_status = 5;
  goto <bb 30>; [INV]

  <bb 19> :
  request->error_status = 5;
  goto <bb 30>; [INV]

  <bb 20> :
  _28 = node_instance.get_value;
  _29 = vb->value;
  len = _28 (&node_instance, _29);
  if (len >= 0)
    goto <bb 21>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 21> :
  len.1_30 = (short unsigned int) len;
  vb->value_len = len.1_30;
  _31 = node_instance.asn1_type;
  vb->type = _31;
  _32 = vb->value_len;
  _33 = (unsigned int) _32;
  _34 = _33 & 4294950911;
  if (_34 > 200)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 22>; [INV]

  <bb 23> :
  _35 = &request->outbound_pbuf_stream;
  err = snmp_append_outbound_varbind (_35, vb);
  if (err == -2)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 24> :
  request->error_status = 1;
  goto <bb 28>; [INV]

  <bb 25> :
  if (err != 0)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 26> :
  request->error_status = 5;
  goto <bb 28>; [INV]

  <bb 27> :
  request->error_status = 5;

  <bb 28> :
  _36 = node_instance.release_instance;
  if (_36 != 0B)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  _37 = node_instance.release_instance;
  _37 (&node_instance);

  <bb 30> :
  node_instance = {CLOBBER};
  return;

}


snmp_msg_getnext_validate_node_inst (struct snmp_node_instance * node_instance, void * validate_arg)
{
  u8_t D.7686;

  <bb 2> :
  _1 = node_instance->access;
  _2 = _1 & 1;
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _3 = node_instance->get_value;
  if (_3 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.7686 = 241;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 5> :
  _4 = node_instance->asn1_type;
  if (_4 == 70)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 6> :
  _5 = MEM[(struct snmp_request *)validate_arg].version;
  if (_5 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.7686 = 241;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]

  <bb 8> :
  D.7686 = 0;

  <bb 9> :
<L7>:
  return D.7686;

}


snmp_receive (void * handle, struct pbuf * p, const struct ip_addr_t * source_ip, u16_t port)
{
  struct snmp_request request;
  err_t err;

  <bb 2> :
  memset (&request, 0, 292);
  request.handle = handle;
  request.source_ip = source_ip;
  request.source_port = port;
  request.inbound_pbuf = p;
  _1 = snmp_stats.inpkts;
  _2 = _1 + 1;
  snmp_stats.inpkts = _2;
  err = snmp_parse_inbound_frame (&request);
  if (err == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 3> :
  err = snmp_prepare_outbound_frame (&request);
  if (err == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 4> :
  _3 = request.error_status;
  if (_3 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 5> :
  _4 = request.request_type;
  if (_4 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  err = snmp_process_get_request (&request);
  goto <bb 13>; [INV]

  <bb 7> :
  _5 = request.request_type;
  if (_5 == 1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  err = snmp_process_getnext_request (&request);
  goto <bb 13>; [INV]

  <bb 9> :
  _6 = request.request_type;
  if (_6 == 5)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  err = snmp_process_getbulk_request (&request);
  goto <bb 13>; [INV]

  <bb 11> :
  _7 = request.request_type;
  if (_7 == 3)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  err = snmp_process_set_request (&request);

  <bb 13> :
  if (err == 0)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 14> :
  err = snmp_complete_outbound_frame (&request);
  if (err == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 15> :
  _8 = request.handle;
  _9 = request.outbound_pbuf;
  _10 = request.source_ip;
  _11 = request.source_port;
  err = snmp_sendto (_8, _9, _10, _11);
  _12 = request.request_type;
  if (_12 == 3)
    goto <bb 16>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 16> :
  _13 = request.error_status;
  if (_13 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  snmp_write_callback.0_14 = snmp_write_callback;
  if (snmp_write_callback.0_14 != 0B)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  snmp_execute_write_callbacks (&request);

  <bb 19> :
  _15 = request.outbound_pbuf;
  if (_15 != 0B)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  _16 = request.outbound_pbuf;
  pbuf_free (_16);

  <bb 21> :
  request = {CLOBBER};
  return;

}


snmp_set_write_callback (void (*snmp_write_callback_fct) (const u32_t *, u8_t, void *) write_callback, void * callback_arg)
{
  <bb 2> :
  snmp_write_callback = write_callback;
  snmp_write_callback_arg = callback_arg;
  return;

}


snmp_set_community_trap (const char * const community)
{
  <bb 2> :
  _1 = strlen (community);
  if (_1 > 8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  snmp_community_trap = community;
  return;

}


snmp_set_community_write (const char * const community)
{
  <bb 2> :
  if (community == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  _1 = strlen (community);
  if (_1 > 8)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 5>; [INV]

  <bb 6> :
  snmp_community_write = community;
  return;

}


snmp_get_community_trap ()
{
  const char * D.7646;

  <bb 2> :
  D.7646 = snmp_community_trap;

  <bb 3> :
<L0>:
  return D.7646;

}


snmp_get_community_write ()
{
  const char * D.7644;

  <bb 2> :
  D.7644 = snmp_community_write;

  <bb 3> :
<L0>:
  return D.7644;

}


snmp_set_community (const char * const community)
{
  <bb 2> :
  _1 = strlen (community);
  if (_1 > 8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __asm__ __volatile__("BKPT #0
	");
  goto <bb 3>; [INV]

  <bb 4> :
  snmp_community = community;
  return;

}


snmp_get_community ()
{
  const char * D.7640;

  <bb 2> :
  D.7640 = snmp_community;

  <bb 3> :
<L0>:
  return D.7640;

}


