snmp_set_value (const struct snmp_scalar_array_node_def * node, u16_t len, void * value)
{
  s32_t * sint_ptr;
  snmp_err_t D.6966;

  <bb 2> :
  _1 = node->oid;
  if (_1 == 30)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  sint_ptr = value;
  _2 = *sint_ptr;
  if (_2 == 2)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  snmp_set_auth_traps_enabled (0);
  goto <bb 6>; [INV]

  <bb 5> :
  snmp_set_auth_traps_enabled (1);

  <bb 6> :
  D.6966 = 0;

  <bb 7> :
<L5>:
  return D.6966;

}


snmp_set_test (const struct snmp_scalar_array_node_def * node, u16_t len, void * value)
{
  s32_t * sint_ptr;
  snmp_err_t ret;
  snmp_err_t D.6959;

  <bb 2> :
  ret = 10;
  _1 = node->oid;
  if (_1 == 30)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  sint_ptr = value;
  _2 = *sint_ptr;
  if (_2 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  _3 = *sint_ptr;
  if (_3 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  ret = 0;

  <bb 6> :
  D.6959 = ret;

  <bb 7> :
<L5>:
  return D.6959;

}


snmp_get_value (const struct snmp_scalar_array_node_def * node, void * value)
{
  u32_t * uint_ptr;
  s16_t D.6952;

  <bb 2> :
  uint_ptr = value;
  _1 = node->oid;
  switch (_1) <default: <L33> [INV], case 1: <L0> [INV], case 2: <L1> [INV], case 3: <L2> [INV], case 4: <L3> [INV], case 5: <L4> [INV], case 6: <L5> [INV], case 8: <L6> [INV], case 9: <L7> [INV], case 10: <L8> [INV], case 11: <L9> [INV], case 12: <L10> [INV], case 13: <L11> [INV], case 14: <L12> [INV], case 15: <L13> [INV], case 16: <L14> [INV], case 17: <L15> [INV], case 18: <L16> [INV], case 19: <L17> [INV], case 20: <L18> [INV], case 21: <L19> [INV], case 22: <L20> [INV], case 24: <L21> [INV], case 25: <L22> [INV], case 26: <L23> [INV], case 27: <L24> [INV], case 28: <L25> [INV], case 29: <L26> [INV], case 30: <L27> [INV], case 31: <L31> [INV], case 32: <L32> [INV]>

  <bb 3> :
<L0>:
  _2 = snmp_stats.inpkts;
  *uint_ptr = _2;
  goto <bb 37>; [INV]

  <bb 4> :
<L1>:
  _3 = snmp_stats.outpkts;
  *uint_ptr = _3;
  goto <bb 37>; [INV]

  <bb 5> :
<L2>:
  _4 = snmp_stats.inbadversions;
  *uint_ptr = _4;
  goto <bb 37>; [INV]

  <bb 6> :
<L3>:
  _5 = snmp_stats.inbadcommunitynames;
  *uint_ptr = _5;
  goto <bb 37>; [INV]

  <bb 7> :
<L4>:
  _6 = snmp_stats.inbadcommunityuses;
  *uint_ptr = _6;
  goto <bb 37>; [INV]

  <bb 8> :
<L5>:
  _7 = snmp_stats.inasnparseerrs;
  *uint_ptr = _7;
  goto <bb 37>; [INV]

  <bb 9> :
<L6>:
  _8 = snmp_stats.intoobigs;
  *uint_ptr = _8;
  goto <bb 37>; [INV]

  <bb 10> :
<L7>:
  _9 = snmp_stats.innosuchnames;
  *uint_ptr = _9;
  goto <bb 37>; [INV]

  <bb 11> :
<L8>:
  _10 = snmp_stats.inbadvalues;
  *uint_ptr = _10;
  goto <bb 37>; [INV]

  <bb 12> :
<L9>:
  _11 = snmp_stats.inreadonlys;
  *uint_ptr = _11;
  goto <bb 37>; [INV]

  <bb 13> :
<L10>:
  _12 = snmp_stats.ingenerrs;
  *uint_ptr = _12;
  goto <bb 37>; [INV]

  <bb 14> :
<L11>:
  _13 = snmp_stats.intotalreqvars;
  *uint_ptr = _13;
  goto <bb 37>; [INV]

  <bb 15> :
<L12>:
  _14 = snmp_stats.intotalsetvars;
  *uint_ptr = _14;
  goto <bb 37>; [INV]

  <bb 16> :
<L13>:
  _15 = snmp_stats.ingetrequests;
  *uint_ptr = _15;
  goto <bb 37>; [INV]

  <bb 17> :
<L14>:
  _16 = snmp_stats.ingetnexts;
  *uint_ptr = _16;
  goto <bb 37>; [INV]

  <bb 18> :
<L15>:
  _17 = snmp_stats.insetrequests;
  *uint_ptr = _17;
  goto <bb 37>; [INV]

  <bb 19> :
<L16>:
  _18 = snmp_stats.ingetresponses;
  *uint_ptr = _18;
  goto <bb 37>; [INV]

  <bb 20> :
<L17>:
  _19 = snmp_stats.intraps;
  *uint_ptr = _19;
  goto <bb 37>; [INV]

  <bb 21> :
<L18>:
  _20 = snmp_stats.outtoobigs;
  *uint_ptr = _20;
  goto <bb 37>; [INV]

  <bb 22> :
<L19>:
  _21 = snmp_stats.outnosuchnames;
  *uint_ptr = _21;
  goto <bb 37>; [INV]

  <bb 23> :
<L20>:
  _22 = snmp_stats.outbadvalues;
  *uint_ptr = _22;
  goto <bb 37>; [INV]

  <bb 24> :
<L21>:
  _23 = snmp_stats.outgenerrs;
  *uint_ptr = _23;
  goto <bb 37>; [INV]

  <bb 25> :
<L22>:
  _24 = snmp_stats.outgetrequests;
  *uint_ptr = _24;
  goto <bb 37>; [INV]

  <bb 26> :
<L23>:
  _25 = snmp_stats.outgetnexts;
  *uint_ptr = _25;
  goto <bb 37>; [INV]

  <bb 27> :
<L24>:
  _26 = snmp_stats.outsetrequests;
  *uint_ptr = _26;
  goto <bb 37>; [INV]

  <bb 28> :
<L25>:
  _27 = snmp_stats.outgetresponses;
  *uint_ptr = _27;
  goto <bb 37>; [INV]

  <bb 29> :
<L26>:
  _28 = snmp_stats.outtraps;
  *uint_ptr = _28;
  goto <bb 37>; [INV]

  <bb 30> :
<L27>:
  _29 = snmp_get_auth_traps_enabled ();
  if (_29 == 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  *uint_ptr = 2;
  goto <bb 33>; [INV]

  <bb 32> :
  *uint_ptr = 1;

  <bb 33> :
  goto <bb 37>; [INV]

  <bb 34> :
<L31>:
  *uint_ptr = 0;
  goto <bb 37>; [INV]

  <bb 35> :
<L32>:
  *uint_ptr = 0;
  goto <bb 37>; [INV]

  <bb 36> :
<L33>:
  D.6952 = 0;
  goto <bb 38>; [INV]

  <bb 37> :
  D.6952 = 4;

  <bb 38> :
<L35>:
  return D.6952;

}


