IPA summary for Clock_Ip_SetExternalSignalFrequency/153 is missing.
IPA summary for Clock_Ip_GetFreq/152 is missing.
IPA summary for Clock_Ip_SetExternalOscillatorFrequency/151 is missing.
IPA summary for Clock_Ip_PLL_VCO/150 is missing.
IPA summary for Clock_Ip_Get_WKPU0_CLK_Frequency/149 is missing.
IPA summary for Clock_Ip_Get_TSENSE0_CLK_Frequency/148 is missing.
IPA summary for Clock_Ip_Get_TRGMUX0_CLK_Frequency/147 is missing.
IPA summary for Clock_Ip_Get_TRACE_CLK_Frequency/146 is missing.
IPA summary for Clock_Ip_Get_TEMPSENSE_CLK_Frequency/145 is missing.
IPA summary for Clock_Ip_Get_SWT0_CLK_Frequency/144 is missing.
IPA summary for Clock_Ip_Get_STM1_CLK_Frequency/143 is missing.
IPA summary for Clock_Ip_Get_STMB_CLK_Frequency/142 is missing.
IPA summary for Clock_Ip_Get_STM0_CLK_Frequency/141 is missing.
IPA summary for Clock_Ip_Get_STMA_CLK_Frequency/140 is missing.
IPA summary for Clock_Ip_Get_STCU0_CLK_Frequency/139 is missing.
IPA summary for Clock_Ip_Get_SIUL2_CLK_Frequency/138 is missing.
IPA summary for Clock_Ip_Get_SEMA42_CLK_Frequency/137 is missing.
IPA summary for Clock_Ip_Get_SAI1_CLK_Frequency/136 is missing.
IPA summary for Clock_Ip_Get_SAI0_CLK_Frequency/135 is missing.
IPA summary for Clock_Ip_Get_RTC0_CLK_Frequency/134 is missing.
IPA summary for Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall/133 is missing.
IPA summary for Clock_Ip_Get_RTC_CLK_Frequency/132 is missing.
IPA summary for Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/131 is missing.
IPA summary for Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency/130 is missing.
IPA summary for Clock_Ip_Get_QSPI0_RAM_CLK_Frequency/129 is missing.
IPA summary for Clock_Ip_Get_QSPI0_CLK_Frequency/128 is missing.
IPA summary for Clock_Ip_Get_PIT2_CLK_Frequency/127 is missing.
IPA summary for Clock_Ip_Get_PIT1_CLK_Frequency/126 is missing.
IPA summary for Clock_Ip_Get_PIT0_CLK_Frequency/125 is missing.
IPA summary for Clock_Ip_Get_MSCM_CLK_Frequency/124 is missing.
IPA summary for Clock_Ip_Get_LPUART15_CLK_Frequency/123 is missing.
IPA summary for Clock_Ip_Get_LPUART14_CLK_Frequency/122 is missing.
IPA summary for Clock_Ip_Get_LPUART13_CLK_Frequency/121 is missing.
IPA summary for Clock_Ip_Get_LPUART12_CLK_Frequency/120 is missing.
IPA summary for Clock_Ip_Get_LPUART11_CLK_Frequency/119 is missing.
IPA summary for Clock_Ip_Get_LPUART10_CLK_Frequency/118 is missing.
IPA summary for Clock_Ip_Get_LPUART9_CLK_Frequency/117 is missing.
IPA summary for Clock_Ip_Get_LPUART8_CLK_Frequency/116 is missing.
IPA summary for Clock_Ip_Get_LPUART7_CLK_Frequency/115 is missing.
IPA summary for Clock_Ip_Get_LPUART6_CLK_Frequency/114 is missing.
IPA summary for Clock_Ip_Get_LPUART5_CLK_Frequency/113 is missing.
IPA summary for Clock_Ip_Get_LPUART4_CLK_Frequency/112 is missing.
IPA summary for Clock_Ip_Get_LPUART3_CLK_Frequency/111 is missing.
IPA summary for Clock_Ip_Get_LPUART2_CLK_Frequency/110 is missing.
IPA summary for Clock_Ip_Get_LPUART1_CLK_Frequency/109 is missing.
IPA summary for Clock_Ip_Get_LPUART0_CLK_Frequency/108 is missing.
IPA summary for Clock_Ip_Get_LPSPI5_CLK_Frequency/107 is missing.
IPA summary for Clock_Ip_Get_LPSPI4_CLK_Frequency/106 is missing.
IPA summary for Clock_Ip_Get_LPSPI3_CLK_Frequency/105 is missing.
IPA summary for Clock_Ip_Get_LPSPI2_CLK_Frequency/104 is missing.
IPA summary for Clock_Ip_Get_LPSPI1_CLK_Frequency/103 is missing.
IPA summary for Clock_Ip_Get_LPSPI0_CLK_Frequency/102 is missing.
IPA summary for Clock_Ip_Get_LPI2C1_CLK_Frequency/101 is missing.
IPA summary for Clock_Ip_Get_LPI2C0_CLK_Frequency/100 is missing.
IPA summary for Clock_Ip_Get_LCU1_CLK_Frequency/99 is missing.
IPA summary for Clock_Ip_Get_LCU0_CLK_Frequency/98 is missing.
IPA summary for Clock_Ip_Get_INTM_CLK_Frequency/97 is missing.
IPA summary for Clock_Ip_Get_FLEXIO0_CLK_Frequency/96 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN5_CLK_Frequency/95 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN4_CLK_Frequency/94 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN3_CLK_Frequency/93 is missing.
IPA summary for Clock_Ip_Get_FLEXCANB_CLK_Frequency/92 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN2_CLK_Frequency/91 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN1_CLK_Frequency/90 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN0_CLK_Frequency/89 is missing.
IPA summary for Clock_Ip_Get_FLEXCANA_CLK_Frequency/88 is missing.
IPA summary for Clock_Ip_Get_ERM0_CLK_Frequency/87 is missing.
IPA summary for Clock_Ip_Get_EMIOS2_CLK_Frequency/86 is missing.
IPA summary for Clock_Ip_Get_EMIOS1_CLK_Frequency/85 is missing.
IPA summary for Clock_Ip_Get_EMIOS0_CLK_Frequency/84 is missing.
IPA summary for Clock_Ip_Get_EMAC0_TX_CLK_Frequency/83 is missing.
IPA summary for Clock_Ip_Get_EMAC_TX_CLK_Frequency/82 is missing.
IPA summary for Clock_Ip_Get_EMAC0_TS_CLK_Frequency/81 is missing.
IPA summary for Clock_Ip_Get_EMAC_TS_CLK_Frequency/80 is missing.
IPA summary for Clock_Ip_Get_EMAC0_RX_CLK_Frequency/79 is missing.
IPA summary for Clock_Ip_Get_EMAC_RX_CLK_Frequency/78 is missing.
IPA summary for Clock_Ip_Get_EIM_CLK_Frequency/77 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency/76 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency/75 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency/74 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency/73 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency/72 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency/71 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency/70 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency/69 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency/68 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency/67 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency/66 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency/65 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency/64 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency/63 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency/62 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency/61 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency/60 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency/59 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency/58 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency/57 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency/56 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency/55 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency/54 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency/53 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency/52 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency/51 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency/50 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency/49 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency/48 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency/47 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency/46 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency/45 is missing.
IPA summary for Clock_Ip_Get_EDMA0_CLK_Frequency/44 is missing.
IPA summary for Clock_Ip_Get_DMAMUX1_CLK_Frequency/43 is missing.
IPA summary for Clock_Ip_Get_DMAMUX0_CLK_Frequency/42 is missing.
IPA summary for Clock_Ip_Get_CRC0_CLK_Frequency/41 is missing.
IPA summary for Clock_Ip_Get_CMP2_CLK_Frequency/40 is missing.
IPA summary for Clock_Ip_Get_CMP1_CLK_Frequency/39 is missing.
IPA summary for Clock_Ip_Get_CMP0_CLK_Frequency/38 is missing.
IPA summary for Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency/37 is missing.
IPA summary for Clock_Ip_Get_BCTU0_CLK_Frequency/36 is missing.
IPA summary for Clock_Ip_Get_ADC2_CLK_Frequency/35 is missing.
IPA summary for Clock_Ip_Get_ADC1_CLK_Frequency/34 is missing.
IPA summary for Clock_Ip_Get_ADC0_CLK_Frequency/33 is missing.
IPA summary for Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency/32 is missing.
IPA summary for Clock_Ip_Get_QSPI_MEM_CLK_Frequency/31 is missing.
IPA summary for Clock_Ip_Get_LBIST_CLK_Frequency/30 is missing.
IPA summary for Clock_Ip_Get_DCM_CLK_Frequency/29 is missing.
IPA summary for Clock_Ip_Get_HSE_CLK_Frequency/28 is missing.
IPA summary for Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 is missing.
IPA summary for Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 is missing.
IPA summary for Clock_Ip_Get_CORE_CLK_Frequency/25 is missing.
IPA summary for Clock_Ip_Get_SCS_CLK_Frequency/24 is missing.
IPA summary for Clock_Ip_Get_emac_mii_rmii_tx_Frequency/23 is missing.
IPA summary for Clock_Ip_Get_emac_mii_rx_Frequency/22 is missing.
IPA summary for Clock_Ip_Get_PLL_PHI1_Frequency/21 is missing.
IPA summary for Clock_Ip_Get_PLL_PHI0_Frequency/20 is missing.
IPA summary for Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/19 is missing.
IPA summary for Clock_Ip_Get_PLL_CLK_Frequency/18 is missing.
IPA summary for Clock_Ip_Get_SXOSC_CLK_Frequency/17 is missing.
IPA summary for Clock_Ip_Get_FXOSC_CLK_Frequency/16 is missing.
IPA summary for Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency/15 is missing.
IPA summary for Clock_Ip_Get_SIRC_CLK_Frequency/14 is missing.
IPA summary for Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency/13 is missing.
IPA summary for Clock_Ip_Get_FIRC_CLK_Frequency/12 is missing.
IPA summary for Clock_Ip_Get_Zero_Frequency/11 is missing.

Flattening functions:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
node context cache: 0 hits, 0 misses, 0 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Why inlining failed?
function not considered for inlining              :      122 calls, 122.000000 freq, 0 count
IPA summary for Clock_Ip_SetExternalSignalFrequency/153 is missing.
IPA summary for Clock_Ip_GetFreq/152 is missing.
IPA summary for Clock_Ip_SetExternalOscillatorFrequency/151 is missing.
IPA summary for Clock_Ip_PLL_VCO/150 is missing.
IPA summary for Clock_Ip_Get_WKPU0_CLK_Frequency/149 is missing.
IPA summary for Clock_Ip_Get_TSENSE0_CLK_Frequency/148 is missing.
IPA summary for Clock_Ip_Get_TRGMUX0_CLK_Frequency/147 is missing.
IPA summary for Clock_Ip_Get_TRACE_CLK_Frequency/146 is missing.
IPA summary for Clock_Ip_Get_TEMPSENSE_CLK_Frequency/145 is missing.
IPA summary for Clock_Ip_Get_SWT0_CLK_Frequency/144 is missing.
IPA summary for Clock_Ip_Get_STM1_CLK_Frequency/143 is missing.
IPA summary for Clock_Ip_Get_STMB_CLK_Frequency/142 is missing.
IPA summary for Clock_Ip_Get_STM0_CLK_Frequency/141 is missing.
IPA summary for Clock_Ip_Get_STMA_CLK_Frequency/140 is missing.
IPA summary for Clock_Ip_Get_STCU0_CLK_Frequency/139 is missing.
IPA summary for Clock_Ip_Get_SIUL2_CLK_Frequency/138 is missing.
IPA summary for Clock_Ip_Get_SEMA42_CLK_Frequency/137 is missing.
IPA summary for Clock_Ip_Get_SAI1_CLK_Frequency/136 is missing.
IPA summary for Clock_Ip_Get_SAI0_CLK_Frequency/135 is missing.
IPA summary for Clock_Ip_Get_RTC0_CLK_Frequency/134 is missing.
IPA summary for Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall/133 is missing.
IPA summary for Clock_Ip_Get_RTC_CLK_Frequency/132 is missing.
IPA summary for Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/131 is missing.
IPA summary for Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency/130 is missing.
IPA summary for Clock_Ip_Get_QSPI0_RAM_CLK_Frequency/129 is missing.
IPA summary for Clock_Ip_Get_QSPI0_CLK_Frequency/128 is missing.
IPA summary for Clock_Ip_Get_PIT2_CLK_Frequency/127 is missing.
IPA summary for Clock_Ip_Get_PIT1_CLK_Frequency/126 is missing.
IPA summary for Clock_Ip_Get_PIT0_CLK_Frequency/125 is missing.
IPA summary for Clock_Ip_Get_MSCM_CLK_Frequency/124 is missing.
IPA summary for Clock_Ip_Get_LPUART15_CLK_Frequency/123 is missing.
IPA summary for Clock_Ip_Get_LPUART14_CLK_Frequency/122 is missing.
IPA summary for Clock_Ip_Get_LPUART13_CLK_Frequency/121 is missing.
IPA summary for Clock_Ip_Get_LPUART12_CLK_Frequency/120 is missing.
IPA summary for Clock_Ip_Get_LPUART11_CLK_Frequency/119 is missing.
IPA summary for Clock_Ip_Get_LPUART10_CLK_Frequency/118 is missing.
IPA summary for Clock_Ip_Get_LPUART9_CLK_Frequency/117 is missing.
IPA summary for Clock_Ip_Get_LPUART8_CLK_Frequency/116 is missing.
IPA summary for Clock_Ip_Get_LPUART7_CLK_Frequency/115 is missing.
IPA summary for Clock_Ip_Get_LPUART6_CLK_Frequency/114 is missing.
IPA summary for Clock_Ip_Get_LPUART5_CLK_Frequency/113 is missing.
IPA summary for Clock_Ip_Get_LPUART4_CLK_Frequency/112 is missing.
IPA summary for Clock_Ip_Get_LPUART3_CLK_Frequency/111 is missing.
IPA summary for Clock_Ip_Get_LPUART2_CLK_Frequency/110 is missing.
IPA summary for Clock_Ip_Get_LPUART1_CLK_Frequency/109 is missing.
IPA summary for Clock_Ip_Get_LPUART0_CLK_Frequency/108 is missing.
IPA summary for Clock_Ip_Get_LPSPI5_CLK_Frequency/107 is missing.
IPA summary for Clock_Ip_Get_LPSPI4_CLK_Frequency/106 is missing.
IPA summary for Clock_Ip_Get_LPSPI3_CLK_Frequency/105 is missing.
IPA summary for Clock_Ip_Get_LPSPI2_CLK_Frequency/104 is missing.
IPA summary for Clock_Ip_Get_LPSPI1_CLK_Frequency/103 is missing.
IPA summary for Clock_Ip_Get_LPSPI0_CLK_Frequency/102 is missing.
IPA summary for Clock_Ip_Get_LPI2C1_CLK_Frequency/101 is missing.
IPA summary for Clock_Ip_Get_LPI2C0_CLK_Frequency/100 is missing.
IPA summary for Clock_Ip_Get_LCU1_CLK_Frequency/99 is missing.
IPA summary for Clock_Ip_Get_LCU0_CLK_Frequency/98 is missing.
IPA summary for Clock_Ip_Get_INTM_CLK_Frequency/97 is missing.
IPA summary for Clock_Ip_Get_FLEXIO0_CLK_Frequency/96 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN5_CLK_Frequency/95 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN4_CLK_Frequency/94 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN3_CLK_Frequency/93 is missing.
IPA summary for Clock_Ip_Get_FLEXCANB_CLK_Frequency/92 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN2_CLK_Frequency/91 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN1_CLK_Frequency/90 is missing.
IPA summary for Clock_Ip_Get_FLEXCAN0_CLK_Frequency/89 is missing.
IPA summary for Clock_Ip_Get_FLEXCANA_CLK_Frequency/88 is missing.
IPA summary for Clock_Ip_Get_ERM0_CLK_Frequency/87 is missing.
IPA summary for Clock_Ip_Get_EMIOS2_CLK_Frequency/86 is missing.
IPA summary for Clock_Ip_Get_EMIOS1_CLK_Frequency/85 is missing.
IPA summary for Clock_Ip_Get_EMIOS0_CLK_Frequency/84 is missing.
IPA summary for Clock_Ip_Get_EMAC0_TX_CLK_Frequency/83 is missing.
IPA summary for Clock_Ip_Get_EMAC_TX_CLK_Frequency/82 is missing.
IPA summary for Clock_Ip_Get_EMAC0_TS_CLK_Frequency/81 is missing.
IPA summary for Clock_Ip_Get_EMAC_TS_CLK_Frequency/80 is missing.
IPA summary for Clock_Ip_Get_EMAC0_RX_CLK_Frequency/79 is missing.
IPA summary for Clock_Ip_Get_EMAC_RX_CLK_Frequency/78 is missing.
IPA summary for Clock_Ip_Get_EIM_CLK_Frequency/77 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency/76 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency/75 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency/74 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency/73 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency/72 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency/71 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency/70 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency/69 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency/68 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency/67 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency/66 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency/65 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency/64 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency/63 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency/62 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency/61 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency/60 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency/59 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency/58 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency/57 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency/56 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency/55 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency/54 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency/53 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency/52 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency/51 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency/50 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency/49 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency/48 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency/47 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency/46 is missing.
IPA summary for Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency/45 is missing.
IPA summary for Clock_Ip_Get_EDMA0_CLK_Frequency/44 is missing.
IPA summary for Clock_Ip_Get_DMAMUX1_CLK_Frequency/43 is missing.
IPA summary for Clock_Ip_Get_DMAMUX0_CLK_Frequency/42 is missing.
IPA summary for Clock_Ip_Get_CRC0_CLK_Frequency/41 is missing.
IPA summary for Clock_Ip_Get_CMP2_CLK_Frequency/40 is missing.
IPA summary for Clock_Ip_Get_CMP1_CLK_Frequency/39 is missing.
IPA summary for Clock_Ip_Get_CMP0_CLK_Frequency/38 is missing.
IPA summary for Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency/37 is missing.
IPA summary for Clock_Ip_Get_BCTU0_CLK_Frequency/36 is missing.
IPA summary for Clock_Ip_Get_ADC2_CLK_Frequency/35 is missing.
IPA summary for Clock_Ip_Get_ADC1_CLK_Frequency/34 is missing.
IPA summary for Clock_Ip_Get_ADC0_CLK_Frequency/33 is missing.
IPA summary for Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency/32 is missing.
IPA summary for Clock_Ip_Get_QSPI_MEM_CLK_Frequency/31 is missing.
IPA summary for Clock_Ip_Get_LBIST_CLK_Frequency/30 is missing.
IPA summary for Clock_Ip_Get_DCM_CLK_Frequency/29 is missing.
IPA summary for Clock_Ip_Get_HSE_CLK_Frequency/28 is missing.
IPA summary for Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 is missing.
IPA summary for Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 is missing.
IPA summary for Clock_Ip_Get_CORE_CLK_Frequency/25 is missing.
IPA summary for Clock_Ip_Get_SCS_CLK_Frequency/24 is missing.
IPA summary for Clock_Ip_Get_emac_mii_rmii_tx_Frequency/23 is missing.
IPA summary for Clock_Ip_Get_emac_mii_rx_Frequency/22 is missing.
IPA summary for Clock_Ip_Get_PLL_PHI1_Frequency/21 is missing.
IPA summary for Clock_Ip_Get_PLL_PHI0_Frequency/20 is missing.
IPA summary for Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/19 is missing.
IPA summary for Clock_Ip_Get_PLL_CLK_Frequency/18 is missing.
IPA summary for Clock_Ip_Get_SXOSC_CLK_Frequency/17 is missing.
IPA summary for Clock_Ip_Get_FXOSC_CLK_Frequency/16 is missing.
IPA summary for Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency/15 is missing.
IPA summary for Clock_Ip_Get_SIRC_CLK_Frequency/14 is missing.
IPA summary for Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency/13 is missing.
IPA summary for Clock_Ip_Get_FIRC_CLK_Frequency/12 is missing.
IPA summary for Clock_Ip_Get_Zero_Frequency/11 is missing.
Symbol table:

Clock_Ip_SetExternalSignalFrequency/153 (Clock_Ip_SetExternalSignalFrequency) @06fb7b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_axExtSignalFreqEntries/6 (read) Clock_Ip_axExtSignalFreqEntries/6 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_GetFreq/152 (Clock_Ip_GetFreq) @06fb7620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_apfFreqTable/2 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_SetExternalOscillatorFrequency/151 (Clock_Ip_SetExternalOscillatorFrequency) @06fb70e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_u32fxosc/7 (write) Clock_Ip_u32sxosc/8 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_PLL_VCO/150 (Clock_Ip_PLL_VCO) @06fb7d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_PLL_CLK_Frequency/18 
  Calls: Clock_Ip_Get_FXOSC_CLK_Frequency/16 
Clock_Ip_Get_WKPU0_CLK_Frequency/149 (Clock_Ip_Get_WKPU0_CLK_Frequency) @06fb7a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_TSENSE0_CLK_Frequency/148 (Clock_Ip_Get_TSENSE0_CLK_Frequency) @06fb77e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_TRGMUX0_CLK_Frequency/147 (Clock_Ip_Get_TRGMUX0_CLK_Frequency) @06fb7540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_TRACE_CLK_Frequency/146 (Clock_Ip_Get_TRACE_CLK_Frequency) @06fb72a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/0 (read) Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_TEMPSENSE_CLK_Frequency/145 (Clock_Ip_Get_TEMPSENSE_CLK_Frequency) @06fb7000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_SWT0_CLK_Frequency/144 (Clock_Ip_Get_SWT0_CLK_Frequency) @06f30b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_SIRC_CLK_Frequency/14 
Clock_Ip_Get_STM1_CLK_Frequency/143 (Clock_Ip_Get_STM1_CLK_Frequency) @06f30620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_STMB_CLK_Frequency/142 
Clock_Ip_Get_STMB_CLK_Frequency/142 (Clock_Ip_Get_STMB_CLK_Frequency) @06f300e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/0 (read) Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_STM1_CLK_Frequency/143 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_STM0_CLK_Frequency/141 (Clock_Ip_Get_STM0_CLK_Frequency) @06f30d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_STMA_CLK_Frequency/140 
Clock_Ip_Get_STMA_CLK_Frequency/140 (Clock_Ip_Get_STMA_CLK_Frequency) @06f30a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/0 (read) Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_STM0_CLK_Frequency/141 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_STCU0_CLK_Frequency/139 (Clock_Ip_Get_STCU0_CLK_Frequency) @06f307e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_SIUL2_CLK_Frequency/138 (Clock_Ip_Get_SIUL2_CLK_Frequency) @06f30540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_SEMA42_CLK_Frequency/137 (Clock_Ip_Get_SEMA42_CLK_Frequency) @06f302a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 
Clock_Ip_Get_SAI1_CLK_Frequency/136 (Clock_Ip_Get_SAI1_CLK_Frequency) @06f30000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_SAI0_CLK_Frequency/135 (Clock_Ip_Get_SAI0_CLK_Frequency) @06f2cb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_RTC0_CLK_Frequency/134 (Clock_Ip_Get_RTC0_CLK_Frequency) @06f2c620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_RTC_CLK_Frequency/132 
Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall/133 (Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall) @06f2c0e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_apfFreqTableRTC_CLK/1 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_RTC_CLK_Frequency/132 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_RTC_CLK_Frequency/132 (Clock_Ip_Get_RTC_CLK_Frequency) @06f2cd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_RTC0_CLK_Frequency/134 
  Calls: Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall/133 
Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/131 (Clock_Ip_Get_QSPI_SFCK_CLK_Frequency) @06f2ca80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/0 (read) Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_QSPI0_CLK_Frequency/128 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency/130 (Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency) @06f2c7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_QSPI_MEM_CLK_Frequency/31 
Clock_Ip_Get_QSPI0_RAM_CLK_Frequency/129 (Clock_Ip_Get_QSPI0_RAM_CLK_Frequency) @06f2c540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_QSPI_MEM_CLK_Frequency/31 
Clock_Ip_Get_QSPI0_CLK_Frequency/128 (Clock_Ip_Get_QSPI0_CLK_Frequency) @06f2c2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/131 
Clock_Ip_Get_PIT2_CLK_Frequency/127 (Clock_Ip_Get_PIT2_CLK_Frequency) @06f2c000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_PIT1_CLK_Frequency/126 (Clock_Ip_Get_PIT1_CLK_Frequency) @06f24b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_PIT0_CLK_Frequency/125 (Clock_Ip_Get_PIT0_CLK_Frequency) @06f24620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_MSCM_CLK_Frequency/124 (Clock_Ip_Get_MSCM_CLK_Frequency) @06f240e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 
Clock_Ip_Get_LPUART15_CLK_Frequency/123 (Clock_Ip_Get_LPUART15_CLK_Frequency) @06f24d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART14_CLK_Frequency/122 (Clock_Ip_Get_LPUART14_CLK_Frequency) @06f24a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART13_CLK_Frequency/121 (Clock_Ip_Get_LPUART13_CLK_Frequency) @06f247e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART12_CLK_Frequency/120 (Clock_Ip_Get_LPUART12_CLK_Frequency) @06f24540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART11_CLK_Frequency/119 (Clock_Ip_Get_LPUART11_CLK_Frequency) @06f242a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART10_CLK_Frequency/118 (Clock_Ip_Get_LPUART10_CLK_Frequency) @06f24000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART9_CLK_Frequency/117 (Clock_Ip_Get_LPUART9_CLK_Frequency) @06f1fb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART8_CLK_Frequency/116 (Clock_Ip_Get_LPUART8_CLK_Frequency) @06f1f620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 
Clock_Ip_Get_LPUART7_CLK_Frequency/115 (Clock_Ip_Get_LPUART7_CLK_Frequency) @06f1f0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART6_CLK_Frequency/114 (Clock_Ip_Get_LPUART6_CLK_Frequency) @06f1fd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART5_CLK_Frequency/113 (Clock_Ip_Get_LPUART5_CLK_Frequency) @06f1fa80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART4_CLK_Frequency/112 (Clock_Ip_Get_LPUART4_CLK_Frequency) @06f1f7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART3_CLK_Frequency/111 (Clock_Ip_Get_LPUART3_CLK_Frequency) @06f1f540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART2_CLK_Frequency/110 (Clock_Ip_Get_LPUART2_CLK_Frequency) @06f1f2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART1_CLK_Frequency/109 (Clock_Ip_Get_LPUART1_CLK_Frequency) @06f1f000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPUART0_CLK_Frequency/108 (Clock_Ip_Get_LPUART0_CLK_Frequency) @06f17b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 
Clock_Ip_Get_LPSPI5_CLK_Frequency/107 (Clock_Ip_Get_LPSPI5_CLK_Frequency) @06f17620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPSPI4_CLK_Frequency/106 (Clock_Ip_Get_LPSPI4_CLK_Frequency) @06f170e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPSPI3_CLK_Frequency/105 (Clock_Ip_Get_LPSPI3_CLK_Frequency) @06f17d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPSPI2_CLK_Frequency/104 (Clock_Ip_Get_LPSPI2_CLK_Frequency) @06f17a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPSPI1_CLK_Frequency/103 (Clock_Ip_Get_LPSPI1_CLK_Frequency) @06f177e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPSPI0_CLK_Frequency/102 (Clock_Ip_Get_LPSPI0_CLK_Frequency) @06f17540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 
Clock_Ip_Get_LPI2C1_CLK_Frequency/101 (Clock_Ip_Get_LPI2C1_CLK_Frequency) @06f172a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LPI2C0_CLK_Frequency/100 (Clock_Ip_Get_LPI2C0_CLK_Frequency) @06f17000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_LCU1_CLK_Frequency/99 (Clock_Ip_Get_LCU1_CLK_Frequency) @06f10b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_LCU0_CLK_Frequency/98 (Clock_Ip_Get_LCU0_CLK_Frequency) @06f10620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_INTM_CLK_Frequency/97 (Clock_Ip_Get_INTM_CLK_Frequency) @06f100e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 
Clock_Ip_Get_FLEXIO0_CLK_Frequency/96 (Clock_Ip_Get_FLEXIO0_CLK_Frequency) @06f10d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 
Clock_Ip_Get_FLEXCAN5_CLK_Frequency/95 (Clock_Ip_Get_FLEXCAN5_CLK_Frequency) @06f10a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_FLEXCANB_CLK_Frequency/92 
Clock_Ip_Get_FLEXCAN4_CLK_Frequency/94 (Clock_Ip_Get_FLEXCAN4_CLK_Frequency) @06f107e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_FLEXCANB_CLK_Frequency/92 
Clock_Ip_Get_FLEXCAN3_CLK_Frequency/93 (Clock_Ip_Get_FLEXCAN3_CLK_Frequency) @06f10540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_FLEXCANB_CLK_Frequency/92 
Clock_Ip_Get_FLEXCANB_CLK_Frequency/92 (Clock_Ip_Get_FLEXCANB_CLK_Frequency) @06f102a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/0 (read) Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_FLEXCAN5_CLK_Frequency/95 Clock_Ip_Get_FLEXCAN4_CLK_Frequency/94 Clock_Ip_Get_FLEXCAN3_CLK_Frequency/93 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_FLEXCAN2_CLK_Frequency/91 (Clock_Ip_Get_FLEXCAN2_CLK_Frequency) @06f10000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_FLEXCANA_CLK_Frequency/88 
Clock_Ip_Get_FLEXCAN1_CLK_Frequency/90 (Clock_Ip_Get_FLEXCAN1_CLK_Frequency) @06f0ab60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_FLEXCANA_CLK_Frequency/88 
Clock_Ip_Get_FLEXCAN0_CLK_Frequency/89 (Clock_Ip_Get_FLEXCAN0_CLK_Frequency) @06f0a620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_FLEXCANA_CLK_Frequency/88 
Clock_Ip_Get_FLEXCANA_CLK_Frequency/88 (Clock_Ip_Get_FLEXCANA_CLK_Frequency) @06f0a0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/0 (read) Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_FLEXCAN2_CLK_Frequency/91 Clock_Ip_Get_FLEXCAN1_CLK_Frequency/90 Clock_Ip_Get_FLEXCAN0_CLK_Frequency/89 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_ERM0_CLK_Frequency/87 (Clock_Ip_Get_ERM0_CLK_Frequency) @06f0ad20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_EMIOS2_CLK_Frequency/86 (Clock_Ip_Get_EMIOS2_CLK_Frequency) @06f0aa80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EMIOS1_CLK_Frequency/85 (Clock_Ip_Get_EMIOS1_CLK_Frequency) @06f0a7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EMIOS0_CLK_Frequency/84 (Clock_Ip_Get_EMIOS0_CLK_Frequency) @06f0a540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EMAC0_TX_CLK_Frequency/83 (Clock_Ip_Get_EMAC0_TX_CLK_Frequency) @06f0a2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_EMAC_TX_CLK_Frequency/82 
Clock_Ip_Get_EMAC_TX_CLK_Frequency/82 (Clock_Ip_Get_EMAC_TX_CLK_Frequency) @06f0a000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/0 (read) Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_EMAC0_TX_CLK_Frequency/83 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_EMAC0_TS_CLK_Frequency/81 (Clock_Ip_Get_EMAC0_TS_CLK_Frequency) @06efeb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_EMAC_TS_CLK_Frequency/80 
Clock_Ip_Get_EMAC_TS_CLK_Frequency/80 (Clock_Ip_Get_EMAC_TS_CLK_Frequency) @06efe620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/0 (read) Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_EMAC0_TS_CLK_Frequency/81 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_EMAC0_RX_CLK_Frequency/79 (Clock_Ip_Get_EMAC0_RX_CLK_Frequency) @06efe0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_EMAC_RX_CLK_Frequency/78 
Clock_Ip_Get_EMAC_RX_CLK_Frequency/78 (Clock_Ip_Get_EMAC_RX_CLK_Frequency) @06efed20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/0 (read) Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_EMAC0_RX_CLK_Frequency/79 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_EIM_CLK_Frequency/77 (Clock_Ip_Get_EIM_CLK_Frequency) @06efea80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 
Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency/76 (Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency) @06efe7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency/75 (Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency) @06efe540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency/74 (Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency) @06efe2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency/73 (Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency) @06efe000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency/72 (Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency) @06ef9b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency/71 (Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency) @06ef9620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency/70 (Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency) @06ef90e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency/69 (Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency) @06ef9d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency/68 (Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency) @06ef9a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency/67 (Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency) @06ef97e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency/66 (Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency) @06ef9540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency/65 (Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency) @06ef92a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency/64 (Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency) @06ef9000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency/63 (Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency) @06ef3b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency/62 (Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency) @06ef3620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency/61 (Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency) @06ef30e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency/60 (Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency) @06ef3d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency/59 (Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency) @06ef3a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency/58 (Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency) @06ef37e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency/57 (Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency) @06ef3540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency/56 (Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency) @06ef32a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency/55 (Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency) @06ef3000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency/54 (Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency) @06fabb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency/53 (Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency) @06fab620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency/52 (Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency) @06fab0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency/51 (Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency) @06fabd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency/50 (Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency) @06faba80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency/49 (Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency) @06fab7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency/48 (Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency) @06fab540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency/47 (Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency) @06fab2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency/46 (Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency) @06fab000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency/45 (Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency) @06fa4b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_EDMA0_CLK_Frequency/44 (Clock_Ip_Get_EDMA0_CLK_Frequency) @06fa4620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_DMAMUX1_CLK_Frequency/43 (Clock_Ip_Get_DMAMUX1_CLK_Frequency) @06fa40e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_DMAMUX0_CLK_Frequency/42 (Clock_Ip_Get_DMAMUX0_CLK_Frequency) @06fa4d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_CRC0_CLK_Frequency/41 (Clock_Ip_Get_CRC0_CLK_Frequency) @06fa4a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 
Clock_Ip_Get_CMP2_CLK_Frequency/40 (Clock_Ip_Get_CMP2_CLK_Frequency) @06fa47e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_CMP1_CLK_Frequency/39 (Clock_Ip_Get_CMP1_CLK_Frequency) @06fa4540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_CMP0_CLK_Frequency/38 (Clock_Ip_Get_CMP0_CLK_Frequency) @06fa42a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 
Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency/37 (Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency) @06fa4000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/0 (read) Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_BCTU0_CLK_Frequency/36 (Clock_Ip_Get_BCTU0_CLK_Frequency) @06f9bb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_ADC2_CLK_Frequency/35 (Clock_Ip_Get_ADC2_CLK_Frequency) @06f9b620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_ADC1_CLK_Frequency/34 (Clock_Ip_Get_ADC1_CLK_Frequency) @06f9b0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_ADC0_CLK_Frequency/33 (Clock_Ip_Get_ADC0_CLK_Frequency) @06f9bd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_CORE_CLK_Frequency/25 
Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency/32 (Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency) @06f9ba80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfFreqTableClkSrc/0 (read) Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call Num speculative call targets: 0
Clock_Ip_Get_QSPI_MEM_CLK_Frequency/31 (Clock_Ip_Get_QSPI_MEM_CLK_Frequency) @06f9b7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency/130 Clock_Ip_Get_QSPI0_RAM_CLK_Frequency/129 
  Calls: Clock_Ip_Get_SCS_CLK_Frequency/24 
Clock_Ip_Get_LBIST_CLK_Frequency/30 (Clock_Ip_Get_LBIST_CLK_Frequency) @06f9b540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_SCS_CLK_Frequency/24 
Clock_Ip_Get_DCM_CLK_Frequency/29 (Clock_Ip_Get_DCM_CLK_Frequency) @06f9b2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_SCS_CLK_Frequency/24 
Clock_Ip_Get_HSE_CLK_Frequency/28 (Clock_Ip_Get_HSE_CLK_Frequency) @06f9b000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_SCS_CLK_Frequency/24 
Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 (Clock_Ip_Get_AIPS_SLOW_CLK_Frequency) @06f94b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_WKPU0_CLK_Frequency/149 Clock_Ip_Get_TSENSE0_CLK_Frequency/148 Clock_Ip_Get_TRGMUX0_CLK_Frequency/147 Clock_Ip_Get_STCU0_CLK_Frequency/139 Clock_Ip_Get_SIUL2_CLK_Frequency/138 Clock_Ip_Get_SAI1_CLK_Frequency/136 Clock_Ip_Get_SAI0_CLK_Frequency/135 Clock_Ip_Get_PIT2_CLK_Frequency/127 Clock_Ip_Get_PIT1_CLK_Frequency/126 Clock_Ip_Get_PIT0_CLK_Frequency/125 Clock_Ip_Get_LPUART15_CLK_Frequency/123 Clock_Ip_Get_LPUART14_CLK_Frequency/122 Clock_Ip_Get_LPUART13_CLK_Frequency/121 Clock_Ip_Get_LPUART12_CLK_Frequency/120 Clock_Ip_Get_LPUART11_CLK_Frequency/119 Clock_Ip_Get_LPUART10_CLK_Frequency/118 Clock_Ip_Get_LPUART9_CLK_Frequency/117 Clock_Ip_Get_LPUART7_CLK_Frequency/115 Clock_Ip_Get_LPUART6_CLK_Frequency/114 Clock_Ip_Get_LPUART5_CLK_Frequency/113 Clock_Ip_Get_LPUART4_CLK_Frequency/112 Clock_Ip_Get_LPUART3_CLK_Frequency/111 Clock_Ip_Get_LPUART2_CLK_Frequency/110 Clock_Ip_Get_LPUART1_CLK_Frequency/109 Clock_Ip_Get_LPSPI5_CLK_Frequency/107 Clock_Ip_Get_LPSPI4_CLK_Frequency/106 Clock_Ip_Get_LPSPI3_CLK_Frequency/105 Clock_Ip_Get_LPSPI2_CLK_Frequency/104 Clock_Ip_Get_LPSPI1_CLK_Frequency/103 Clock_Ip_Get_LPI2C1_CLK_Frequency/101 Clock_Ip_Get_LPI2C0_CLK_Frequency/100 Clock_Ip_Get_ERM0_CLK_Frequency/87 Clock_Ip_Get_CMP2_CLK_Frequency/40 Clock_Ip_Get_CMP1_CLK_Frequency/39 Clock_Ip_Get_CMP0_CLK_Frequency/38 
  Calls: Clock_Ip_Get_SCS_CLK_Frequency/24 
Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 (Clock_Ip_Get_AIPS_PLAT_CLK_Frequency) @06f94620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_SEMA42_CLK_Frequency/137 Clock_Ip_Get_MSCM_CLK_Frequency/124 Clock_Ip_Get_LPUART8_CLK_Frequency/116 Clock_Ip_Get_LPUART0_CLK_Frequency/108 Clock_Ip_Get_LPSPI0_CLK_Frequency/102 Clock_Ip_Get_INTM_CLK_Frequency/97 Clock_Ip_Get_FLEXIO0_CLK_Frequency/96 Clock_Ip_Get_EIM_CLK_Frequency/77 Clock_Ip_Get_CRC0_CLK_Frequency/41 
  Calls: Clock_Ip_Get_SCS_CLK_Frequency/24 
Clock_Ip_Get_CORE_CLK_Frequency/25 (Clock_Ip_Get_CORE_CLK_Frequency) @06f940e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_TEMPSENSE_CLK_Frequency/145 Clock_Ip_Get_LCU1_CLK_Frequency/99 Clock_Ip_Get_LCU0_CLK_Frequency/98 Clock_Ip_Get_EMIOS2_CLK_Frequency/86 Clock_Ip_Get_EMIOS1_CLK_Frequency/85 Clock_Ip_Get_EMIOS0_CLK_Frequency/84 Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency/76 Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency/75 Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency/74 Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency/73 Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency/72 Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency/71 Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency/70 Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency/69 Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency/68 Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency/67 Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency/66 Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency/65 Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency/64 Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency/63 Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency/62 Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency/61 Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency/60 Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency/59 Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency/58 Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency/57 Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency/56 Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency/55 Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency/54 Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency/53 Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency/52 Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency/51 Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency/50 Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency/49 Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency/48 Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency/47 Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency/46 Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency/45 Clock_Ip_Get_EDMA0_CLK_Frequency/44 Clock_Ip_Get_DMAMUX1_CLK_Frequency/43 Clock_Ip_Get_DMAMUX0_CLK_Frequency/42 Clock_Ip_Get_BCTU0_CLK_Frequency/36 Clock_Ip_Get_ADC2_CLK_Frequency/35 Clock_Ip_Get_ADC1_CLK_Frequency/34 Clock_Ip_Get_ADC0_CLK_Frequency/33 
  Calls: Clock_Ip_Get_SCS_CLK_Frequency/24 
Clock_Ip_Get_SCS_CLK_Frequency/24 (Clock_Ip_Get_SCS_CLK_Frequency) @06f94d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_QSPI_MEM_CLK_Frequency/31 Clock_Ip_Get_LBIST_CLK_Frequency/30 Clock_Ip_Get_DCM_CLK_Frequency/29 Clock_Ip_Get_HSE_CLK_Frequency/28 Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 Clock_Ip_Get_CORE_CLK_Frequency/25 
  Calls: Clock_Ip_Get_PLL_PHI0_Frequency/20 Clock_Ip_Get_FIRC_CLK_Frequency/12 
Clock_Ip_Get_emac_mii_rmii_tx_Frequency/23 (Clock_Ip_Get_emac_mii_rmii_tx_Frequency) @06f94a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_axExtSignalFreqEntries/6 (read) 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_Get_emac_mii_rx_Frequency/22 (Clock_Ip_Get_emac_mii_rx_Frequency) @06f947e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_axExtSignalFreqEntries/6 (read) 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_Get_PLL_PHI1_Frequency/21 (Clock_Ip_Get_PLL_PHI1_Frequency) @06f94540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/19 
Clock_Ip_Get_PLL_PHI0_Frequency/20 (Clock_Ip_Get_PLL_PHI0_Frequency) @06f942a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au32EnableDivider/3 (read) 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_SCS_CLK_Frequency/24 
  Calls: Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/19 
Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/19 (Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency) @06f94000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_PLL_PHI1_Frequency/21 Clock_Ip_Get_PLL_PHI0_Frequency/20 
  Calls: Clock_Ip_Get_PLL_CLK_Frequency/18 
Clock_Ip_Get_PLL_CLK_Frequency/18 (Clock_Ip_Get_PLL_CLK_Frequency) @06eeeb60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32PLL_CLKChecksum/10 (read) Clock_Ip_u32PLL_CLKChecksum/10 (write) Clock_Ip_u32PLL_CLKFreq/9 (write) Clock_Ip_u32PLL_CLKFreq/9 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/19 
  Calls: Clock_Ip_PLL_VCO/150 
Clock_Ip_Get_SXOSC_CLK_Frequency/17 (Clock_Ip_Get_SXOSC_CLK_Frequency) @06eee620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32sxosc/8 (read) Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableRTC_CLK/1 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_Get_FXOSC_CLK_Frequency/16 (Clock_Ip_Get_FXOSC_CLK_Frequency) @06eee0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32fxosc/7 (read) Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableRTC_CLK/1 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_PLL_VCO/150 
  Calls: 
Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency/15 (Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency) @06eeed20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_SIRC_CLK_Frequency/14 
Clock_Ip_Get_SIRC_CLK_Frequency/14 (Clock_Ip_Get_SIRC_CLK_Frequency) @06eeea80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableRTC_CLK/1 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_SWT0_CLK_Frequency/144 Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency/15 
  Calls: 
Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency/13 (Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency) @06eee7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_u32EnableGate/4 (read) 
  Referring: Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_Get_FIRC_CLK_Frequency/12 
Clock_Ip_Get_FIRC_CLK_Frequency/12 (Clock_Ip_Get_FIRC_CLK_Frequency) @06eee540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_apfTableDividerValue/5 (read) 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableRTC_CLK/1 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Get_SCS_CLK_Frequency/24 Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency/13 
  Calls: 
Clock_Ip_Get_Zero_Frequency/11 (Clock_Ip_Get_Zero_Frequency) @06eee2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTableClkSrc/0 (addr) Clock_Ip_apfFreqTable/2 (addr) Clock_Ip_apfFreqTable/2 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_u32PLL_CLKChecksum/10 (Clock_Ip_u32PLL_CLKChecksum) @06eed090
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_PLL_CLK_Frequency/18 (read) Clock_Ip_Get_PLL_CLK_Frequency/18 (write) 
  Availability: available
  Varpool flags: initialized
Clock_Ip_u32PLL_CLKFreq/9 (Clock_Ip_u32PLL_CLKFreq) @06eed000
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_PLL_CLK_Frequency/18 (write) Clock_Ip_Get_PLL_CLK_Frequency/18 (read) 
  Availability: available
  Varpool flags: initialized
Clock_Ip_u32sxosc/8 (Clock_Ip_u32sxosc) @06ceda20
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_SXOSC_CLK_Frequency/17 (read) Clock_Ip_SetExternalOscillatorFrequency/151 (write) 
  Availability: available
  Varpool flags: initialized
Clock_Ip_u32fxosc/7 (Clock_Ip_u32fxosc) @06cedf30
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_FXOSC_CLK_Frequency/16 (read) Clock_Ip_SetExternalOscillatorFrequency/151 (write) 
  Availability: available
  Varpool flags: initialized
Clock_Ip_axExtSignalFreqEntries/6 (Clock_Ip_axExtSignalFreqEntries) @06cedea0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_emac_mii_rx_Frequency/22 (read) Clock_Ip_Get_emac_mii_rmii_tx_Frequency/23 (read) Clock_Ip_SetExternalSignalFrequency/153 (read) Clock_Ip_SetExternalSignalFrequency/153 (write) 
  Availability: available
  Varpool flags: initialized
Clock_Ip_apfTableDividerValue/5 (Clock_Ip_apfTableDividerValue) @06ceddc8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_FIRC_CLK_Frequency/12 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_u32EnableGate/4 (Clock_Ip_u32EnableGate) @06cedd38
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_TRGMUX0_CLK_Frequency/147 (read) Clock_Ip_Get_QSPI0_RAM_CLK_Frequency/129 (read) Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency/13 (read) Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency/15 (read) Clock_Ip_Get_SWT0_CLK_Frequency/144 (read) Clock_Ip_Get_RTC0_CLK_Frequency/134 (read) Clock_Ip_Get_ADC0_CLK_Frequency/33 (read) Clock_Ip_Get_ADC1_CLK_Frequency/34 (read) Clock_Ip_Get_MSCM_CLK_Frequency/124 (read) Clock_Ip_Get_SEMA42_CLK_Frequency/137 (read) Clock_Ip_Get_CMP0_CLK_Frequency/38 (read) Clock_Ip_Get_LCU1_CLK_Frequency/99 (read) Clock_Ip_Get_ADC2_CLK_Frequency/35 (read) Clock_Ip_Get_BCTU0_CLK_Frequency/36 (read) Clock_Ip_Get_DMAMUX0_CLK_Frequency/42 (read) Clock_Ip_Get_DMAMUX1_CLK_Frequency/43 (read) Clock_Ip_Get_EDMA0_CLK_Frequency/44 (read) Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency/45 (read) Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency/46 (read) Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency/47 (read) Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency/48 (read) Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency/49 (read) Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency/50 (read) Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency/51 (read) Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency/52 (read) Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency/53 (read) Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency/54 (read) Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency/55 (read) Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency/56 (read) Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency/57 (read) Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency/58 (read) Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency/59 (read) Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency/60 (read) Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency/61 (read) Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency/62 (read) Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency/63 (read) Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency/64 (read) Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency/65 (read) Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency/66 (read) Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency/67 (read) Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency/68 (read) Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency/69 (read) Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency/70 (read) Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency/71 (read) Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency/72 (read) Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency/73 (read) Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency/74 (read) Clock_Ip_Get_TEMPSENSE_CLK_Frequency/145 (read) Clock_Ip_Get_FXOSC_CLK_Frequency/16 (read) Clock_Ip_Get_SXOSC_CLK_Frequency/17 (read) Clock_Ip_Get_EMAC0_RX_CLK_Frequency/79 (read) Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency/75 (read) Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency/76 (read) Clock_Ip_Get_EMIOS0_CLK_Frequency/84 (read) Clock_Ip_Get_CMP1_CLK_Frequency/39 (read) Clock_Ip_Get_EMAC0_TS_CLK_Frequency/81 (read) Clock_Ip_Get_EMAC0_TX_CLK_Frequency/83 (read) Clock_Ip_Get_FLEXCAN0_CLK_Frequency/89 (read) Clock_Ip_Get_FLEXCAN1_CLK_Frequency/90 (read) Clock_Ip_Get_FLEXCAN2_CLK_Frequency/91 (read) Clock_Ip_Get_FLEXCAN3_CLK_Frequency/93 (read) Clock_Ip_Get_CRC0_CLK_Frequency/41 (read) Clock_Ip_Get_EIM_CLK_Frequency/77 (read) Clock_Ip_Get_EMIOS1_CLK_Frequency/85 (read) Clock_Ip_Get_EMIOS2_CLK_Frequency/86 (read) Clock_Ip_Get_CMP2_CLK_Frequency/40 (read) Clock_Ip_Get_ERM0_CLK_Frequency/87 (read) Clock_Ip_Get_FLEXIO0_CLK_Frequency/96 (read) Clock_Ip_Get_LPI2C0_CLK_Frequency/100 (read) Clock_Ip_Get_LPI2C1_CLK_Frequency/101 (read) Clock_Ip_Get_LPSPI1_CLK_Frequency/103 (read) Clock_Ip_Get_LPSPI2_CLK_Frequency/104 (read) Clock_Ip_Get_LPSPI3_CLK_Frequency/105 (read) Clock_Ip_Get_INTM_CLK_Frequency/97 (read) Clock_Ip_Get_LPSPI4_CLK_Frequency/106 (read) Clock_Ip_Get_LPSPI5_CLK_Frequency/107 (read) Clock_Ip_Get_LPUART1_CLK_Frequency/109 (read) Clock_Ip_Get_LPUART2_CLK_Frequency/110 (read) Clock_Ip_Get_LPUART3_CLK_Frequency/111 (read) Clock_Ip_Get_LPUART4_CLK_Frequency/112 (read) Clock_Ip_Get_LPUART5_CLK_Frequency/113 (read) Clock_Ip_Get_LPSPI0_CLK_Frequency/102 (read) Clock_Ip_Get_LPUART6_CLK_Frequency/114 (read) Clock_Ip_Get_LPUART7_CLK_Frequency/115 (read) Clock_Ip_Get_LPUART9_CLK_Frequency/117 (read) Clock_Ip_Get_LPUART10_CLK_Frequency/118 (read) Clock_Ip_Get_LPUART11_CLK_Frequency/119 (read) Clock_Ip_Get_LPUART12_CLK_Frequency/120 (read) Clock_Ip_Get_LPUART13_CLK_Frequency/121 (read) Clock_Ip_Get_LPUART0_CLK_Frequency/108 (read) Clock_Ip_Get_LPUART14_CLK_Frequency/122 (read) Clock_Ip_Get_LPUART15_CLK_Frequency/123 (read) Clock_Ip_Get_PIT0_CLK_Frequency/125 (read) Clock_Ip_Get_FLEXCAN4_CLK_Frequency/94 (read) Clock_Ip_Get_TSENSE0_CLK_Frequency/148 (read) Clock_Ip_Get_WKPU0_CLK_Frequency/149 (read) Clock_Ip_Get_STM1_CLK_Frequency/143 (read) Clock_Ip_Get_PIT1_CLK_Frequency/126 (read) Clock_Ip_Get_PIT2_CLK_Frequency/127 (read) Clock_Ip_Get_LPUART8_CLK_Frequency/116 (read) Clock_Ip_Get_SAI0_CLK_Frequency/135 (read) Clock_Ip_Get_SAI1_CLK_Frequency/136 (read) Clock_Ip_Get_FLEXCAN5_CLK_Frequency/95 (read) Clock_Ip_Get_QSPI0_CLK_Frequency/128 (read) Clock_Ip_Get_STM0_CLK_Frequency/141 (read) Clock_Ip_Get_LCU0_CLK_Frequency/98 (read) Clock_Ip_Get_SIUL2_CLK_Frequency/138 (read) Clock_Ip_Get_STCU0_CLK_Frequency/139 (read) Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency/130 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_au32EnableDivider/3 (Clock_Ip_au32EnableDivider) @06cedca8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Get_STMB_CLK_Frequency/142 (read) Clock_Ip_Get_LBIST_CLK_Frequency/30 (read) Clock_Ip_Get_TRACE_CLK_Frequency/146 (read) Clock_Ip_Get_PLL_PHI0_Frequency/20 (read) Clock_Ip_Get_CORE_CLK_Frequency/25 (read) Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 (read) Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 (read) Clock_Ip_Get_HSE_CLK_Frequency/28 (read) Clock_Ip_Get_DCM_CLK_Frequency/29 (read) Clock_Ip_Get_STMA_CLK_Frequency/140 (read) Clock_Ip_Get_QSPI_MEM_CLK_Frequency/31 (read) Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency/32 (read) Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency/37 (read) Clock_Ip_Get_EMAC_RX_CLK_Frequency/78 (read) Clock_Ip_Get_EMAC_TS_CLK_Frequency/80 (read) Clock_Ip_Get_EMAC_TX_CLK_Frequency/82 (read) Clock_Ip_Get_FLEXCANA_CLK_Frequency/88 (read) Clock_Ip_Get_FLEXCANB_CLK_Frequency/92 (read) Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/131 (read) Clock_Ip_Get_PLL_PHI1_Frequency/21 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_apfFreqTable/2 (Clock_Ip_apfFreqTable) @06cedc18
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_FIRC_CLK_Frequency/12 (addr) Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency/13 (addr) Clock_Ip_Get_SIRC_CLK_Frequency/14 (addr) Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency/15 (addr) Clock_Ip_Get_FXOSC_CLK_Frequency/16 (addr) Clock_Ip_Get_SXOSC_CLK_Frequency/17 (addr) Clock_Ip_Get_PLL_CLK_Frequency/18 (addr) Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency/19 (addr) Clock_Ip_Get_PLL_PHI0_Frequency/20 (addr) Clock_Ip_Get_PLL_PHI1_Frequency/21 (addr) Clock_Ip_Get_emac_mii_rx_Frequency/22 (addr) Clock_Ip_Get_emac_mii_rmii_tx_Frequency/23 (addr) Clock_Ip_Get_SCS_CLK_Frequency/24 (addr) Clock_Ip_Get_CORE_CLK_Frequency/25 (addr) Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 (addr) Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 (addr) Clock_Ip_Get_HSE_CLK_Frequency/28 (addr) Clock_Ip_Get_DCM_CLK_Frequency/29 (addr) Clock_Ip_Get_LBIST_CLK_Frequency/30 (addr) Clock_Ip_Get_QSPI_MEM_CLK_Frequency/31 (addr) Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency/32 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_ADC0_CLK_Frequency/33 (addr) Clock_Ip_Get_ADC1_CLK_Frequency/34 (addr) Clock_Ip_Get_ADC2_CLK_Frequency/35 (addr) Clock_Ip_Get_BCTU0_CLK_Frequency/36 (addr) Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency/37 (addr) Clock_Ip_Get_CMP0_CLK_Frequency/38 (addr) Clock_Ip_Get_CMP1_CLK_Frequency/39 (addr) Clock_Ip_Get_CMP2_CLK_Frequency/40 (addr) Clock_Ip_Get_CRC0_CLK_Frequency/41 (addr) Clock_Ip_Get_DCM_CLK_Frequency/29 (addr) Clock_Ip_Get_DMAMUX0_CLK_Frequency/42 (addr) Clock_Ip_Get_DMAMUX1_CLK_Frequency/43 (addr) Clock_Ip_Get_EDMA0_CLK_Frequency/44 (addr) Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency/45 (addr) Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency/46 (addr) Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency/47 (addr) Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency/48 (addr) Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency/49 (addr) Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency/50 (addr) Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency/51 (addr) Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency/52 (addr) Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency/53 (addr) Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency/54 (addr) Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency/55 (addr) Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency/56 (addr) Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency/57 (addr) Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency/58 (addr) Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency/59 (addr) Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency/60 (addr) Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency/61 (addr) Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency/62 (addr) Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency/63 (addr) Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency/64 (addr) Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency/65 (addr) Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency/66 (addr) Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency/67 (addr) Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency/68 (addr) Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency/69 (addr) Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency/70 (addr) Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency/71 (addr) Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency/72 (addr) Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency/73 (addr) Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency/74 (addr) Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency/75 (addr) Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency/76 (addr) Clock_Ip_Get_EIM_CLK_Frequency/77 (addr) Clock_Ip_Get_EMAC_RX_CLK_Frequency/78 (addr) Clock_Ip_Get_EMAC0_RX_CLK_Frequency/79 (addr) Clock_Ip_Get_EMAC_TS_CLK_Frequency/80 (addr) Clock_Ip_Get_EMAC0_TS_CLK_Frequency/81 (addr) Clock_Ip_Get_EMAC_TX_CLK_Frequency/82 (addr) Clock_Ip_Get_EMAC0_TX_CLK_Frequency/83 (addr) Clock_Ip_Get_EMIOS0_CLK_Frequency/84 (addr) Clock_Ip_Get_EMIOS1_CLK_Frequency/85 (addr) Clock_Ip_Get_EMIOS2_CLK_Frequency/86 (addr) Clock_Ip_Get_ERM0_CLK_Frequency/87 (addr) Clock_Ip_Get_FLEXCANA_CLK_Frequency/88 (addr) Clock_Ip_Get_FLEXCAN0_CLK_Frequency/89 (addr) Clock_Ip_Get_FLEXCAN1_CLK_Frequency/90 (addr) Clock_Ip_Get_FLEXCAN2_CLK_Frequency/91 (addr) Clock_Ip_Get_FLEXCANB_CLK_Frequency/92 (addr) Clock_Ip_Get_FLEXCAN3_CLK_Frequency/93 (addr) Clock_Ip_Get_FLEXCAN4_CLK_Frequency/94 (addr) Clock_Ip_Get_FLEXCAN5_CLK_Frequency/95 (addr) Clock_Ip_Get_FLEXIO0_CLK_Frequency/96 (addr) Clock_Ip_Get_INTM_CLK_Frequency/97 (addr) Clock_Ip_Get_LCU0_CLK_Frequency/98 (addr) Clock_Ip_Get_LCU1_CLK_Frequency/99 (addr) Clock_Ip_Get_LPI2C0_CLK_Frequency/100 (addr) Clock_Ip_Get_LPI2C1_CLK_Frequency/101 (addr) Clock_Ip_Get_LPSPI0_CLK_Frequency/102 (addr) Clock_Ip_Get_LPSPI1_CLK_Frequency/103 (addr) Clock_Ip_Get_LPSPI2_CLK_Frequency/104 (addr) Clock_Ip_Get_LPSPI3_CLK_Frequency/105 (addr) Clock_Ip_Get_LPSPI4_CLK_Frequency/106 (addr) Clock_Ip_Get_LPSPI5_CLK_Frequency/107 (addr) Clock_Ip_Get_LPUART0_CLK_Frequency/108 (addr) Clock_Ip_Get_LPUART1_CLK_Frequency/109 (addr) Clock_Ip_Get_LPUART2_CLK_Frequency/110 (addr) Clock_Ip_Get_LPUART3_CLK_Frequency/111 (addr) Clock_Ip_Get_LPUART4_CLK_Frequency/112 (addr) Clock_Ip_Get_LPUART5_CLK_Frequency/113 (addr) Clock_Ip_Get_LPUART6_CLK_Frequency/114 (addr) Clock_Ip_Get_LPUART7_CLK_Frequency/115 (addr) Clock_Ip_Get_LPUART8_CLK_Frequency/116 (addr) Clock_Ip_Get_LPUART9_CLK_Frequency/117 (addr) Clock_Ip_Get_LPUART10_CLK_Frequency/118 (addr) Clock_Ip_Get_LPUART11_CLK_Frequency/119 (addr) Clock_Ip_Get_LPUART12_CLK_Frequency/120 (addr) Clock_Ip_Get_LPUART13_CLK_Frequency/121 (addr) Clock_Ip_Get_LPUART14_CLK_Frequency/122 (addr) Clock_Ip_Get_LPUART15_CLK_Frequency/123 (addr) Clock_Ip_Get_MSCM_CLK_Frequency/124 (addr) Clock_Ip_Get_PIT0_CLK_Frequency/125 (addr) Clock_Ip_Get_PIT1_CLK_Frequency/126 (addr) Clock_Ip_Get_PIT2_CLK_Frequency/127 (addr) Clock_Ip_Get_QSPI0_CLK_Frequency/128 (addr) Clock_Ip_Get_QSPI0_RAM_CLK_Frequency/129 (addr) Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency/130 (addr) Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/131 (addr) Clock_Ip_Get_RTC_CLK_Frequency/132 (addr) Clock_Ip_Get_RTC0_CLK_Frequency/134 (addr) Clock_Ip_Get_SAI0_CLK_Frequency/135 (addr) Clock_Ip_Get_SAI1_CLK_Frequency/136 (addr) Clock_Ip_Get_SEMA42_CLK_Frequency/137 (addr) Clock_Ip_Get_SIUL2_CLK_Frequency/138 (addr) Clock_Ip_Get_STCU0_CLK_Frequency/139 (addr) Clock_Ip_Get_STMA_CLK_Frequency/140 (addr) Clock_Ip_Get_STM0_CLK_Frequency/141 (addr) Clock_Ip_Get_STMB_CLK_Frequency/142 (addr) Clock_Ip_Get_STM1_CLK_Frequency/143 (addr) Clock_Ip_Get_SWT0_CLK_Frequency/144 (addr) Clock_Ip_Get_TEMPSENSE_CLK_Frequency/145 (addr) Clock_Ip_Get_TRACE_CLK_Frequency/146 (addr) Clock_Ip_Get_TRGMUX0_CLK_Frequency/147 (addr) Clock_Ip_Get_TSENSE0_CLK_Frequency/148 (addr) Clock_Ip_Get_WKPU0_CLK_Frequency/149 (addr) 
  Referring: Clock_Ip_GetFreq/152 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_apfFreqTableRTC_CLK/1 (Clock_Ip_apfFreqTableRTC_CLK) @06cedaf8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_Get_SXOSC_CLK_Frequency/17 (addr) Clock_Ip_Get_SIRC_CLK_Frequency/14 (addr) Clock_Ip_Get_FIRC_CLK_Frequency/12 (addr) Clock_Ip_Get_FXOSC_CLK_Frequency/16 (addr) 
  Referring: Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall/133 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_apfFreqTableClkSrc/0 (Clock_Ip_apfFreqTableClkSrc) @06ceda68
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Clock_Ip_Get_FIRC_CLK_Frequency/12 (addr) Clock_Ip_Get_SIRC_CLK_Frequency/14 (addr) Clock_Ip_Get_FXOSC_CLK_Frequency/16 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_SXOSC_CLK_Frequency/17 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_PLL_PHI0_Frequency/20 (addr) Clock_Ip_Get_PLL_PHI1_Frequency/21 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_CORE_CLK_Frequency/25 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_HSE_CLK_Frequency/28 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_AIPS_PLAT_CLK_Frequency/26 (addr) Clock_Ip_Get_AIPS_SLOW_CLK_Frequency/27 (addr) Clock_Ip_Get_emac_mii_rmii_tx_Frequency/23 (addr) Clock_Ip_Get_emac_mii_rx_Frequency/22 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) Clock_Ip_Get_Zero_Frequency/11 (addr) 
  Referring: Clock_Ip_Get_STMA_CLK_Frequency/140 (read) Clock_Ip_Get_STMB_CLK_Frequency/142 (read) Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency/32 (read) Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency/37 (read) Clock_Ip_Get_EMAC_RX_CLK_Frequency/78 (read) Clock_Ip_Get_EMAC_TS_CLK_Frequency/80 (read) Clock_Ip_Get_EMAC_TX_CLK_Frequency/82 (read) Clock_Ip_Get_FLEXCANA_CLK_Frequency/88 (read) Clock_Ip_Get_FLEXCANB_CLK_Frequency/92 (read) Clock_Ip_Get_QSPI_SFCK_CLK_Frequency/131 (read) Clock_Ip_Get_TRACE_CLK_Frequency/146 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known

;; Function Clock_Ip_Get_Zero_Frequency (Clock_Ip_Get_Zero_Frequency, funcdef_no=0, decl_uid=6587, cgraph_uid=1, symbol_order=11)

Clock_Ip_Get_Zero_Frequency ()
{
  uint32 D.7468;
  uint32 _1;

  <bb 2> :
  _1 = 0;

  <bb 3> :
<L0>:
  return _1;

}



;; Function Clock_Ip_Get_FIRC_CLK_Frequency (Clock_Ip_Get_FIRC_CLK_Frequency, funcdef_no=1, decl_uid=6589, cgraph_uid=2, symbol_order=12)

Clock_Ip_Get_FIRC_CLK_Frequency ()
{
  uint32 DividerValue;
  uint32 Frequency;
  uint32 D.7470;
  struct CONFIGURATION_GPR_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 _8;

  <bb 2> :
  Frequency_4 = 48000000;
  _1 = 1077526528B;
  _2 ={v} _1->CONFIG_REG_GPR;
  _3 = _2 & 3;
  DividerValue_6 = Clock_Ip_apfTableDividerValue[_3];
  Frequency_7 = Frequency_4 / DividerValue_6;
  _8 = Frequency_7;

  <bb 3> :
<L0>:
  return _8;

}



;; Function Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency (Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency, funcdef_no=2, decl_uid=6591, cgraph_uid=3, symbol_order=13)

Clock_Ip_Get_FIRC_STANDBY_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7473;
  long unsigned int D.7472;
  struct FIRC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;
  uint32 _9;

  <bb 2> :
  Frequency_6 = Clock_Ip_Get_FIRC_CLK_Frequency ();
  _1 = 1076690944B;
  _2 ={v} _1->STDBY_ENABLE;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = _7 & Frequency_6;
  _9 = Frequency_8;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Clock_Ip_Get_SIRC_CLK_Frequency (Clock_Ip_Get_SIRC_CLK_Frequency, funcdef_no=3, decl_uid=6593, cgraph_uid=4, symbol_order=14)

Clock_Ip_Get_SIRC_CLK_Frequency ()
{
  uint32 D.7475;
  uint32 _1;

  <bb 2> :
  _1 = 32000;

  <bb 3> :
<L0>:
  return _1;

}



;; Function Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency (Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency, funcdef_no=4, decl_uid=6595, cgraph_uid=5, symbol_order=15)

Clock_Ip_Get_SIRC_STANDBY_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7478;
  long unsigned int D.7477;
  struct SIRC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_SIRC_CLK_Frequency ();
  _1 = 1076658176B;
  _2 ={v} _1->MISCELLANEOUS_IN;
  _3 = _2 >> 8;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_FXOSC_CLK_Frequency (Clock_Ip_Get_FXOSC_CLK_Frequency, funcdef_no=5, decl_uid=6597, cgraph_uid=6, symbol_order=16)

Clock_Ip_Get_FXOSC_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7483;
  long unsigned int D.7482;
  struct FXOSC_Type * _1;
  long unsigned int _2;
  signed int _3;
  struct MC_ME_Type * _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _12;
  uint32 _14;

  <bb 2> :
  Frequency_10 = Clock_Ip_u32fxosc;
  _1 = 1076707328B;
  _2 ={v} _1->STAT;
  _3 = (signed int) _2;
  if (_3 >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Frequency_11 = 0;

  <bb 4> :
  # Frequency_8 = PHI <Frequency_10(2), Frequency_11(3)>
  _4 = 1076740096B;
  _5 ={v} _4->PRTN1_COFB1_STAT;
  _6 = _5 >> 21;
  _7 = _6 & 1;
  _12 = Clock_Ip_u32EnableGate[_7];
  Frequency_13 = _12 & Frequency_8;
  _14 = Frequency_13;

  <bb 5> :
<L2>:
  return _14;

}



;; Function Clock_Ip_Get_SXOSC_CLK_Frequency (Clock_Ip_Get_SXOSC_CLK_Frequency, funcdef_no=6, decl_uid=6599, cgraph_uid=7, symbol_order=17)

Clock_Ip_Get_SXOSC_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7488;
  long unsigned int D.7487;
  struct SXOSC_Type * _1;
  long unsigned int _2;
  signed int _3;
  struct MC_ME_Type * _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _12;
  uint32 _14;

  <bb 2> :
  Frequency_10 = Clock_Ip_u32sxosc;
  _1 = 1076674560B;
  _2 ={v} _1->SXOSC_STAT;
  _3 = (signed int) _2;
  if (_3 >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Frequency_11 = 0;

  <bb 4> :
  # Frequency_8 = PHI <Frequency_10(2), Frequency_11(3)>
  _4 = 1076740096B;
  _5 ={v} _4->PRTN1_COFB1_STAT;
  _6 = _5 >> 19;
  _7 = _6 & 1;
  _12 = Clock_Ip_u32EnableGate[_7];
  Frequency_13 = _12 & Frequency_8;
  _14 = Frequency_13;

  <bb 5> :
<L2>:
  return _14;

}



;; Function Clock_Ip_Get_PLL_CLK_Frequency (Clock_Ip_Get_PLL_CLK_Frequency, funcdef_no=7, decl_uid=6601, cgraph_uid=8, symbol_order=18)

Clock_Ip_Get_PLL_CLK_Frequency ()
{
  uint32 PLLCLKMUXBuffer;
  uint32 PLLFDBuffer;
  uint32 PLLDVBuffer;
  uint32 iftmp.1;
  uint32 D.7492;
  struct PLL_Type * _1;
  struct PLL_Type * _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int Clock_Ip_u32PLL_CLKChecksum.0_5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  struct PLL_Type * _9;
  long unsigned int _10;
  long unsigned int _11;
  uint32 iftmp.1_12;
  uint32 iftmp.1_21;
  uint32 iftmp.1_22;
  uint32 _23;

  <bb 2> :
  _1 = 1076756480B;
  PLLDVBuffer_15 ={v} _1->PLLDV;
  _2 = 1076756480B;
  PLLFDBuffer_16 ={v} _2->PLLFD;
  PLLCLKMUXBuffer_17 = 1;
  _3 = PLLDVBuffer_15 ^ PLLFDBuffer_16;
  _4 = PLLCLKMUXBuffer_17 ^ _3;
  Clock_Ip_u32PLL_CLKChecksum.0_5 = Clock_Ip_u32PLL_CLKChecksum;
  if (_4 != Clock_Ip_u32PLL_CLKChecksum.0_5)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = PLLDVBuffer_15 ^ PLLFDBuffer_16;
  _7 = PLLCLKMUXBuffer_17 ^ _6;
  Clock_Ip_u32PLL_CLKChecksum = _7;
  _8 = Clock_Ip_PLL_VCO (1076756480B);
  Clock_Ip_u32PLL_CLKFreq = _8;

  <bb 4> :
  _9 = 1076756480B;
  _10 ={v} _9->PLLSR;
  _11 = _10 & 4;
  if (_11 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1_22 = Clock_Ip_u32PLL_CLKFreq;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1_21 = 0;

  <bb 7> :
  # iftmp.1_12 = PHI <iftmp.1_22(5), iftmp.1_21(6)>
  _23 = iftmp.1_12;

  <bb 8> :
<L5>:
  return _23;

}



;; Function Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency (Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency, funcdef_no=8, decl_uid=6603, cgraph_uid=9, symbol_order=19)

Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency ()
{
  uint32 DividerValue;
  uint32 Frequency;
  uint32 D.7501;
  struct PLL_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  uint32 _11;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_PLL_CLK_Frequency ();
  _1 = 1076756480B;
  _2 ={v} _1->PLLDV;
  _3 = _2 >> 25;
  DividerValue_8 = _3 & 63;
  if (DividerValue_8 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Frequency_10 = Frequency_7 / DividerValue_8;
  goto <bb 5>; [INV]

  <bb 4> :
  Frequency_9 = 0;

  <bb 5> :
  # Frequency_4 = PHI <Frequency_10(3), Frequency_9(4)>
  _11 = Frequency_4;

  <bb 6> :
<L3>:
  return _11;

}



;; Function Clock_Ip_Get_PLL_PHI0_Frequency (Clock_Ip_Get_PLL_PHI0_Frequency, funcdef_no=9, decl_uid=6605, cgraph_uid=10, symbol_order=20)

Clock_Ip_Get_PLL_PHI0_Frequency ()
{
  uint32 Frequency;
  uint32 D.7505;
  long unsigned int D.7504;
  long unsigned int D.7503;
  struct PLL_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct PLL_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _12;
  long unsigned int _14;
  uint32 _16;

  <bb 2> :
  Frequency_11 = Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency ();
  _1 = 1076756480B;
  _2 ={v} _1->PLLODIV[0];
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _12 = Clock_Ip_au32EnableDivider[_4];
  Frequency_13 = _12 & Frequency_11;
  _5 = 1076756480B;
  _6 ={v} _5->PLLODIV[0];
  _7 = _6 >> 16;
  _8 = _7 & 15;
  _14 = _8 + 1;
  Frequency_15 = Frequency_13 / _14;
  _16 = Frequency_15;

  <bb 3> :
<L0>:
  return _16;

}



;; Function Clock_Ip_Get_PLL_PHI1_Frequency (Clock_Ip_Get_PLL_PHI1_Frequency, funcdef_no=10, decl_uid=6607, cgraph_uid=11, symbol_order=21)

Clock_Ip_Get_PLL_PHI1_Frequency ()
{
  uint32 Frequency;
  uint32 D.7509;
  long unsigned int D.7508;
  long unsigned int D.7507;
  struct PLL_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct PLL_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _12;
  long unsigned int _14;
  uint32 _16;

  <bb 2> :
  Frequency_11 = Clock_Ip_Get_PLL_POSTDIV_CLK_Frequency ();
  _1 = 1076756480B;
  _2 ={v} _1->PLLODIV[1];
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _12 = Clock_Ip_au32EnableDivider[_4];
  Frequency_13 = _12 & Frequency_11;
  _5 = 1076756480B;
  _6 ={v} _5->PLLODIV[1];
  _7 = _6 >> 16;
  _8 = _7 & 15;
  _14 = _8 + 1;
  Frequency_15 = Frequency_13 / _14;
  _16 = Frequency_15;

  <bb 3> :
<L0>:
  return _16;

}



;; Function Clock_Ip_Get_emac_mii_rx_Frequency (Clock_Ip_Get_emac_mii_rx_Frequency, funcdef_no=11, decl_uid=6609, cgraph_uid=12, symbol_order=22)

Clock_Ip_Get_emac_mii_rx_Frequency ()
{
  uint32 D.7511;
  uint32 _2;

  <bb 2> :
  _2 = Clock_Ip_axExtSignalFreqEntries[0].Frequency;

  <bb 3> :
<L0>:
  return _2;

}



;; Function Clock_Ip_Get_emac_mii_rmii_tx_Frequency (Clock_Ip_Get_emac_mii_rmii_tx_Frequency, funcdef_no=12, decl_uid=6611, cgraph_uid=13, symbol_order=23)

Clock_Ip_Get_emac_mii_rmii_tx_Frequency ()
{
  uint32 D.7513;
  uint32 _2;

  <bb 2> :
  _2 = Clock_Ip_axExtSignalFreqEntries[1].Frequency;

  <bb 3> :
<L0>:
  return _2;

}



;; Function Clock_Ip_Get_SCS_CLK_Frequency (Clock_Ip_Get_SCS_CLK_Frequency, funcdef_no=13, decl_uid=6613, cgraph_uid=14, symbol_order=24)

Clock_Ip_Get_SCS_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7518;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 _12;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_0_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 15;
  if (_4 != 8)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Frequency_11 = Clock_Ip_Get_FIRC_CLK_Frequency ();
  goto <bb 5>; [INV]

  <bb 4> :
  Frequency_9 = Clock_Ip_Get_PLL_PHI0_Frequency ();

  <bb 5> :
  # Frequency_5 = PHI <Frequency_11(3), Frequency_9(4)>
  _12 = Frequency_5;

  <bb 6> :
<L3>:
  return _12;

}



;; Function Clock_Ip_Get_CORE_CLK_Frequency (Clock_Ip_Get_CORE_CLK_Frequency, funcdef_no=14, decl_uid=6615, cgraph_uid=15, symbol_order=25)

Clock_Ip_Get_CORE_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7522;
  long unsigned int D.7521;
  long unsigned int D.7520;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct MC_CGM_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _12;
  long unsigned int _14;
  uint32 _16;

  <bb 2> :
  Frequency_11 = Clock_Ip_Get_SCS_CLK_Frequency ();
  _1 = 1076723712B;
  _2 ={v} _1->MUX_0_DC_0;
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _12 = Clock_Ip_au32EnableDivider[_4];
  Frequency_13 = _12 & Frequency_11;
  _5 = 1076723712B;
  _6 ={v} _5->MUX_0_DC_0;
  _7 = _6 >> 16;
  _8 = _7 & 7;
  _14 = _8 + 1;
  Frequency_15 = Frequency_13 / _14;
  _16 = Frequency_15;

  <bb 3> :
<L0>:
  return _16;

}



;; Function Clock_Ip_Get_AIPS_PLAT_CLK_Frequency (Clock_Ip_Get_AIPS_PLAT_CLK_Frequency, funcdef_no=15, decl_uid=6617, cgraph_uid=16, symbol_order=26)

Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7526;
  long unsigned int D.7525;
  long unsigned int D.7524;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct MC_CGM_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _12;
  long unsigned int _14;
  uint32 _16;

  <bb 2> :
  Frequency_11 = Clock_Ip_Get_SCS_CLK_Frequency ();
  _1 = 1076723712B;
  _2 ={v} _1->MUX_0_DC_1;
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _12 = Clock_Ip_au32EnableDivider[_4];
  Frequency_13 = _12 & Frequency_11;
  _5 = 1076723712B;
  _6 ={v} _5->MUX_0_DC_1;
  _7 = _6 >> 16;
  _8 = _7 & 7;
  _14 = _8 + 1;
  Frequency_15 = Frequency_13 / _14;
  _16 = Frequency_15;

  <bb 3> :
<L0>:
  return _16;

}



;; Function Clock_Ip_Get_AIPS_SLOW_CLK_Frequency (Clock_Ip_Get_AIPS_SLOW_CLK_Frequency, funcdef_no=16, decl_uid=6619, cgraph_uid=17, symbol_order=27)

Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7530;
  long unsigned int D.7529;
  long unsigned int D.7528;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct MC_CGM_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _12;
  long unsigned int _14;
  uint32 _16;

  <bb 2> :
  Frequency_11 = Clock_Ip_Get_SCS_CLK_Frequency ();
  _1 = 1076723712B;
  _2 ={v} _1->MUX_0_DC_2;
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _12 = Clock_Ip_au32EnableDivider[_4];
  Frequency_13 = _12 & Frequency_11;
  _5 = 1076723712B;
  _6 ={v} _5->MUX_0_DC_2;
  _7 = _6 >> 16;
  _8 = _7 & 15;
  _14 = _8 + 1;
  Frequency_15 = Frequency_13 / _14;
  _16 = Frequency_15;

  <bb 3> :
<L0>:
  return _16;

}



;; Function Clock_Ip_Get_HSE_CLK_Frequency (Clock_Ip_Get_HSE_CLK_Frequency, funcdef_no=17, decl_uid=6621, cgraph_uid=18, symbol_order=28)

Clock_Ip_Get_HSE_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7534;
  long unsigned int D.7533;
  long unsigned int D.7532;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct MC_CGM_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _12;
  long unsigned int _14;
  uint32 _16;

  <bb 2> :
  Frequency_11 = Clock_Ip_Get_SCS_CLK_Frequency ();
  _1 = 1076723712B;
  _2 ={v} _1->MUX_0_DC_3;
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _12 = Clock_Ip_au32EnableDivider[_4];
  Frequency_13 = _12 & Frequency_11;
  _5 = 1076723712B;
  _6 ={v} _5->MUX_0_DC_3;
  _7 = _6 >> 16;
  _8 = _7 & 7;
  _14 = _8 + 1;
  Frequency_15 = Frequency_13 / _14;
  _16 = Frequency_15;

  <bb 3> :
<L0>:
  return _16;

}



;; Function Clock_Ip_Get_DCM_CLK_Frequency (Clock_Ip_Get_DCM_CLK_Frequency, funcdef_no=18, decl_uid=6623, cgraph_uid=19, symbol_order=29)

Clock_Ip_Get_DCM_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7538;
  long unsigned int D.7537;
  long unsigned int D.7536;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct MC_CGM_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _12;
  long unsigned int _14;
  uint32 _16;

  <bb 2> :
  Frequency_11 = Clock_Ip_Get_SCS_CLK_Frequency ();
  _1 = 1076723712B;
  _2 ={v} _1->MUX_0_DC_4;
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _12 = Clock_Ip_au32EnableDivider[_4];
  Frequency_13 = _12 & Frequency_11;
  _5 = 1076723712B;
  _6 ={v} _5->MUX_0_DC_4;
  _7 = _6 >> 16;
  _8 = _7 & 7;
  _14 = _8 + 1;
  Frequency_15 = Frequency_13 / _14;
  _16 = Frequency_15;

  <bb 3> :
<L0>:
  return _16;

}



;; Function Clock_Ip_Get_LBIST_CLK_Frequency (Clock_Ip_Get_LBIST_CLK_Frequency, funcdef_no=19, decl_uid=6625, cgraph_uid=20, symbol_order=30)

Clock_Ip_Get_LBIST_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7542;
  long unsigned int D.7541;
  long unsigned int D.7540;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct MC_CGM_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _12;
  long unsigned int _14;
  uint32 _16;

  <bb 2> :
  Frequency_11 = Clock_Ip_Get_SCS_CLK_Frequency ();
  _1 = 1076723712B;
  _2 ={v} _1->MUX_0_DC_5;
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _12 = Clock_Ip_au32EnableDivider[_4];
  Frequency_13 = _12 & Frequency_11;
  _5 = 1076723712B;
  _6 ={v} _5->MUX_0_DC_5;
  _7 = _6 >> 16;
  _8 = _7 & 7;
  _14 = _8 + 1;
  Frequency_15 = Frequency_13 / _14;
  _16 = Frequency_15;

  <bb 3> :
<L0>:
  return _16;

}



;; Function Clock_Ip_Get_QSPI_MEM_CLK_Frequency (Clock_Ip_Get_QSPI_MEM_CLK_Frequency, funcdef_no=20, decl_uid=6627, cgraph_uid=21, symbol_order=31)

Clock_Ip_Get_QSPI_MEM_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7546;
  long unsigned int D.7545;
  long unsigned int D.7544;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct MC_CGM_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _12;
  long unsigned int _14;
  uint32 _16;

  <bb 2> :
  Frequency_11 = Clock_Ip_Get_SCS_CLK_Frequency ();
  _1 = 1076723712B;
  _2 ={v} _1->MUX_0_DC_6;
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _12 = Clock_Ip_au32EnableDivider[_4];
  Frequency_13 = _12 & Frequency_11;
  _5 = 1076723712B;
  _6 ={v} _5->MUX_0_DC_6;
  _7 = _6 >> 16;
  _8 = _7 & 7;
  _14 = _8 + 1;
  Frequency_15 = Frequency_13 / _14;
  _16 = Frequency_15;

  <bb 3> :
<L0>:
  return _16;

}



;; Function Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency (Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency, funcdef_no=21, decl_uid=6629, cgraph_uid=22, symbol_order=32)

Clock_Ip_Get_CLKOUT_RUN_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7550;
  long unsigned int D.7549;
  long unsigned int D.7548;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  struct MC_CGM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct MC_CGM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _17;
  long unsigned int _19;
  uint32 _21;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_6_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 63;
  _5 = Clock_Ip_apfFreqTableClkSrc[_4];
  Frequency_16 = _5 ();
  _6 = 1076723712B;
  _7 ={v} _6->MUX_6_DC_0;
  _8 = _7 >> 31;
  _9 = _8 & 1;
  _17 = Clock_Ip_au32EnableDivider[_9];
  Frequency_18 = _17 & Frequency_16;
  _10 = 1076723712B;
  _11 ={v} _10->MUX_6_DC_0;
  _12 = _11 >> 16;
  _13 = _12 & 63;
  _19 = _13 + 1;
  Frequency_20 = Frequency_18 / _19;
  _21 = Frequency_20;

  <bb 3> :
<L0>:
  return _21;

}



;; Function Clock_Ip_Get_ADC0_CLK_Frequency (Clock_Ip_Get_ADC0_CLK_Frequency, funcdef_no=22, decl_uid=6631, cgraph_uid=23, symbol_order=33)

Clock_Ip_Get_ADC0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7553;
  long unsigned int D.7552;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 >> 8;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_ADC1_CLK_Frequency (Clock_Ip_Get_ADC1_CLK_Frequency, funcdef_no=23, decl_uid=6633, cgraph_uid=24, symbol_order=34)

Clock_Ip_Get_ADC1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7556;
  long unsigned int D.7555;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 >> 9;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_ADC2_CLK_Frequency (Clock_Ip_Get_ADC2_CLK_Frequency, funcdef_no=24, decl_uid=6635, cgraph_uid=25, symbol_order=35)

Clock_Ip_Get_ADC2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7559;
  long unsigned int D.7558;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 >> 10;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_BCTU0_CLK_Frequency (Clock_Ip_Get_BCTU0_CLK_Frequency, funcdef_no=25, decl_uid=6637, cgraph_uid=26, symbol_order=36)

Clock_Ip_Get_BCTU0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7562;
  long unsigned int D.7561;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 >> 1;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency (Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency, funcdef_no=26, decl_uid=6639, cgraph_uid=27, symbol_order=37)

Clock_Ip_Get_CLKOUT_STANDBY_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7566;
  long unsigned int D.7565;
  long unsigned int D.7564;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  struct MC_CGM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct MC_CGM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _17;
  long unsigned int _19;
  uint32 _21;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_5_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 63;
  _5 = Clock_Ip_apfFreqTableClkSrc[_4];
  Frequency_16 = _5 ();
  _6 = 1076723712B;
  _7 ={v} _6->MUX_5_DC_0;
  _8 = _7 >> 31;
  _9 = _8 & 1;
  _17 = Clock_Ip_au32EnableDivider[_9];
  Frequency_18 = _17 & Frequency_16;
  _10 = 1076723712B;
  _11 ={v} _10->MUX_5_DC_0;
  _12 = _11 >> 16;
  _13 = _12 & 7;
  _19 = _13 + 1;
  Frequency_20 = Frequency_18 / _19;
  _21 = Frequency_20;

  <bb 3> :
<L0>:
  return _21;

}



;; Function Clock_Ip_Get_CMP0_CLK_Frequency (Clock_Ip_Get_CMP0_CLK_Frequency, funcdef_no=27, decl_uid=6641, cgraph_uid=28, symbol_order=38)

Clock_Ip_Get_CMP0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7569;
  long unsigned int D.7568;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 28;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_CMP1_CLK_Frequency (Clock_Ip_Get_CMP1_CLK_Frequency, funcdef_no=28, decl_uid=6643, cgraph_uid=29, symbol_order=39)

Clock_Ip_Get_CMP1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7572;
  long unsigned int D.7571;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 29;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_CMP2_CLK_Frequency (Clock_Ip_Get_CMP2_CLK_Frequency, funcdef_no=29, decl_uid=6645, cgraph_uid=30, symbol_order=40)

Clock_Ip_Get_CMP2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7575;
  long unsigned int D.7574;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 26;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_CRC0_CLK_Frequency (Clock_Ip_Get_CRC0_CLK_Frequency, funcdef_no=30, decl_uid=6647, cgraph_uid=31, symbol_order=41)

Clock_Ip_Get_CRC0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7578;
  long unsigned int D.7577;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;
  uint32 _9;

  <bb 2> :
  Frequency_6 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB3_STAT;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = _7 & Frequency_6;
  _9 = Frequency_8;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Clock_Ip_Get_DMAMUX0_CLK_Frequency (Clock_Ip_Get_DMAMUX0_CLK_Frequency, funcdef_no=31, decl_uid=6649, cgraph_uid=32, symbol_order=42)

Clock_Ip_Get_DMAMUX0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7581;
  long unsigned int D.7580;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;
  uint32 _9;

  <bb 2> :
  Frequency_6 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB1_STAT;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = _7 & Frequency_6;
  _9 = Frequency_8;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Clock_Ip_Get_DMAMUX1_CLK_Frequency (Clock_Ip_Get_DMAMUX1_CLK_Frequency, funcdef_no=32, decl_uid=6651, cgraph_uid=33, symbol_order=43)

Clock_Ip_Get_DMAMUX1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7584;
  long unsigned int D.7583;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB1_STAT;
  _3 = _2 >> 1;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_CLK_Frequency (Clock_Ip_Get_EDMA0_CLK_Frequency, funcdef_no=33, decl_uid=6653, cgraph_uid=34, symbol_order=44)

Clock_Ip_Get_EDMA0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7587;
  long unsigned int D.7586;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 3;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency, funcdef_no=34, decl_uid=6655, cgraph_uid=35, symbol_order=45)

Clock_Ip_Get_EDMA0_TCD0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7590;
  long unsigned int D.7589;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 4;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency, funcdef_no=35, decl_uid=6657, cgraph_uid=36, symbol_order=46)

Clock_Ip_Get_EDMA0_TCD1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7593;
  long unsigned int D.7592;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 5;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency, funcdef_no=36, decl_uid=6659, cgraph_uid=37, symbol_order=47)

Clock_Ip_Get_EDMA0_TCD2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7596;
  long unsigned int D.7595;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 6;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency, funcdef_no=37, decl_uid=6661, cgraph_uid=38, symbol_order=48)

Clock_Ip_Get_EDMA0_TCD3_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7599;
  long unsigned int D.7598;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 7;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency, funcdef_no=38, decl_uid=6663, cgraph_uid=39, symbol_order=49)

Clock_Ip_Get_EDMA0_TCD4_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7602;
  long unsigned int D.7601;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 8;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency, funcdef_no=39, decl_uid=6665, cgraph_uid=40, symbol_order=50)

Clock_Ip_Get_EDMA0_TCD5_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7605;
  long unsigned int D.7604;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 9;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency, funcdef_no=40, decl_uid=6667, cgraph_uid=41, symbol_order=51)

Clock_Ip_Get_EDMA0_TCD6_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7608;
  long unsigned int D.7607;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 10;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency, funcdef_no=41, decl_uid=6669, cgraph_uid=42, symbol_order=52)

Clock_Ip_Get_EDMA0_TCD7_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7611;
  long unsigned int D.7610;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 11;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency, funcdef_no=42, decl_uid=6671, cgraph_uid=43, symbol_order=53)

Clock_Ip_Get_EDMA0_TCD8_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7614;
  long unsigned int D.7613;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 12;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency, funcdef_no=43, decl_uid=6673, cgraph_uid=44, symbol_order=54)

Clock_Ip_Get_EDMA0_TCD9_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7617;
  long unsigned int D.7616;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 13;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency, funcdef_no=44, decl_uid=6675, cgraph_uid=45, symbol_order=55)

Clock_Ip_Get_EDMA0_TCD10_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7620;
  long unsigned int D.7619;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 14;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency, funcdef_no=45, decl_uid=6677, cgraph_uid=46, symbol_order=56)

Clock_Ip_Get_EDMA0_TCD11_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7623;
  long unsigned int D.7622;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 15;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency, funcdef_no=46, decl_uid=6679, cgraph_uid=47, symbol_order=57)

Clock_Ip_Get_EDMA0_TCD12_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7626;
  long unsigned int D.7625;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 4;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency, funcdef_no=47, decl_uid=6681, cgraph_uid=48, symbol_order=58)

Clock_Ip_Get_EDMA0_TCD13_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7629;
  long unsigned int D.7628;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 5;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency, funcdef_no=48, decl_uid=6683, cgraph_uid=49, symbol_order=59)

Clock_Ip_Get_EDMA0_TCD14_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7632;
  long unsigned int D.7631;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 6;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency, funcdef_no=49, decl_uid=6685, cgraph_uid=50, symbol_order=60)

Clock_Ip_Get_EDMA0_TCD15_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7635;
  long unsigned int D.7634;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 7;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency, funcdef_no=50, decl_uid=6687, cgraph_uid=51, symbol_order=61)

Clock_Ip_Get_EDMA0_TCD16_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7638;
  long unsigned int D.7637;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 8;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency, funcdef_no=51, decl_uid=6689, cgraph_uid=52, symbol_order=62)

Clock_Ip_Get_EDMA0_TCD17_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7641;
  long unsigned int D.7640;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 9;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency, funcdef_no=52, decl_uid=6691, cgraph_uid=53, symbol_order=63)

Clock_Ip_Get_EDMA0_TCD18_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7644;
  long unsigned int D.7643;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 10;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency, funcdef_no=53, decl_uid=6693, cgraph_uid=54, symbol_order=64)

Clock_Ip_Get_EDMA0_TCD19_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7647;
  long unsigned int D.7646;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 11;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency, funcdef_no=54, decl_uid=6695, cgraph_uid=55, symbol_order=65)

Clock_Ip_Get_EDMA0_TCD20_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7650;
  long unsigned int D.7649;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 12;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency, funcdef_no=55, decl_uid=6697, cgraph_uid=56, symbol_order=66)

Clock_Ip_Get_EDMA0_TCD21_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7653;
  long unsigned int D.7652;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 13;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency, funcdef_no=56, decl_uid=6699, cgraph_uid=57, symbol_order=67)

Clock_Ip_Get_EDMA0_TCD22_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7656;
  long unsigned int D.7655;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 14;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency, funcdef_no=57, decl_uid=6701, cgraph_uid=58, symbol_order=68)

Clock_Ip_Get_EDMA0_TCD23_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7659;
  long unsigned int D.7658;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 15;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency, funcdef_no=58, decl_uid=6703, cgraph_uid=59, symbol_order=69)

Clock_Ip_Get_EDMA0_TCD24_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7662;
  long unsigned int D.7661;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 16;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency, funcdef_no=59, decl_uid=6705, cgraph_uid=60, symbol_order=70)

Clock_Ip_Get_EDMA0_TCD25_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7665;
  long unsigned int D.7664;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 17;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency, funcdef_no=60, decl_uid=6707, cgraph_uid=61, symbol_order=71)

Clock_Ip_Get_EDMA0_TCD26_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7668;
  long unsigned int D.7667;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 18;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency, funcdef_no=61, decl_uid=6709, cgraph_uid=62, symbol_order=72)

Clock_Ip_Get_EDMA0_TCD27_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7671;
  long unsigned int D.7670;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 19;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency, funcdef_no=62, decl_uid=6711, cgraph_uid=63, symbol_order=73)

Clock_Ip_Get_EDMA0_TCD28_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7674;
  long unsigned int D.7673;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 20;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency, funcdef_no=63, decl_uid=6713, cgraph_uid=64, symbol_order=74)

Clock_Ip_Get_EDMA0_TCD29_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7677;
  long unsigned int D.7676;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 21;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency, funcdef_no=64, decl_uid=6715, cgraph_uid=65, symbol_order=75)

Clock_Ip_Get_EDMA0_TCD30_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7680;
  long unsigned int D.7679;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 22;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency (Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency, funcdef_no=65, decl_uid=6717, cgraph_uid=66, symbol_order=76)

Clock_Ip_Get_EDMA0_TCD31_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7683;
  long unsigned int D.7682;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 23;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EIM_CLK_Frequency (Clock_Ip_Get_EIM_CLK_Frequency, funcdef_no=66, decl_uid=6719, cgraph_uid=67, symbol_order=77)

Clock_Ip_Get_EIM_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7686;
  long unsigned int D.7685;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 22;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EMAC_RX_CLK_Frequency (Clock_Ip_Get_EMAC_RX_CLK_Frequency, funcdef_no=67, decl_uid=6721, cgraph_uid=68, symbol_order=78)

Clock_Ip_Get_EMAC_RX_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7690;
  long unsigned int D.7689;
  long unsigned int D.7688;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  struct MC_CGM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct MC_CGM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _17;
  long unsigned int _19;
  uint32 _21;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_7_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 31;
  _5 = Clock_Ip_apfFreqTableClkSrc[_4];
  Frequency_16 = _5 ();
  _6 = 1076723712B;
  _7 ={v} _6->MUX_7_DC_0;
  _8 = _7 >> 31;
  _9 = _8 & 1;
  _17 = Clock_Ip_au32EnableDivider[_9];
  Frequency_18 = _17 & Frequency_16;
  _10 = 1076723712B;
  _11 ={v} _10->MUX_7_DC_0;
  _12 = _11 >> 16;
  _13 = _12 & 63;
  _19 = _13 + 1;
  Frequency_20 = Frequency_18 / _19;
  _21 = Frequency_20;

  <bb 3> :
<L0>:
  return _21;

}



;; Function Clock_Ip_Get_EMAC0_RX_CLK_Frequency (Clock_Ip_Get_EMAC0_RX_CLK_Frequency, funcdef_no=68, decl_uid=6723, cgraph_uid=69, symbol_order=79)

Clock_Ip_Get_EMAC0_RX_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7693;
  long unsigned int D.7692;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;
  uint32 _9;

  <bb 2> :
  Frequency_6 = Clock_Ip_Get_EMAC_RX_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = _7 & Frequency_6;
  _9 = Frequency_8;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Clock_Ip_Get_EMAC_TS_CLK_Frequency (Clock_Ip_Get_EMAC_TS_CLK_Frequency, funcdef_no=69, decl_uid=6725, cgraph_uid=70, symbol_order=80)

Clock_Ip_Get_EMAC_TS_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7697;
  long unsigned int D.7696;
  long unsigned int D.7695;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  struct MC_CGM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct MC_CGM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _17;
  long unsigned int _19;
  uint32 _21;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_9_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 31;
  _5 = Clock_Ip_apfFreqTableClkSrc[_4];
  Frequency_16 = _5 ();
  _6 = 1076723712B;
  _7 ={v} _6->MUX_9_DC_0;
  _8 = _7 >> 31;
  _9 = _8 & 1;
  _17 = Clock_Ip_au32EnableDivider[_9];
  Frequency_18 = _17 & Frequency_16;
  _10 = 1076723712B;
  _11 ={v} _10->MUX_9_DC_0;
  _12 = _11 >> 16;
  _13 = _12 & 63;
  _19 = _13 + 1;
  Frequency_20 = Frequency_18 / _19;
  _21 = Frequency_20;

  <bb 3> :
<L0>:
  return _21;

}



;; Function Clock_Ip_Get_EMAC0_TS_CLK_Frequency (Clock_Ip_Get_EMAC0_TS_CLK_Frequency, funcdef_no=70, decl_uid=6727, cgraph_uid=71, symbol_order=81)

Clock_Ip_Get_EMAC0_TS_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7700;
  long unsigned int D.7699;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;
  uint32 _9;

  <bb 2> :
  Frequency_6 = Clock_Ip_Get_EMAC_TS_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = _7 & Frequency_6;
  _9 = Frequency_8;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Clock_Ip_Get_EMAC_TX_CLK_Frequency (Clock_Ip_Get_EMAC_TX_CLK_Frequency, funcdef_no=71, decl_uid=6729, cgraph_uid=72, symbol_order=82)

Clock_Ip_Get_EMAC_TX_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7704;
  long unsigned int D.7703;
  long unsigned int D.7702;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  struct MC_CGM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct MC_CGM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _17;
  long unsigned int _19;
  uint32 _21;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_8_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 31;
  _5 = Clock_Ip_apfFreqTableClkSrc[_4];
  Frequency_16 = _5 ();
  _6 = 1076723712B;
  _7 ={v} _6->MUX_8_DC_0;
  _8 = _7 >> 31;
  _9 = _8 & 1;
  _17 = Clock_Ip_au32EnableDivider[_9];
  Frequency_18 = _17 & Frequency_16;
  _10 = 1076723712B;
  _11 ={v} _10->MUX_8_DC_0;
  _12 = _11 >> 16;
  _13 = _12 & 63;
  _19 = _13 + 1;
  Frequency_20 = Frequency_18 / _19;
  _21 = Frequency_20;

  <bb 3> :
<L0>:
  return _21;

}



;; Function Clock_Ip_Get_EMAC0_TX_CLK_Frequency (Clock_Ip_Get_EMAC0_TX_CLK_Frequency, funcdef_no=72, decl_uid=6731, cgraph_uid=73, symbol_order=83)

Clock_Ip_Get_EMAC0_TX_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7707;
  long unsigned int D.7706;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;
  uint32 _9;

  <bb 2> :
  Frequency_6 = Clock_Ip_Get_EMAC_TX_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = _7 & Frequency_6;
  _9 = Frequency_8;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Clock_Ip_Get_EMIOS0_CLK_Frequency (Clock_Ip_Get_EMIOS0_CLK_Frequency, funcdef_no=73, decl_uid=6733, cgraph_uid=74, symbol_order=84)

Clock_Ip_Get_EMIOS0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7710;
  long unsigned int D.7709;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 >> 2;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EMIOS1_CLK_Frequency (Clock_Ip_Get_EMIOS1_CLK_Frequency, funcdef_no=74, decl_uid=6735, cgraph_uid=75, symbol_order=85)

Clock_Ip_Get_EMIOS1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7713;
  long unsigned int D.7712;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 >> 3;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_EMIOS2_CLK_Frequency (Clock_Ip_Get_EMIOS2_CLK_Frequency, funcdef_no=75, decl_uid=6737, cgraph_uid=76, symbol_order=86)

Clock_Ip_Get_EMIOS2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7716;
  long unsigned int D.7715;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 >> 4;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_ERM0_CLK_Frequency (Clock_Ip_Get_ERM0_CLK_Frequency, funcdef_no=76, decl_uid=6739, cgraph_uid=77, symbol_order=87)

Clock_Ip_Get_ERM0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7719;
  long unsigned int D.7718;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 23;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_FLEXCANA_CLK_Frequency (Clock_Ip_Get_FLEXCANA_CLK_Frequency, funcdef_no=77, decl_uid=6741, cgraph_uid=78, symbol_order=88)

Clock_Ip_Get_FLEXCANA_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7723;
  long unsigned int D.7722;
  long unsigned int D.7721;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  struct MC_CGM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct MC_CGM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _17;
  long unsigned int _19;
  uint32 _21;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_3_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 31;
  _5 = Clock_Ip_apfFreqTableClkSrc[_4];
  Frequency_16 = _5 ();
  _6 = 1076723712B;
  _7 ={v} _6->MUX_3_DC_0;
  _8 = _7 >> 31;
  _9 = _8 & 1;
  _17 = Clock_Ip_au32EnableDivider[_9];
  Frequency_18 = _17 & Frequency_16;
  _10 = 1076723712B;
  _11 ={v} _10->MUX_3_DC_0;
  _12 = _11 >> 16;
  _13 = _12 & 3;
  _19 = _13 + 1;
  Frequency_20 = Frequency_18 / _19;
  _21 = Frequency_20;

  <bb 3> :
<L0>:
  return _21;

}



;; Function Clock_Ip_Get_FLEXCAN0_CLK_Frequency (Clock_Ip_Get_FLEXCAN0_CLK_Frequency, funcdef_no=78, decl_uid=6743, cgraph_uid=79, symbol_order=89)

Clock_Ip_Get_FLEXCAN0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7726;
  long unsigned int D.7725;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_FLEXCANA_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 1;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_FLEXCAN1_CLK_Frequency (Clock_Ip_Get_FLEXCAN1_CLK_Frequency, funcdef_no=79, decl_uid=6745, cgraph_uid=80, symbol_order=90)

Clock_Ip_Get_FLEXCAN1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7729;
  long unsigned int D.7728;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_FLEXCANA_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 2;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_FLEXCAN2_CLK_Frequency (Clock_Ip_Get_FLEXCAN2_CLK_Frequency, funcdef_no=80, decl_uid=6747, cgraph_uid=81, symbol_order=91)

Clock_Ip_Get_FLEXCAN2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7732;
  long unsigned int D.7731;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_FLEXCANA_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 3;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_FLEXCANB_CLK_Frequency (Clock_Ip_Get_FLEXCANB_CLK_Frequency, funcdef_no=81, decl_uid=6749, cgraph_uid=82, symbol_order=92)

Clock_Ip_Get_FLEXCANB_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7736;
  long unsigned int D.7735;
  long unsigned int D.7734;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  struct MC_CGM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct MC_CGM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _17;
  long unsigned int _19;
  uint32 _21;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_4_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 31;
  _5 = Clock_Ip_apfFreqTableClkSrc[_4];
  Frequency_16 = _5 ();
  _6 = 1076723712B;
  _7 ={v} _6->MUX_4_DC_0;
  _8 = _7 >> 31;
  _9 = _8 & 1;
  _17 = Clock_Ip_au32EnableDivider[_9];
  Frequency_18 = _17 & Frequency_16;
  _10 = 1076723712B;
  _11 ={v} _10->MUX_4_DC_0;
  _12 = _11 >> 16;
  _13 = _12 & 3;
  _19 = _13 + 1;
  Frequency_20 = Frequency_18 / _19;
  _21 = Frequency_20;

  <bb 3> :
<L0>:
  return _21;

}



;; Function Clock_Ip_Get_FLEXCAN3_CLK_Frequency (Clock_Ip_Get_FLEXCAN3_CLK_Frequency, funcdef_no=82, decl_uid=6751, cgraph_uid=83, symbol_order=93)

Clock_Ip_Get_FLEXCAN3_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7739;
  long unsigned int D.7738;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_FLEXCANB_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 4;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_FLEXCAN4_CLK_Frequency (Clock_Ip_Get_FLEXCAN4_CLK_Frequency, funcdef_no=83, decl_uid=6753, cgraph_uid=84, symbol_order=94)

Clock_Ip_Get_FLEXCAN4_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7742;
  long unsigned int D.7741;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_FLEXCANB_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 5;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_FLEXCAN5_CLK_Frequency (Clock_Ip_Get_FLEXCAN5_CLK_Frequency, funcdef_no=84, decl_uid=6755, cgraph_uid=85, symbol_order=95)

Clock_Ip_Get_FLEXCAN5_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7745;
  long unsigned int D.7744;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_FLEXCANB_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 6;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_FLEXIO0_CLK_Frequency (Clock_Ip_Get_FLEXIO0_CLK_Frequency, funcdef_no=85, decl_uid=6757, cgraph_uid=86, symbol_order=96)

Clock_Ip_Get_FLEXIO0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7748;
  long unsigned int D.7747;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 9;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_INTM_CLK_Frequency (Clock_Ip_Get_INTM_CLK_Frequency, funcdef_no=86, decl_uid=6759, cgraph_uid=87, symbol_order=97)

Clock_Ip_Get_INTM_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7751;
  long unsigned int D.7750;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LCU0_CLK_Frequency (Clock_Ip_Get_LCU0_CLK_Frequency, funcdef_no=87, decl_uid=6761, cgraph_uid=88, symbol_order=98)

Clock_Ip_Get_LCU0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7754;
  long unsigned int D.7753;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 >> 6;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LCU1_CLK_Frequency (Clock_Ip_Get_LCU1_CLK_Frequency, funcdef_no=88, decl_uid=6763, cgraph_uid=89, symbol_order=99)

Clock_Ip_Get_LCU1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7757;
  long unsigned int D.7756;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 >> 7;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPI2C0_CLK_Frequency (Clock_Ip_Get_LPI2C0_CLK_Frequency, funcdef_no=89, decl_uid=6765, cgraph_uid=90, symbol_order=100)

Clock_Ip_Get_LPI2C0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7760;
  long unsigned int D.7759;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 20;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPI2C1_CLK_Frequency (Clock_Ip_Get_LPI2C1_CLK_Frequency, funcdef_no=90, decl_uid=6767, cgraph_uid=91, symbol_order=101)

Clock_Ip_Get_LPI2C1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7763;
  long unsigned int D.7762;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 21;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPSPI0_CLK_Frequency (Clock_Ip_Get_LPSPI0_CLK_Frequency, funcdef_no=91, decl_uid=6769, cgraph_uid=92, symbol_order=102)

Clock_Ip_Get_LPSPI0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7766;
  long unsigned int D.7765;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 22;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPSPI1_CLK_Frequency (Clock_Ip_Get_LPSPI1_CLK_Frequency, funcdef_no=92, decl_uid=6771, cgraph_uid=93, symbol_order=103)

Clock_Ip_Get_LPSPI1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7769;
  long unsigned int D.7768;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 23;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPSPI2_CLK_Frequency (Clock_Ip_Get_LPSPI2_CLK_Frequency, funcdef_no=93, decl_uid=6773, cgraph_uid=94, symbol_order=104)

Clock_Ip_Get_LPSPI2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7772;
  long unsigned int D.7771;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 24;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPSPI3_CLK_Frequency (Clock_Ip_Get_LPSPI3_CLK_Frequency, funcdef_no=94, decl_uid=6775, cgraph_uid=95, symbol_order=105)

Clock_Ip_Get_LPSPI3_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7775;
  long unsigned int D.7774;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 25;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPSPI4_CLK_Frequency (Clock_Ip_Get_LPSPI4_CLK_Frequency, funcdef_no=95, decl_uid=6777, cgraph_uid=96, symbol_order=106)

Clock_Ip_Get_LPSPI4_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7778;
  long unsigned int D.7777;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 15;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPSPI5_CLK_Frequency (Clock_Ip_Get_LPSPI5_CLK_Frequency, funcdef_no=96, decl_uid=6779, cgraph_uid=97, symbol_order=107)

Clock_Ip_Get_LPSPI5_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7781;
  long unsigned int D.7780;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 16;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART0_CLK_Frequency (Clock_Ip_Get_LPUART0_CLK_Frequency, funcdef_no=97, decl_uid=6781, cgraph_uid=98, symbol_order=108)

Clock_Ip_Get_LPUART0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7784;
  long unsigned int D.7783;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 10;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART1_CLK_Frequency (Clock_Ip_Get_LPUART1_CLK_Frequency, funcdef_no=98, decl_uid=6783, cgraph_uid=99, symbol_order=109)

Clock_Ip_Get_LPUART1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7787;
  long unsigned int D.7786;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 11;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART2_CLK_Frequency (Clock_Ip_Get_LPUART2_CLK_Frequency, funcdef_no=99, decl_uid=6785, cgraph_uid=100, symbol_order=110)

Clock_Ip_Get_LPUART2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7790;
  long unsigned int D.7789;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 12;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART3_CLK_Frequency (Clock_Ip_Get_LPUART3_CLK_Frequency, funcdef_no=100, decl_uid=6787, cgraph_uid=101, symbol_order=111)

Clock_Ip_Get_LPUART3_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7793;
  long unsigned int D.7792;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 13;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART4_CLK_Frequency (Clock_Ip_Get_LPUART4_CLK_Frequency, funcdef_no=101, decl_uid=6789, cgraph_uid=102, symbol_order=112)

Clock_Ip_Get_LPUART4_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7796;
  long unsigned int D.7795;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 14;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART5_CLK_Frequency (Clock_Ip_Get_LPUART5_CLK_Frequency, funcdef_no=102, decl_uid=6791, cgraph_uid=103, symbol_order=113)

Clock_Ip_Get_LPUART5_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7799;
  long unsigned int D.7798;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 15;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART6_CLK_Frequency (Clock_Ip_Get_LPUART6_CLK_Frequency, funcdef_no=103, decl_uid=6793, cgraph_uid=104, symbol_order=114)

Clock_Ip_Get_LPUART6_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7802;
  long unsigned int D.7801;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 16;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART7_CLK_Frequency (Clock_Ip_Get_LPUART7_CLK_Frequency, funcdef_no=104, decl_uid=6795, cgraph_uid=105, symbol_order=115)

Clock_Ip_Get_LPUART7_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7805;
  long unsigned int D.7804;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 17;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART8_CLK_Frequency (Clock_Ip_Get_LPUART8_CLK_Frequency, funcdef_no=105, decl_uid=6797, cgraph_uid=106, symbol_order=116)

Clock_Ip_Get_LPUART8_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7808;
  long unsigned int D.7807;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 3;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART9_CLK_Frequency (Clock_Ip_Get_LPUART9_CLK_Frequency, funcdef_no=106, decl_uid=6799, cgraph_uid=107, symbol_order=117)

Clock_Ip_Get_LPUART9_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7811;
  long unsigned int D.7810;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 4;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART10_CLK_Frequency (Clock_Ip_Get_LPUART10_CLK_Frequency, funcdef_no=107, decl_uid=6801, cgraph_uid=108, symbol_order=118)

Clock_Ip_Get_LPUART10_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7814;
  long unsigned int D.7813;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 5;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART11_CLK_Frequency (Clock_Ip_Get_LPUART11_CLK_Frequency, funcdef_no=108, decl_uid=6803, cgraph_uid=109, symbol_order=119)

Clock_Ip_Get_LPUART11_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7817;
  long unsigned int D.7816;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 6;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART12_CLK_Frequency (Clock_Ip_Get_LPUART12_CLK_Frequency, funcdef_no=109, decl_uid=6805, cgraph_uid=110, symbol_order=120)

Clock_Ip_Get_LPUART12_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7820;
  long unsigned int D.7819;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 7;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART13_CLK_Frequency (Clock_Ip_Get_LPUART13_CLK_Frequency, funcdef_no=110, decl_uid=6807, cgraph_uid=111, symbol_order=121)

Clock_Ip_Get_LPUART13_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7823;
  long unsigned int D.7822;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 8;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART14_CLK_Frequency (Clock_Ip_Get_LPUART14_CLK_Frequency, funcdef_no=111, decl_uid=6809, cgraph_uid=112, symbol_order=122)

Clock_Ip_Get_LPUART14_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7826;
  long unsigned int D.7825;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 9;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_LPUART15_CLK_Frequency (Clock_Ip_Get_LPUART15_CLK_Frequency, funcdef_no=112, decl_uid=6811, cgraph_uid=113, symbol_order=123)

Clock_Ip_Get_LPUART15_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7829;
  long unsigned int D.7828;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 10;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_MSCM_CLK_Frequency (Clock_Ip_Get_MSCM_CLK_Frequency, funcdef_no=113, decl_uid=6813, cgraph_uid=114, symbol_order=124)

Clock_Ip_Get_MSCM_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7832;
  long unsigned int D.7831;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 24;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_PIT0_CLK_Frequency (Clock_Ip_Get_PIT0_CLK_Frequency, funcdef_no=114, decl_uid=6815, cgraph_uid=115, symbol_order=125)

Clock_Ip_Get_PIT0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7835;
  long unsigned int D.7834;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 >> 12;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_PIT1_CLK_Frequency (Clock_Ip_Get_PIT1_CLK_Frequency, funcdef_no=115, decl_uid=6817, cgraph_uid=116, symbol_order=126)

Clock_Ip_Get_PIT1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7838;
  long unsigned int D.7837;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 >> 13;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_PIT2_CLK_Frequency (Clock_Ip_Get_PIT2_CLK_Frequency, funcdef_no=116, decl_uid=6819, cgraph_uid=117, symbol_order=127)

Clock_Ip_Get_PIT2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7841;
  long unsigned int D.7840;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB1_STAT;
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_QSPI0_CLK_Frequency (Clock_Ip_Get_QSPI0_CLK_Frequency, funcdef_no=117, decl_uid=6821, cgraph_uid=118, symbol_order=128)

Clock_Ip_Get_QSPI0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7844;
  long unsigned int D.7843;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_QSPI_SFCK_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 19;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_QSPI0_RAM_CLK_Frequency (Clock_Ip_Get_QSPI0_RAM_CLK_Frequency, funcdef_no=118, decl_uid=6823, cgraph_uid=119, symbol_order=129)

Clock_Ip_Get_QSPI0_RAM_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7847;
  long unsigned int D.7846;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_QSPI_MEM_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 19;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency (Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency, funcdef_no=119, decl_uid=6825, cgraph_uid=120, symbol_order=130)

Clock_Ip_Get_QSPI0_TX_MEM_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7850;
  long unsigned int D.7849;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_QSPI_MEM_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 19;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_QSPI_SFCK_CLK_Frequency (Clock_Ip_Get_QSPI_SFCK_CLK_Frequency, funcdef_no=120, decl_uid=6827, cgraph_uid=121, symbol_order=131)

Clock_Ip_Get_QSPI_SFCK_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7854;
  long unsigned int D.7853;
  long unsigned int D.7852;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  struct MC_CGM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct MC_CGM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _17;
  long unsigned int _19;
  uint32 _21;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_10_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 15;
  _5 = Clock_Ip_apfFreqTableClkSrc[_4];
  Frequency_16 = _5 ();
  _6 = 1076723712B;
  _7 ={v} _6->MUX_10_DC_0;
  _8 = _7 >> 31;
  _9 = _8 & 1;
  _17 = Clock_Ip_au32EnableDivider[_9];
  Frequency_18 = _17 & Frequency_16;
  _10 = 1076723712B;
  _11 ={v} _10->MUX_10_DC_0;
  _12 = _11 >> 16;
  _13 = _12 & 7;
  _19 = _13 + 1;
  Frequency_20 = Frequency_18 / _19;
  _21 = Frequency_20;

  <bb 3> :
<L0>:
  return _21;

}



;; Function Clock_Ip_Get_RTC_CLK_Frequency (Clock_Ip_Get_RTC_CLK_Frequency, funcdef_no=121, decl_uid=6829, cgraph_uid=122, symbol_order=132)

Clock_Ip_Get_RTC_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7856;
  uint32 _5;

  <bb 2> :
  Frequency_1 = 0;
  Frequency_4 = Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall ();
  _5 = Frequency_4;

  <bb 3> :
<L0>:
  return _5;

}



;; Function Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall (Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall, funcdef_no=122, decl_uid=6583, cgraph_uid=123, symbol_order=133)

Clock_Ip_Get_RTC_CLK_Frequency_TrustedCall ()
{
  uint32 Frequency;
  uint32 D.7858;
  struct RTC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  uint32 _9;

  <bb 2> :
  _1 = 1076396032B;
  _2 ={v} _1->RTCC;
  _3 = _2 >> 12;
  _4 = _3 & 3;
  _5 = Clock_Ip_apfFreqTableRTC_CLK[_4];
  Frequency_8 = _5 ();
  _9 = Frequency_8;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Clock_Ip_Get_RTC0_CLK_Frequency (Clock_Ip_Get_RTC0_CLK_Frequency, funcdef_no=123, decl_uid=6831, cgraph_uid=124, symbol_order=134)

Clock_Ip_Get_RTC0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7861;
  long unsigned int D.7860;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_RTC_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB1_STAT;
  _3 = _2 >> 2;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_SAI0_CLK_Frequency (Clock_Ip_Get_SAI0_CLK_Frequency, funcdef_no=124, decl_uid=6833, cgraph_uid=125, symbol_order=135)

Clock_Ip_Get_SAI0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7864;
  long unsigned int D.7863;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 27;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_SAI1_CLK_Frequency (Clock_Ip_Get_SAI1_CLK_Frequency, funcdef_no=125, decl_uid=6835, cgraph_uid=126, symbol_order=136)

Clock_Ip_Get_SAI1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7867;
  long unsigned int D.7866;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB1_STAT;
  _3 = _2 >> 23;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_SEMA42_CLK_Frequency (Clock_Ip_Get_SEMA42_CLK_Frequency, funcdef_no=126, decl_uid=6837, cgraph_uid=127, symbol_order=137)

Clock_Ip_Get_SEMA42_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7870;
  long unsigned int D.7869;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_PLAT_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 24;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_SIUL2_CLK_Frequency (Clock_Ip_Get_SIUL2_CLK_Frequency, funcdef_no=127, decl_uid=6839, cgraph_uid=128, symbol_order=138)

Clock_Ip_Get_SIUL2_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7873;
  long unsigned int D.7872;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB1_STAT;
  _3 = _2 >> 10;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_STCU0_CLK_Frequency (Clock_Ip_Get_STCU0_CLK_Frequency, funcdef_no=128, decl_uid=6841, cgraph_uid=129, symbol_order=139)

Clock_Ip_Get_STCU0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7876;
  long unsigned int D.7875;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB3_STAT;
  _3 = _2 >> 8;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_STMA_CLK_Frequency (Clock_Ip_Get_STMA_CLK_Frequency, funcdef_no=129, decl_uid=6843, cgraph_uid=130, symbol_order=140)

Clock_Ip_Get_STMA_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7880;
  long unsigned int D.7879;
  long unsigned int D.7878;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  struct MC_CGM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct MC_CGM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _17;
  long unsigned int _19;
  uint32 _21;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_1_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 31;
  _5 = Clock_Ip_apfFreqTableClkSrc[_4];
  Frequency_16 = _5 ();
  _6 = 1076723712B;
  _7 ={v} _6->MUX_1_DC_0;
  _8 = _7 >> 31;
  _9 = _8 & 1;
  _17 = Clock_Ip_au32EnableDivider[_9];
  Frequency_18 = _17 & Frequency_16;
  _10 = 1076723712B;
  _11 ={v} _10->MUX_1_DC_0;
  _12 = _11 >> 16;
  _13 = _12 & 1;
  _19 = _13 + 1;
  Frequency_20 = Frequency_18 / _19;
  _21 = Frequency_20;

  <bb 3> :
<L0>:
  return _21;

}



;; Function Clock_Ip_Get_STM0_CLK_Frequency (Clock_Ip_Get_STM0_CLK_Frequency, funcdef_no=130, decl_uid=6845, cgraph_uid=131, symbol_order=141)

Clock_Ip_Get_STM0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7883;
  long unsigned int D.7882;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_STMA_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 29;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_STMB_CLK_Frequency (Clock_Ip_Get_STMB_CLK_Frequency, funcdef_no=131, decl_uid=6847, cgraph_uid=132, symbol_order=142)

Clock_Ip_Get_STMB_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7887;
  long unsigned int D.7886;
  long unsigned int D.7885;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  struct MC_CGM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct MC_CGM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _17;
  long unsigned int _19;
  uint32 _21;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_2_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 31;
  _5 = Clock_Ip_apfFreqTableClkSrc[_4];
  Frequency_16 = _5 ();
  _6 = 1076723712B;
  _7 ={v} _6->MUX_2_DC_0;
  _8 = _7 >> 31;
  _9 = _8 & 1;
  _17 = Clock_Ip_au32EnableDivider[_9];
  Frequency_18 = _17 & Frequency_16;
  _10 = 1076723712B;
  _11 ={v} _10->MUX_2_DC_0;
  _12 = _11 >> 16;
  _13 = _12 & 1;
  _19 = _13 + 1;
  Frequency_20 = Frequency_18 / _19;
  _21 = Frequency_20;

  <bb 3> :
<L0>:
  return _21;

}



;; Function Clock_Ip_Get_STM1_CLK_Frequency (Clock_Ip_Get_STM1_CLK_Frequency, funcdef_no=132, decl_uid=6849, cgraph_uid=133, symbol_order=143)

Clock_Ip_Get_STM1_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7890;
  long unsigned int D.7889;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_STMB_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN2_COFB0_STAT;
  _3 = _2 >> 29;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_SWT0_CLK_Frequency (Clock_Ip_Get_SWT0_CLK_Frequency, funcdef_no=133, decl_uid=6851, cgraph_uid=134, symbol_order=144)

Clock_Ip_Get_SWT0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7893;
  long unsigned int D.7892;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_SIRC_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB0_STAT;
  _3 = _2 >> 28;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_TEMPSENSE_CLK_Frequency (Clock_Ip_Get_TEMPSENSE_CLK_Frequency, funcdef_no=134, decl_uid=6853, cgraph_uid=135, symbol_order=145)

Clock_Ip_Get_TEMPSENSE_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7896;
  long unsigned int D.7895;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_CORE_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB2_STAT;
  _3 = _2 >> 31;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_TRACE_CLK_Frequency (Clock_Ip_Get_TRACE_CLK_Frequency, funcdef_no=135, decl_uid=6855, cgraph_uid=136, symbol_order=146)

Clock_Ip_Get_TRACE_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7900;
  long unsigned int D.7899;
  long unsigned int D.7898;
  struct MC_CGM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T77d>) (void) _5;
  struct MC_CGM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct MC_CGM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _17;
  long unsigned int _19;
  uint32 _21;

  <bb 2> :
  _1 = 1076723712B;
  _2 ={v} _1->MUX_11_CSS;
  _3 = _2 >> 24;
  _4 = _3 & 15;
  _5 = Clock_Ip_apfFreqTableClkSrc[_4];
  Frequency_16 = _5 ();
  _6 = 1076723712B;
  _7 ={v} _6->MUX_11_DC_0;
  _8 = _7 >> 31;
  _9 = _8 & 1;
  _17 = Clock_Ip_au32EnableDivider[_9];
  Frequency_18 = _17 & Frequency_16;
  _10 = 1076723712B;
  _11 ={v} _10->MUX_11_DC_0;
  _12 = _11 >> 16;
  _13 = _12 & 7;
  _19 = _13 + 1;
  Frequency_20 = Frequency_18 / _19;
  _21 = Frequency_20;

  <bb 3> :
<L0>:
  return _21;

}



;; Function Clock_Ip_Get_TRGMUX0_CLK_Frequency (Clock_Ip_Get_TRGMUX0_CLK_Frequency, funcdef_no=136, decl_uid=6857, cgraph_uid=137, symbol_order=147)

Clock_Ip_Get_TRGMUX0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7903;
  long unsigned int D.7902;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;
  uint32 _9;

  <bb 2> :
  Frequency_6 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN0_COFB1_STAT;
  _3 = _2 & 1;
  _7 = Clock_Ip_u32EnableGate[_3];
  Frequency_8 = _7 & Frequency_6;
  _9 = Frequency_8;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Clock_Ip_Get_TSENSE0_CLK_Frequency (Clock_Ip_Get_TSENSE0_CLK_Frequency, funcdef_no=137, decl_uid=6859, cgraph_uid=138, symbol_order=148)

Clock_Ip_Get_TSENSE0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7906;
  long unsigned int D.7905;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB1_STAT;
  _3 = _2 >> 17;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_Get_WKPU0_CLK_Frequency (Clock_Ip_Get_WKPU0_CLK_Frequency, funcdef_no=138, decl_uid=6861, cgraph_uid=139, symbol_order=149)

Clock_Ip_Get_WKPU0_CLK_Frequency ()
{
  uint32 Frequency;
  uint32 D.7909;
  long unsigned int D.7908;
  struct MC_ME_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  Frequency_7 = Clock_Ip_Get_AIPS_SLOW_CLK_Frequency ();
  _1 = 1076740096B;
  _2 ={v} _1->PRTN1_COFB1_STAT;
  _3 = _2 >> 13;
  _4 = _3 & 1;
  _8 = Clock_Ip_u32EnableGate[_4];
  Frequency_9 = _8 & Frequency_7;
  _10 = Frequency_9;

  <bb 3> :
<L0>:
  return _10;

}



;; Function Clock_Ip_PLL_VCO (Clock_Ip_PLL_VCO, funcdef_no=139, decl_uid=6585, cgraph_uid=140, symbol_order=150)

Clock_Ip_PLL_VCO (const struct PLL_Type * Base)
{
  boolean Overflow;
  uint32 Var5;
  uint32 Var4;
  uint32 Var3;
  uint32 Var2;
  uint32 Var1;
  uint32 Fout;
  uint32 Mfn;
  uint32 Mfi;
  uint32 Rdiv;
  uint32 Fin;
  uint32 D.7934;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  uint32 _54;

  <bb 2> :
  Fout_31 = 0;
  Overflow_32 = 0;
  Fin_35 = Clock_Ip_Get_FXOSC_CLK_Frequency ();
  _1 ={v} Base_36(D)->PLLDV;
  _2 = _1 >> 12;
  Rdiv_37 = _2 & 7;
  _3 ={v} Base_36(D)->PLLDV;
  Mfi_38 = _3 & 255;
  _4 ={v} Base_36(D)->PLLFD;
  Mfn_39 = _4 & 32767;
  Var1_40 = Mfi_38 / Rdiv_37;
  _5 = Var1_40 * Rdiv_37;
  Var2_41 = Mfi_38 - _5;
  _6 = Rdiv_37 << 14;
  _7 = Rdiv_37 << 11;
  Var3_42 = _6 + _7;
  Var4_43 = Fin_35 / Var3_42;
  _8 = Var4_43 * Var3_42;
  Var5_44 = Fin_35 - _8;
  if (Fin_35 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 3> :
  _9 = Var1_40 * Fin_35;
  _10 = _9 / Fin_35;
  if (Var1_40 == _10)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Fout_46 = Var1_40 * Fin_35;
  goto <bb 6>; [INV]

  <bb 5> :
  Overflow_45 = 1;

  <bb 6> :
  # Fout_22 = PHI <Fout_46(4), Fout_31(5)>
  # Overflow_27 = PHI <Overflow_32(4), Overflow_45(5)>
  _11 = Fin_35 * Var2_41;
  _12 = _11 / Fin_35;
  if (Var2_41 == _12)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  if (Fout_22 <= 1280000000)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _13 = Fin_35 / Rdiv_37;
  _14 = Var2_41 * _13;
  Fout_47 = Fout_22 + _14;
  goto <bb 10>; [INV]

  <bb 9> :
  Overflow_48 = 1;

  <bb 10> :
  # Fout_23 = PHI <Fout_47(8), Fout_22(9)>
  # Overflow_28 = PHI <Overflow_27(8), Overflow_48(9)>
  if (Var4_43 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 11> :
  _15 = Var4_43 * Mfn_39;
  _16 = _15 / Var4_43;
  if (Mfn_39 == _16)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 12> :
  if (Fout_23 <= 1280000000)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  _17 = Var4_43 * Mfn_39;
  Fout_49 = Fout_23 + _17;
  goto <bb 15>; [INV]

  <bb 14> :
  Overflow_50 = 1;

  <bb 15> :
  # Fout_24 = PHI <Fout_23(10), Fout_49(13), Fout_23(14)>
  # Overflow_29 = PHI <Overflow_28(10), Overflow_28(13), Overflow_50(14)>
  if (Mfn_39 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 16> :
  _18 = Var5_44 * Mfn_39;
  _19 = _18 / Mfn_39;
  if (Var5_44 == _19)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  if (Fout_24 <= 1280000000)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  _20 = Var5_44 * Mfn_39;
  _21 = _20 / Var3_42;
  Fout_51 = Fout_24 + _21;
  goto <bb 20>; [INV]

  <bb 19> :
  Overflow_52 = 1;

  <bb 20> :
  # Fout_25 = PHI <Fout_31(2), Fout_24(15), Fout_51(18), Fout_24(19)>
  # Overflow_30 = PHI <Overflow_32(2), Overflow_29(15), Overflow_29(18), Overflow_52(19)>
  if (Overflow_30 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  Fout_53 = 0;

  <bb 22> :
  # Fout_26 = PHI <Fout_25(20), Fout_53(21)>
  _54 = Fout_26;

  <bb 23> :
<L23>:
  return _54;

}



;; Function Clock_Ip_SetExternalOscillatorFrequency (Clock_Ip_SetExternalOscillatorFrequency, funcdef_no=140, decl_uid=6557, cgraph_uid=141, symbol_order=151)

Clock_Ip_SetExternalOscillatorFrequency (Clock_Ip_NameType ExtOscName, uint32 Frequency)
{
  <bb 2> :
  switch (ExtOscName_2(D)) <default: <L2> [INV], case 5: <L0> [INV], case 6: <L1> [INV]>

  <bb 3> :
<L0>:
  Clock_Ip_u32fxosc = Frequency_4(D);
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  Clock_Ip_u32sxosc = Frequency_4(D);
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:

  <bb 6> :
  return;

}



;; Function Clock_Ip_GetFreq (Clock_Ip_GetFreq, funcdef_no=141, decl_uid=6554, cgraph_uid=142, symbol_order=152)

Clock_Ip_GetFreq (Clock_Ip_NameType ClockName)
{
  uint32 D.7936;
  uint32 (*<T77d>) (void) _1;
  uint32 _5;

  <bb 2> :
  _1 = Clock_Ip_apfFreqTable[ClockName_3(D)];
  _5 = _1 ();

  <bb 3> :
<L0>:
  return _5;

}



;; Function Clock_Ip_SetExternalSignalFrequency (Clock_Ip_SetExternalSignalFrequency, funcdef_no=142, decl_uid=6552, cgraph_uid=143, symbol_order=153)

Clock_Ip_SetExternalSignalFrequency (Clock_Ip_NameType SignalName, uint32 Frequency)
{
  uint32 Index;
  <unnamed type> _1;

  <bb 2> :
  Index_4 = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = Clock_Ip_axExtSignalFreqEntries[Index_2].Name;
  if (SignalName_6(D) == _1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Clock_Ip_axExtSignalFreqEntries[Index_2].Frequency = Frequency_8(D);
  goto <bb 7>; [INV]

  <bb 5> :
  Index_7 = Index_2 + 1;

  <bb 6> :
  # Index_2 = PHI <Index_4(2), Index_7(5)>
  if (Index_2 <= 5)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}


