
Marking local functions:


Marking externally visible functions:


Marking externally visible variables: Clock_Ip_axPllCallbacks/7


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Clock_Ip_ReportClockErrors/12 (Clock_Ip_ReportClockErrors) @06ed4a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_CompletePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/5 
  Calls: 
Clock_Ip_TimeoutExpired/11 (Clock_Ip_TimeoutExpired) @06ed49a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_CompletePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/5 
  Calls: 
Clock_Ip_StartTimeout/10 (Clock_Ip_StartTimeout) @06ed48c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_CompletePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/5 
  Calls: 
Clock_Ip_apxPll/9 (Clock_Ip_apxPll) @06cd3d38
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_EnablePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/6 (read) Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/4 (read) Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/4 (read) Clock_Ip_ResetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/3 (read) Clock_Ip_ResetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/3 (read) Clock_Ip_ResetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/3 (read) Clock_Ip_ResetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/3 (read) Clock_Ip_EnablePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/6 (read) Clock_Ip_ResetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/3 (read) Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/4 (read) Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/4 (read) Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/4 (read) Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/4 (read) Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/4 (read) Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/4 (read) Clock_Ip_CompletePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/5 (read) Clock_Ip_CompletePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/5 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8ClockFeatures/8 (Clock_Ip_au8ClockFeatures) @06cd3cf0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ResetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/3 (read) Clock_Ip_EnablePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/6 (read) Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/4 (read) Clock_Ip_CompletePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/5 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axPllCallbacks/7 (Clock_Ip_axPllCallbacks) @06cd35a0
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Clock_Ip_CallbackPllEmpty/0 (addr) Clock_Ip_CallbackPllEmpty/0 (addr) Clock_Ip_CallbackPllEmptyComplete/1 (addr) Clock_Ip_CallbackPllEmpty/0 (addr) Clock_Ip_CallbackPllEmptyDisable/2 (addr) Clock_Ip_ResetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/3 (addr) Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/4 (addr) Clock_Ip_CompletePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/5 (addr) Clock_Ip_EnablePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/6 (addr) Clock_Ip_CallbackPllEmptyDisable/2 (addr) 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_EnablePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/6 (Clock_Ip_EnablePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize) @06cd42a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8ClockFeatures/8 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) 
  Referring: Clock_Ip_axPllCallbacks/7 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_CompletePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/5 (Clock_Ip_CompletePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize) @06cd4e00
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8ClockFeatures/8 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) 
  Referring: Clock_Ip_axPllCallbacks/7 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_ReportClockErrors/12 Clock_Ip_TimeoutExpired/11 Clock_Ip_StartTimeout/10 
Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/4 (Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize) @06cd4b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8ClockFeatures/8 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) 
  Referring: Clock_Ip_axPllCallbacks/7 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_ResetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize/3 (Clock_Ip_ResetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize) @06cd41c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8ClockFeatures/8 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) Clock_Ip_apxPll/9 (read) 
  Referring: Clock_Ip_axPllCallbacks/7 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_CallbackPllEmptyDisable/2 (Clock_Ip_CallbackPllEmptyDisable) @06cced20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/7 (addr) Clock_Ip_axPllCallbacks/7 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_CallbackPllEmptyComplete/1 (Clock_Ip_CallbackPllEmptyComplete) @06cceee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/7 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_CallbackPllEmpty/0 (Clock_Ip_CallbackPllEmpty) @06ccec40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/7 (addr) Clock_Ip_axPllCallbacks/7 (addr) Clock_Ip_axPllCallbacks/7 (addr) 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_EnablePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize (const struct Clock_Ip_PllConfigType * Config)
{
  uint32 Instance;
  <unnamed type> _1;
  unsigned char _2;
  short unsigned int _3;
  struct PLL_Type * _4;
  long unsigned int _5;
  struct PLL_Type * _6;
  long unsigned int _7;

  <bb 2> :
  if (Config_9(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  _1 = Config_9(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][0];
  Instance_11 = (uint32) _2;
  _3 = Config_9(D)->Enable;
  if (_3 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _4 = Clock_Ip_apxPll[Instance_11].PllInstance;
  _5 ={v} _4->PLLCR;
  _6 = Clock_Ip_apxPll[Instance_11].PllInstance;
  _7 = _5 & 2147483647;
  _6->PLLCR ={v} _7;

  <bb 5> :
  return;

}


Clock_Ip_CompletePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize (Clock_Ip_NameType PllName)
{
  uint32 Instance;
  uint32 PllLockStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  Clock_Ip_PllStatusReturnType PllStatus;
  Clock_Ip_PllStatusReturnType D.6655;
  unsigned char _1;
  struct PLL_Type * _2;
  long unsigned int _3;
  signed int _4;
  struct PLL_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int TimeoutTicks.2_8;
  _Bool _9;
  Clock_Ip_PllStatusReturnType _25;

  <bb 2> :
  PllStatus_13 = 2;
  TimeoutOccurred_14 = 0;
  _1 = Clock_Ip_au8ClockFeatures[PllName_16(D)][0];
  Instance_17 = (uint32) _1;
  _2 = Clock_Ip_apxPll[Instance_17].PllInstance;
  _3 ={v} _2->PLLCR;
  _4 = (signed int) _3;
  if (_4 >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> :
  _5 = Clock_Ip_apxPll[Instance_17].PllInstance;
  _6 ={v} _5->PLLSR;
  _7 = _6 >> 2;
  PllLockStatus_20 = _7 & 1;
  TimeoutTicks.2_8 = TimeoutTicks;
  TimeoutOccurred_22 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.2_8);
  if (PllLockStatus_20 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _9 = ~TimeoutOccurred_22;
  if (_9 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (TimeoutOccurred_22 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  PllStatus_23 = 1;
  Clock_Ip_ReportClockErrors (1, PllName_16(D));
  goto <bb 9>; [INV]

  <bb 8> :
  PllStatus_18 = 0;

  <bb 9> :
  # PllStatus_10 = PHI <PllStatus_23(7), PllStatus_18(8), PllStatus_13(6)>
  _25 = PllStatus_10;
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};

  <bb 10> :
<L9>:
  return _25;

}


Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize (const struct Clock_Ip_PllConfigType * Config)
{
  uint32 Value;
  uint32 Instance;
  long unsigned int iftmp.1;
  <unnamed type> _1;
  unsigned char _2;
  short unsigned int _3;
  struct PLL_Type * _4;
  unsigned char _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  unsigned char _9;
  long unsigned int _10;
  long unsigned int _11;
  struct PLL_Type * _12;
  struct PLL_Type * _13;
  short unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  unsigned char _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  struct PLL_Type * _21;
  unsigned char _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  unsigned char _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  short unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  short unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  struct PLL_Type * _39;
  unsigned char _40;
  struct PLL_Type * _41;
  struct PLL_Type * _42;
  long unsigned int _43;
  struct PLL_Type * _44;
  long unsigned int _45;
  long unsigned int iftmp.1_46;
  long unsigned int iftmp.1_62;
  long unsigned int iftmp.1_63;

  <bb 2> :
  if (Config_48(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _1 = Config_48(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][0];
  Instance_50 = (uint32) _2;
  _3 = Config_48(D)->Enable;
  if (_3 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  _4 = Clock_Ip_apxPll[Instance_50].PllInstance;
  Value_51 ={v} _4->PLLDV;
  Value_52 = Value_51 & 4294938368;
  _5 = Config_48(D)->Predivider;
  _6 = (long unsigned int) _5;
  _7 = _6 << 12;
  _8 = _7 & 28672;
  _9 = Config_48(D)->MulFactorDiv;
  _10 = (long unsigned int) _9;
  _11 = _8 | _10;
  Value_53 = Value_52 | _11;
  _12 = Clock_Ip_apxPll[Instance_50].PllInstance;
  _12->PLLDV ={v} Value_53;
  _13 = Clock_Ip_apxPll[Instance_50].PllInstance;
  Value_55 ={v} _13->PLLFD;
  Value_56 = Value_55 & 3221192704;
  _14 = Config_48(D)->NumeratorFracLoopDiv;
  _15 = (long unsigned int) _14;
  _16 = _15 & 32767;
  Value_57 = Value_56 | _16;
  _17 = Config_48(D)->SigmaDelta;
  _18 = (long unsigned int) _17;
  _19 = _18 << 30;
  _20 = _19 & 1073741824;
  Value_58 = Value_57 | _20;
  _21 = Clock_Ip_apxPll[Instance_50].PllInstance;
  _21->PLLFD ={v} Value_58;
  _22 = Config_48(D)->FrequencyModulationBypass;
  _23 = (long unsigned int) _22;
  _24 = _23 << 30;
  _25 = _24 & 1073741824;
  _26 = Config_48(D)->ModulationType;
  _27 = (long unsigned int) _26;
  _28 = _27 << 29;
  _29 = _28 & 536870912;
  _30 = _25 | _29;
  _31 = Config_48(D)->IncrementStep;
  _32 = (long unsigned int) _31;
  _33 = _32 & 2047;
  _34 = _30 | _33;
  _35 = Config_48(D)->ModulationPeriod;
  _36 = (long unsigned int) _35;
  _37 = _36 << 16;
  _38 = _37 & 67043328;
  Value_60 = _34 | _38;
  _39 = Clock_Ip_apxPll[Instance_50].PllInstance;
  _39->PLLFM ={v} Value_60;
  _40 = Config_48(D)->FrequencyModulationBypass;
  if (_40 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1_63 = 128;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.1_62 = 0;

  <bb 7> :
  # iftmp.1_46 = PHI <iftmp.1_63(5), iftmp.1_62(6)>
  _41 = Clock_Ip_apxPll[Instance_50].PllInstance;
  _41->PLLCAL2 ={v} iftmp.1_46;
  _42 = Clock_Ip_apxPll[Instance_50].PllInstance;
  _43 ={v} _42->PLLCR;
  _44 = Clock_Ip_apxPll[Instance_50].PllInstance;
  _45 = _43 & 2147483647;
  _44->PLLCR ={v} _45;

  <bb 8> :
  return;

}


Clock_Ip_ResetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize (const struct Clock_Ip_PllConfigType * Config)
{
  uint8 DividerIndex;
  uint32 Instance;
  <unnamed type> _1;
  unsigned char _2;
  struct PLL_Type * _3;
  int _4;
  long unsigned int _5;
  struct PLL_Type * _6;
  int _7;
  long unsigned int _8;
  unsigned char DividerIndex.0_9;
  unsigned char _10;
  struct PLL_Type * _11;
  long unsigned int _12;
  struct PLL_Type * _13;
  long unsigned int _14;

  <bb 2> :
  if (Config_18(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _1 = Config_18(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][0];
  Instance_20 = (uint32) _2;
  DividerIndex_21 = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  _3 = Clock_Ip_apxPll[Instance_20].PllInstance;
  _4 = (int) DividerIndex_15;
  _5 ={v} _3->PLLODIV[_4];
  _6 = Clock_Ip_apxPll[Instance_20].PllInstance;
  _7 = (int) DividerIndex_15;
  _8 = _5 & 2147483647;
  _6->PLLODIV[_7] ={v} _8;
  DividerIndex.0_9 = DividerIndex_15;
  DividerIndex_24 = DividerIndex.0_9 + 1;

  <bb 5> :
  # DividerIndex_15 = PHI <DividerIndex_21(3), DividerIndex_24(4)>
  _10 = Clock_Ip_apxPll[Instance_20].DivsNo;
  if (DividerIndex_15 < _10)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  _11 = Clock_Ip_apxPll[Instance_20].PllInstance;
  _12 ={v} _11->PLLCR;
  _13 = Clock_Ip_apxPll[Instance_20].PllInstance;
  _14 = _12 | 2147483648;
  _13->PLLCR ={v} _14;

  <bb 7> :
  return;

}


Clock_Ip_CallbackPllEmptyDisable (Clock_Ip_NameType PllName)
{
  <bb 2> :
  return;

}


Clock_Ip_CallbackPllEmptyComplete (Clock_Ip_NameType PllName)
{
  Clock_Ip_PllStatusReturnType D.6635;
  Clock_Ip_PllStatusReturnType _1;

  <bb 2> :
  _1 = 2;

  <bb 3> :
<L0>:
  return _1;

}


Clock_Ip_CallbackPllEmpty (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  return;

}


