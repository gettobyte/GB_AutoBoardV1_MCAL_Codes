Clock_Ip_SetFircDivSelHSEb (const struct Clock_Ip_IrcoscConfigType * Config)
{
  uint32 WfiStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  uint32 DividerValue;
  uint32 RegValue;
  unsigned char _1;
  int _2;
  struct CONFIGURATION_GPR_Type * _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  struct MC_ME_Type * _7;
  long unsigned int _8;
  long unsigned int TimeoutTicks.0_9;
  _Bool _10;
  _Bool _11;
  struct CONFIGURATION_GPR_Type * _12;
  long unsigned int _13;
  struct CONFIGURATION_GPR_Type * _14;
  <unnamed type> _15;
  <unnamed type> _16;

  <bb 2> :
  DividerValue_20 = 0;
  TimeoutOccurred_21 = 0;
  if (Config_22(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 3> :
  _1 = Config_22(D)->Range;
  _2 = (int) _1;
  switch (_2) <default: <L4> [INV], case 1: <L1> [INV], case 2: <L2> [INV], case 3: <L3> [INV]>

  <bb 4> :
<L1>:
  DividerValue_26 = 3;
  goto <bb 8>; [INV]

  <bb 5> :
<L2>:
  DividerValue_25 = 1;
  goto <bb 8>; [INV]

  <bb 6> :
<L3>:
  DividerValue_24 = 2;
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  # DividerValue_17 = PHI <DividerValue_26(4), DividerValue_25(5), DividerValue_24(6), DividerValue_20(7)>
  if (DividerValue_17 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 9> :
  _3 = 1077526528B;
  _4 ={v} _3->CONFIG_REG_GPR;
  _5 = _4 >> 29;
  _6 = _5 & 7;
  if (_6 == 5)
    goto <bb 10>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 10> :
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 11> :
  _7 = 1076740096B;
  _8 ={v} _7->PRTN0_CORE2_STAT;
  WfiStatus_29 = _8 & 2147483648;
  TimeoutTicks.0_9 = TimeoutTicks;
  TimeoutOccurred_31 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_9);
  if (WfiStatus_29 != 2147483648)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _10 = ~TimeoutOccurred_31;
  if (_10 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _11 = ~TimeoutOccurred_31;
  if (_11 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  _12 = 1077526528B;
  RegValue_33 ={v} _12->CONFIG_REG_GPR;
  RegValue_34 = RegValue_33 & 4294967292;
  _13 = DividerValue_17 & 3;
  RegValue_35 = RegValue_34 | _13;
  _14 = 1077526528B;
  _14->CONFIG_REG_GPR ={v} RegValue_35;
  goto <bb 17>; [INV]

  <bb 15> :
  _15 = Config_22(D)->Name;
  Clock_Ip_ReportClockErrors (1, _15);
  goto <bb 17>; [INV]

  <bb 16> :
  _16 = Config_22(D)->Name;
  Clock_Ip_ReportClockErrors (10, _16);

  <bb 17> :
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Clock_Ip_DisableSircStdby (Clock_Ip_NameType Name)
{
  struct SIRC_Type * _1;
  long unsigned int _2;
  struct SIRC_Type * _3;
  long unsigned int _4;

  <bb 2> :
  _1 = 1076658176B;
  _2 ={v} _1->MISCELLANEOUS_IN;
  _3 = 1076658176B;
  _4 = _2 & 4294967039;
  _3->MISCELLANEOUS_IN ={v} _4;
  return;

}


Clock_Ip_EnableSircStdby (const struct Clock_Ip_IrcoscConfigType * Config)
{
  struct SIRC_Type * _1;
  long unsigned int _2;
  struct SIRC_Type * _3;
  long unsigned int _4;

  <bb 2> :
  _1 = 1076658176B;
  _2 ={v} _1->MISCELLANEOUS_IN;
  _3 = 1076658176B;
  _4 = _2 | 256;
  _3->MISCELLANEOUS_IN ={v} _4;
  return;

}


Clock_Ip_SetSircStdby (const struct Clock_Ip_IrcoscConfigType * Config)
{
  short unsigned int _1;
  struct SIRC_Type * _2;
  long unsigned int _3;
  struct SIRC_Type * _4;
  long unsigned int _5;
  struct SIRC_Type * _6;
  long unsigned int _7;
  struct SIRC_Type * _8;
  long unsigned int _9;

  <bb 2> :
  if (Config_11(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _1 = Config_11(D)->Enable;
  if (_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _2 = 1076658176B;
  _3 ={v} _2->MISCELLANEOUS_IN;
  _4 = 1076658176B;
  _5 = _3 | 256;
  _4->MISCELLANEOUS_IN ={v} _5;
  goto <bb 6>; [INV]

  <bb 5> :
  _6 = 1076658176B;
  _7 ={v} _6->MISCELLANEOUS_IN;
  _8 = 1076658176B;
  _9 = _7 & 4294967039;
  _8->MISCELLANEOUS_IN ={v} _9;

  <bb 6> :
  return;

}


Clock_Ip_DisableFircStdby (Clock_Ip_NameType Name)
{
  struct FIRC_Type * _1;
  long unsigned int _2;
  struct FIRC_Type * _3;
  long unsigned int _4;

  <bb 2> :
  _1 = 1076690944B;
  _2 ={v} _1->STDBY_ENABLE;
  _3 = 1076690944B;
  _4 = _2 & 4294967294;
  _3->STDBY_ENABLE ={v} _4;
  return;

}


Clock_Ip_EnableFircStdby (const struct Clock_Ip_IrcoscConfigType * Config)
{
  struct FIRC_Type * _1;
  long unsigned int _2;
  struct FIRC_Type * _3;
  long unsigned int _4;

  <bb 2> :
  _1 = 1076690944B;
  _2 ={v} _1->STDBY_ENABLE;
  _3 = 1076690944B;
  _4 = _2 | 1;
  _3->STDBY_ENABLE ={v} _4;
  return;

}


Clock_Ip_SetFircStdby (const struct Clock_Ip_IrcoscConfigType * Config)
{
  short unsigned int _1;
  struct FIRC_Type * _2;
  long unsigned int _3;
  struct FIRC_Type * _4;
  long unsigned int _5;
  struct FIRC_Type * _6;
  long unsigned int _7;
  struct FIRC_Type * _8;
  long unsigned int _9;

  <bb 2> :
  if (Config_11(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _1 = Config_11(D)->Enable;
  if (_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _2 = 1076690944B;
  _3 ={v} _2->STDBY_ENABLE;
  _4 = 1076690944B;
  _5 = _3 | 1;
  _4->STDBY_ENABLE ={v} _5;
  goto <bb 6>; [INV]

  <bb 5> :
  _6 = 1076690944B;
  _7 ={v} _6->STDBY_ENABLE;
  _8 = 1076690944B;
  _9 = _7 & 4294967294;
  _8->STDBY_ENABLE ={v} _9;

  <bb 6> :
  return;

}


Clock_Ip_InternalOscillatorEmpty_Disable (Clock_Ip_NameType Name)
{
  <bb 2> :
  return;

}


Clock_Ip_InternalOscillatorEmpty (const struct Clock_Ip_IrcoscConfigType * Config)
{
  <bb 2> :
  return;

}


