Clock_Ip_PRAMCSetRamIWS ()
{
  uint32 Pram1RegVal;
  uint32 Pram0RegVal;
  uint32 ArrayRamFrequency;
  uint32 ControllerRamFrequency;

  <bb 2> :
  ControllerRamFrequency = 0;
  ArrayRamFrequency = 0;
  _1 = 1076248576B;
  Pram0RegVal = _1->PRCR1;
  _2 = 1078345728B;
  Pram1RegVal = _2->PRCR1;
  Clock_Ip_pxConfig.12_3 = Clock_Ip_pxConfig;
  _4 = Clock_Ip_pxConfig.12_3->ConfiguredFrequencies;
  _5 = Clock_Ip_FreqIds[14];
  _6 = (int) _5;
  ControllerRamFrequency = (*_4)[_6].ConfiguredFrequencyValue;
  Clock_Ip_pxConfig.13_7 = Clock_Ip_pxConfig;
  _8 = Clock_Ip_pxConfig.13_7->ConfiguredFrequencies;
  _9 = Clock_Ip_FreqIds[15];
  _10 = (int) _9;
  ArrayRamFrequency = (*_8)[_10].ConfiguredFrequencyValue;
  if (ControllerRamFrequency > ArrayRamFrequency)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Pram0RegVal = Pram0RegVal | 1;
  Pram1RegVal = Pram1RegVal | 1;
  Pram0RegVal = Pram0RegVal & 4294967231;
  Pram1RegVal = Pram1RegVal & 4294967231;
  goto <bb 5>; [INV]

  <bb 4> :
  Pram0RegVal = Pram0RegVal & 4294967294;
  Pram1RegVal = Pram1RegVal & 4294967294;

  <bb 5> :
  _11 = 1076248576B;
  _11->PRCR1 = Pram0RegVal;
  _12 = 1078345728B;
  _12->PRCR1 = Pram1RegVal;
  return;

}


Clock_Ip_FLASH_SetFlashIWS ()
{
  <bb 2> :
  Clock_Ip_SetFlashWaitStatesCallback.11_1 = Clock_Ip_SetFlashWaitStatesCallback;
  Clock_Ip_SetFlashWaitStatesCallback.11_1 ();
  return;

}


Clock_Ip_Command (const struct Clock_Ip_ClockConfigType * Config, Clock_Ip_CommandType Command)
{
  <bb 2> :
  switch (Command) <default: <L2> [INV], case 1: <L1> [INV], case 2: <L0> [INV]>

  <bb 3> :
<L0>:
  Clock_Ip_ClockInitializeObjects ();
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  Clock_Ip_SpecificPlatformInitClock (Config);
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:

  <bb 6> :
  return;

}


Clock_Ip_ClockInitializeObjects ()
{
  <bb 2> :
  Clock_Ip_bObjectsAreInitialized.10_1 = Clock_Ip_bObjectsAreInitialized;
  _2 = ~Clock_Ip_bObjectsAreInitialized.10_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Clock_Ip_bObjectsAreInitialized = 1;
  _3 = Clock_Ip_au8IrcoscCallbackIndex[3];
  _4 = (int) _3;
  _5 = &Clock_Ip_axIntOscCallbacks[_4];
  Clock_Ip_pxSircStdbyClock = _5;
  _6 = Clock_Ip_au8IrcoscCallbackIndex[2];
  _7 = (int) _6;
  _8 = &Clock_Ip_axIntOscCallbacks[_7];
  Clock_Ip_pxFircStdbyClock = _8;

  <bb 4> :
  return;

}


EnableSircInStandbyMode ()
{
  struct Clock_Ip_IrcoscConfigType SircConfig;

  <bb 2> :
  SircConfig.Enable = 1;
  Clock_Ip_pxSircStdbyClock.9_1 = Clock_Ip_pxSircStdbyClock;
  _2 = Clock_Ip_pxSircStdbyClock.9_1->Enable;
  _2 (&SircConfig);
  SircConfig = {CLOBBER};
  return;

}


DisableSircInStandbyMode ()
{
  <bb 2> :
  Clock_Ip_pxSircStdbyClock.8_1 = Clock_Ip_pxSircStdbyClock;
  _2 = Clock_Ip_pxSircStdbyClock.8_1->Disable;
  _2 (3);
  return;

}


EnableFircInStandbyMode ()
{
  struct Clock_Ip_IrcoscConfigType FircConfig;

  <bb 2> :
  FircConfig.Enable = 1;
  Clock_Ip_pxFircStdbyClock.7_1 = Clock_Ip_pxFircStdbyClock;
  _2 = Clock_Ip_pxFircStdbyClock.7_1->Enable;
  _2 (&FircConfig);
  FircConfig = {CLOBBER};
  return;

}


DisableFircInStandbyMode ()
{
  <bb 2> :
  Clock_Ip_pxFircStdbyClock.6_1 = Clock_Ip_pxFircStdbyClock;
  _2 = Clock_Ip_pxFircStdbyClock.6_1->Disable;
  _2 (1);
  return;

}


Clock_Ip_SpecificPlatformInitClock (const struct Clock_Ip_ClockConfigType * Config)
{
  <bb 2> :
  Clock_Ip_PowerClockIpModules ();
  return;

}


Clock_Ip_McMeEnterKey ()
{
  <bb 2> :
  _1 = 1076740096B;
  _1->CTL_KEY = 23280;
  _2 = 1076740096B;
  _2->CTL_KEY = 42255;
  return;

}


Clock_Ip_SetFlashWaitStates ()
{
  <bb 2> :
  Clock_Ip_FLASH_SetFlashIWS ();
  return;

}


Clock_Ip_SetRamWaitStates ()
{
  <bb 2> :
  Clock_Ip_PRAMCSetRamIWS ();
  return;

}


Clock_Ip_CodeInRamSetFlashWaitStates ()
{
  uint32 ConfiguredCoreClock;
  uint32 RwscSetting;
  uint32 RegValue;

  <bb 2> :
  RwscSetting = 0;
  ConfiguredCoreClock = 0;
  Clock_Ip_pxConfig.5_1 = Clock_Ip_pxConfig;
  _2 = Clock_Ip_pxConfig.5_1->ConfiguredFrequencies;
  _3 = Clock_Ip_FreqIds[14];
  _4 = (int) _3;
  ConfiguredCoreClock = (*_2)[_4].ConfiguredFrequencyValue;
  if (ConfiguredCoreClock <= 167000000)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  if (ConfiguredCoreClock <= 66000000)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  RwscSetting = 1;
  goto <bb 17>; [INV]

  <bb 5> :
  if (ConfiguredCoreClock <= 100000000)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  RwscSetting = 2;
  goto <bb 17>; [INV]

  <bb 7> :
  if (ConfiguredCoreClock <= 133000000)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  RwscSetting = 3;
  goto <bb 17>; [INV]

  <bb 9> :
  RwscSetting = 4;
  goto <bb 17>; [INV]

  <bb 10> :
  if (ConfiguredCoreClock <= 200000000)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  RwscSetting = 5;
  goto <bb 17>; [INV]

  <bb 12> :
  if (ConfiguredCoreClock <= 233000000)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  RwscSetting = 6;
  goto <bb 17>; [INV]

  <bb 14> :
  if (ConfiguredCoreClock <= 250000000)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  RwscSetting = 7;
  goto <bb 17>; [INV]

  <bb 16> :
  RwscSetting = 7;

  <bb 17> :
  _5 = 1076805632B;
  RegValue = _5->CTL;
  RegValue = RegValue & 4294959359;
  _6 = RwscSetting << 8;
  _7 = _6 & 7936;
  RegValue = RegValue | _7;
  __asm__ __volatile__(" DSB");
  __asm__ __volatile__(" ISB");
  _8 = 1076805632B;
  _9 = _8->CTL;
  _10 = 1076805632B;
  _11 = _9 & 4294934527;
  _10->CTL = _11;
  _12 = 1076805632B;
  _12->CTL = RegValue;
  __asm__ __volatile__(" DSB");
  __asm__ __volatile__(" ISB");
  return;

}


Clock_Ip_PowerClockIpModules ()
{
  boolean TimeoutOccurred;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;

  <bb 2> :
  TimeoutOccurred = 0;
  Clock_Ip_PllPowerClockIp ();
  _1 = 1076740096B;
  _2 = _1->PRTN1_COFB1_STAT;
  _3 = _2 & 2097152;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _4 = 1076740096B;
  _5 = _4->PRTN1_COFB1_CLKEN;
  _6 = 1076740096B;
  _7 = _5 | 2097152;
  _6->PRTN1_COFB1_CLKEN = _7;
  _8 = 1076740096B;
  _9 = _8->PRTN1_PCONF;
  _10 = 1076740096B;
  _11 = _9 | 1;
  _10->PRTN1_PCONF = _11;
  _12 = 1076740096B;
  _13 = _12->PRTN1_PUPD;
  _14 = 1076740096B;
  _15 = _13 | 1;
  _14->PRTN1_PUPD = _15;
  Clock_Ip_McMeEnterKey ();
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> :
  TimeoutTicks.1_16 = TimeoutTicks;
  TimeoutOccurred = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.1_16);
  _17 = 1076740096B;
  _18 = _17->PRTN1_COFB1_STAT;
  _19 = _18 & 2097152;
  if (_19 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _20 = ~TimeoutOccurred;
  if (_20 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (TimeoutOccurred != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Clock_Ip_ReportClockErrors (1, 5);

  <bb 8> :
  _21 = 1076740096B;
  _22 = _21->PRTN1_COFB1_STAT;
  _23 = _22 & 524288;
  if (_23 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 9> :
  _24 = 1076740096B;
  _25 = _24->PRTN1_COFB1_CLKEN;
  _26 = 1076740096B;
  _27 = _25 | 524288;
  _26->PRTN1_COFB1_CLKEN = _27;
  _28 = 1076740096B;
  _29 = _28->PRTN1_PCONF;
  _30 = 1076740096B;
  _31 = _29 | 1;
  _30->PRTN1_PCONF = _31;
  _32 = 1076740096B;
  _33 = _32->PRTN1_PUPD;
  _34 = 1076740096B;
  _35 = _33 | 1;
  _34->PRTN1_PUPD = _35;
  Clock_Ip_McMeEnterKey ();
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 10> :
  TimeoutTicks.2_36 = TimeoutTicks;
  TimeoutOccurred = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.2_36);
  _37 = 1076740096B;
  _38 = _37->PRTN1_COFB1_STAT;
  _39 = _38 & 524288;
  if (_39 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _40 = ~TimeoutOccurred;
  if (_40 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  if (TimeoutOccurred != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  Clock_Ip_ReportClockErrors (1, 6);

  <bb 14> :
  _41 = 1076740096B;
  _42 = _41->PRTN1_COFB1_STAT;
  _43 = _42 & 32768;
  if (_43 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 15> :
  _44 = 1076740096B;
  _45 = _44->PRTN1_COFB1_CLKEN;
  _46 = 1076740096B;
  _47 = _45 | 32768;
  _46->PRTN1_COFB1_CLKEN = _47;
  _48 = 1076740096B;
  _49 = _48->PRTN1_PCONF;
  _50 = 1076740096B;
  _51 = _49 | 1;
  _50->PRTN1_PCONF = _51;
  _52 = 1076740096B;
  _53 = _52->PRTN1_PUPD;
  _54 = 1076740096B;
  _55 = _53 | 1;
  _54->PRTN1_PUPD = _55;
  Clock_Ip_McMeEnterKey ();
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 16> :
  TimeoutTicks.3_56 = TimeoutTicks;
  TimeoutOccurred = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.3_56);
  _57 = 1076740096B;
  _58 = _57->PRTN1_COFB1_STAT;
  _59 = _58 & 32768;
  if (_59 == 0)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  _60 = ~TimeoutOccurred;
  if (_60 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  if (TimeoutOccurred != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  Clock_Ip_ReportClockErrors (1, 140);

  <bb 20> :
  _61 = 1076740096B;
  _62 = _61->PRTN1_COFB0_STAT;
  _63 = _62 & 16777216;
  if (_63 == 0)
    goto <bb 21>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 21> :
  _64 = 1076740096B;
  _65 = _64->PRTN1_COFB0_CLKEN;
  _66 = 1076740096B;
  _67 = _65 | 16777216;
  _66->PRTN1_COFB0_CLKEN = _67;
  _68 = 1076740096B;
  _69 = _68->PRTN1_PCONF;
  _70 = 1076740096B;
  _71 = _69 | 1;
  _70->PRTN1_PCONF = _71;
  _72 = 1076740096B;
  _73 = _72->PRTN1_PUPD;
  _74 = 1076740096B;
  _75 = _73 | 1;
  _74->PRTN1_PUPD = _75;
  Clock_Ip_McMeEnterKey ();
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 22> :
  TimeoutTicks.4_76 = TimeoutTicks;
  TimeoutOccurred = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.4_76);
  _77 = 1076740096B;
  _78 = _77->PRTN1_COFB0_STAT;
  _79 = _78 & 16777216;
  if (_79 == 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  _80 = ~TimeoutOccurred;
  if (_80 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  if (TimeoutOccurred != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  Clock_Ip_ReportClockErrors (1, 140);

  <bb 26> :
  StartTime = {CLOBBER};
  ElapsedTime = {CLOBBER};
  TimeoutTicks = {CLOBBER};
  return;

}


Clock_Ip_PllPowerClockIp ()
{
  boolean TimeoutOccurred;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;

  <bb 2> :
  TimeoutOccurred = 0;
  _1 = 1076740096B;
  _2 = _1->PRTN1_COFB1_STAT;
  _3 = _2 & 16777216;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  _4 = 1076740096B;
  _5 = _4->PRTN1_COFB1_CLKEN;
  _6 = 1076740096B;
  _7 = _5 | 16777216;
  _6->PRTN1_COFB1_CLKEN = _7;
  _8 = 1076740096B;
  _9 = _8->PRTN1_PCONF;
  _10 = 1076740096B;
  _11 = _9 | 1;
  _10->PRTN1_PCONF = _11;
  _12 = 1076740096B;
  _13 = _12->PRTN1_PUPD;
  _14 = 1076740096B;
  _15 = _13 | 1;
  _14->PRTN1_PUPD = _15;
  Clock_Ip_McMeEnterKey ();
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> :
  TimeoutTicks.0_16 = TimeoutTicks;
  TimeoutOccurred = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_16);
  _17 = 1076740096B;
  _18 = _17->PRTN1_COFB1_STAT;
  _19 = _18 & 16777216;
  if (_19 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _20 = ~TimeoutOccurred;
  if (_20 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  if (TimeoutOccurred != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  Clock_Ip_ReportClockErrors (1, 7);

  <bb 8> :
  StartTime = {CLOBBER};
  ElapsedTime = {CLOBBER};
  TimeoutTicks = {CLOBBER};
  return;

}


