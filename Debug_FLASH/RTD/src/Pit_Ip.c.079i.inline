IPA summary for PIT_0_ISR/28 is missing.
IPA summary for Pit_Ip_GetLifetimeTimer/27 is missing.
IPA summary for Pit_Ip_SetLifetimeTimer/26 is missing.
IPA summary for Pit_Ip_DisableChannelInterrupt/25 is missing.
IPA summary for Pit_Ip_EnableChannelInterrupt/24 is missing.
IPA summary for Pit_Ip_GetCurrentTimer/23 is missing.
IPA summary for Pit_Ip_StopChannel/22 is missing.
IPA summary for Pit_Ip_StartChannel/21 is missing.
IPA summary for Pit_Ip_Deinit/20 is missing.
IPA summary for Pit_Ip_InitChannel/19 is missing.
IPA summary for Pit_Ip_Init/18 is missing.
IPA summary for Pit_Ip_ProcessCommonInterrupt/17 is missing.
IPA summary for Pit_Ip_GetLowerLifetimerValue/16 is missing.
IPA summary for Pit_Ip_GetUpperLifetimerValue/15 is missing.
IPA summary for Pit_Ip_GetInterruptBit/14 is missing.
IPA summary for Pit_Ip_ClearInterruptFlag/13 is missing.
IPA summary for Pit_Ip_EnableInterrupt/12 is missing.
IPA summary for Pit_Ip_GetCounterValue/11 is missing.
IPA summary for Pit_Ip_SetCounterValue/10 is missing.
IPA summary for Pit_Ip_IsChannelRunning/9 is missing.
IPA summary for Pit_Ip_Reset/8 is missing.
IPA summary for Pit_Ip_SetChainMode/7 is missing.
IPA summary for Pit_Ip_SetDebugMode/6 is missing.
IPA summary for Pit_Ip_EnableTimer/5 is missing.
IPA summary for Pit_Ip_EnableModule/4 is missing.
IPA summary for Pit_Ip_GetInterruptFlags/3 is missing.
IPA summary for Pit_Ip_GetLoadValue/2 is missing.

Flattening functions:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
node context cache: 0 hits, 0 misses, 0 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 0.000000 weighted by profile: 0.000000

Why inlining failed?
function not considered for inlining              :       29 calls, 29.000000 freq, 0 count
function body not available                       :        8 calls, 8.000000 freq, 0 count
IPA summary for PIT_0_ISR/28 is missing.
IPA summary for Pit_Ip_GetLifetimeTimer/27 is missing.
IPA summary for Pit_Ip_SetLifetimeTimer/26 is missing.
IPA summary for Pit_Ip_DisableChannelInterrupt/25 is missing.
IPA summary for Pit_Ip_EnableChannelInterrupt/24 is missing.
IPA summary for Pit_Ip_GetCurrentTimer/23 is missing.
IPA summary for Pit_Ip_StopChannel/22 is missing.
IPA summary for Pit_Ip_StartChannel/21 is missing.
IPA summary for Pit_Ip_Deinit/20 is missing.
IPA summary for Pit_Ip_InitChannel/19 is missing.
IPA summary for Pit_Ip_Init/18 is missing.
IPA summary for Pit_Ip_ProcessCommonInterrupt/17 is missing.
IPA summary for Pit_Ip_GetLowerLifetimerValue/16 is missing.
IPA summary for Pit_Ip_GetUpperLifetimerValue/15 is missing.
IPA summary for Pit_Ip_GetInterruptBit/14 is missing.
IPA summary for Pit_Ip_ClearInterruptFlag/13 is missing.
IPA summary for Pit_Ip_EnableInterrupt/12 is missing.
IPA summary for Pit_Ip_GetCounterValue/11 is missing.
IPA summary for Pit_Ip_SetCounterValue/10 is missing.
IPA summary for Pit_Ip_IsChannelRunning/9 is missing.
IPA summary for Pit_Ip_Reset/8 is missing.
IPA summary for Pit_Ip_SetChainMode/7 is missing.
IPA summary for Pit_Ip_SetDebugMode/6 is missing.
IPA summary for Pit_Ip_EnableTimer/5 is missing.
IPA summary for Pit_Ip_EnableModule/4 is missing.
IPA summary for Pit_Ip_GetInterruptFlags/3 is missing.
IPA summary for Pit_Ip_GetLoadValue/2 is missing.
Symbol table:

SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_01/36 (SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_01) @05f3fe00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pit_Ip_SetChainMode/7 
  Calls: 
SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_01/35 (SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_01) @05f3fd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pit_Ip_SetChainMode/7 
  Calls: 
SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_02/34 (SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_02) @05f3f0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pit_Ip_EnableInterrupt/12 
  Calls: 
SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_02/33 (SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_02) @05f3f000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pit_Ip_EnableInterrupt/12 
  Calls: 
SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_00/32 (SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_00) @05ed1e00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pit_Ip_EnableTimer/5 
  Calls: 
SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_00/31 (SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_00) @05ed1d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pit_Ip_EnableTimer/5 
  Calls: 
SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_03/30 (SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_03) @05ed17e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pit_Ip_ClearInterruptFlag/13 
  Calls: 
SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_03/29 (SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_03) @05ed1700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Pit_Ip_ClearInterruptFlag/13 
  Calls: 
PIT_0_ISR/28 (PIT_0_ISR) @05e20b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pit_Ip_ProcessCommonInterrupt/17 
Pit_Ip_GetLifetimeTimer/27 (Pit_Ip_GetLifetimeTimer) @05e20620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pit_Ip_GetLowerLifetimerValue/16 Pit_Ip_GetUpperLifetimerValue/15 
Pit_Ip_SetLifetimeTimer/26 (Pit_Ip_SetLifetimeTimer) @05e200e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pit_Ip_EnableTimer/5 Pit_Ip_SetCounterValue/10 Pit_Ip_EnableTimer/5 Pit_Ip_SetChainMode/7 Pit_Ip_EnableInterrupt/12 Pit_Ip_SetCounterValue/10 
Pit_Ip_DisableChannelInterrupt/25 (Pit_Ip_DisableChannelInterrupt) @05e20d20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pit_Ip_ClearInterruptFlag/13 Pit_Ip_EnableInterrupt/12 
Pit_Ip_EnableChannelInterrupt/24 (Pit_Ip_EnableChannelInterrupt) @05e20a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pit_Ip_EnableInterrupt/12 Pit_Ip_ClearInterruptFlag/13 
Pit_Ip_GetCurrentTimer/23 (Pit_Ip_GetCurrentTimer) @05e207e0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pit_Ip_GetCounterValue/11 
Pit_Ip_StopChannel/22 (Pit_Ip_StopChannel) @05e20540
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Pit_Ip_ProcessCommonInterrupt/17 
  Calls: Pit_Ip_ClearInterruptFlag/13 Pit_Ip_EnableTimer/5 
Pit_Ip_StartChannel/21 (Pit_Ip_StartChannel) @05e202a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pit_Ip_EnableTimer/5 Pit_Ip_SetCounterValue/10 Pit_Ip_IsChannelRunning/9 
Pit_Ip_Deinit/20 (Pit_Ip_Deinit) @05e20000
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pit_Ip_Reset/8 
Pit_Ip_InitChannel/19 (Pit_Ip_InitChannel) @05e17b60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Pit_Ip_u32ChState/1 (write) Pit_Ip_u32ChState/1 (write) Pit_Ip_u32ChState/1 (write) Pit_Ip_u32ChState/1 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pit_Ip_ClearInterruptFlag/13 Pit_Ip_EnableInterrupt/12 Pit_Ip_EnableTimer/5 
Pit_Ip_Init/18 (Pit_Ip_Init) @05e17620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Pit_Ip_SetDebugMode/6 Pit_Ip_EnableModule/4 
Pit_Ip_ProcessCommonInterrupt/17 (Pit_Ip_ProcessCommonInterrupt) @05e170e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: Pit_Ip_u32ChState/1 (read) Pit_Ip_u32ChState/1 (read) Pit_Ip_u32ChState/1 (read) Pit_Ip_u32ChState/1 (read) Pit_Ip_u32ChState/1 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: PIT_0_ISR/28 
  Calls: Pit_Ip_StopChannel/22 Pit_Ip_ClearInterruptFlag/13 Pit_Ip_GetInterruptBit/14 Pit_Ip_GetInterruptFlags/3 
   Indirect call Num speculative call targets: 0
Pit_Ip_GetLowerLifetimerValue/16 (Pit_Ip_GetLowerLifetimerValue) @05e17d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_GetLifetimeTimer/27 
  Calls: 
Pit_Ip_GetUpperLifetimerValue/15 (Pit_Ip_GetUpperLifetimerValue) @05e17a80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_GetLifetimeTimer/27 
  Calls: 
Pit_Ip_GetInterruptBit/14 (Pit_Ip_GetInterruptBit) @05e177e0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_ProcessCommonInterrupt/17 
  Calls: 
Pit_Ip_ClearInterruptFlag/13 (Pit_Ip_ClearInterruptFlag) @05e17540
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_DisableChannelInterrupt/25 Pit_Ip_EnableChannelInterrupt/24 Pit_Ip_ProcessCommonInterrupt/17 Pit_Ip_StopChannel/22 Pit_Ip_InitChannel/19 
  Calls: SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_03/30 SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_03/29 
Pit_Ip_EnableInterrupt/12 (Pit_Ip_EnableInterrupt) @05e172a0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_SetLifetimeTimer/26 Pit_Ip_DisableChannelInterrupt/25 Pit_Ip_EnableChannelInterrupt/24 Pit_Ip_InitChannel/19 
  Calls: SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_02/34 SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_02/33 
Pit_Ip_GetCounterValue/11 (Pit_Ip_GetCounterValue) @05e17000
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_GetCurrentTimer/23 
  Calls: 
Pit_Ip_SetCounterValue/10 (Pit_Ip_SetCounterValue) @05e15b60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_SetLifetimeTimer/26 Pit_Ip_SetLifetimeTimer/26 Pit_Ip_StartChannel/21 
  Calls: 
Pit_Ip_IsChannelRunning/9 (Pit_Ip_IsChannelRunning) @05e15d20
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_StartChannel/21 
  Calls: 
Pit_Ip_Reset/8 (Pit_Ip_Reset) @05e15a80
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_Deinit/20 
  Calls: 
Pit_Ip_SetChainMode/7 (Pit_Ip_SetChainMode) @05e3d460
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_SetLifetimeTimer/26 
  Calls: SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_01/36 SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_01/35 
Pit_Ip_SetDebugMode/6 (Pit_Ip_SetDebugMode) @05e3de00
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_Init/18 
  Calls: 
Pit_Ip_EnableTimer/5 (Pit_Ip_EnableTimer) @05e3db60
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_SetLifetimeTimer/26 Pit_Ip_SetLifetimeTimer/26 Pit_Ip_StopChannel/22 Pit_Ip_StartChannel/21 Pit_Ip_InitChannel/19 
  Calls: SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_00/32 SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_00/31 
Pit_Ip_EnableModule/4 (Pit_Ip_EnableModule) @05e3d8c0
  Type: function definition analyzed
  Visibility: no_reorder prevailing_def_ironly
  References: pitBase/0 (read) pitBase/0 (read) 
  Referring: 
  Availability: local
  Function flags: body local
  Called by: Pit_Ip_Init/18 
  Calls: 
Pit_Ip_GetInterruptFlags/3 (Pit_Ip_GetInterruptFlags) @05e3d620
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: pitBase/0 (read) pitBase/0 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: Pit_Ip_ProcessCommonInterrupt/17 
  Calls: 
Pit_Ip_GetLoadValue/2 (Pit_Ip_GetLoadValue) @05e3d380
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: pitBase/0 (read) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Pit_Ip_u32ChState/1 (Pit_Ip_u32ChState) @05e35cf0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Pit_Ip_InitChannel/19 (write) Pit_Ip_InitChannel/19 (write) Pit_Ip_InitChannel/19 (write) Pit_Ip_InitChannel/19 (write) Pit_Ip_ProcessCommonInterrupt/17 (read) Pit_Ip_ProcessCommonInterrupt/17 (read) Pit_Ip_ProcessCommonInterrupt/17 (read) Pit_Ip_ProcessCommonInterrupt/17 (read) Pit_Ip_ProcessCommonInterrupt/17 (read) 
  Availability: available
  Varpool flags: initialized
pitBase/0 (pitBase) @05e35900
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: Pit_Ip_EnableInterrupt/12 (read) Pit_Ip_EnableInterrupt/12 (read) Pit_Ip_SetChainMode/7 (read) Pit_Ip_SetCounterValue/10 (read) Pit_Ip_SetDebugMode/6 (read) Pit_Ip_GetUpperLifetimerValue/15 (read) Pit_Ip_GetCounterValue/11 (read) Pit_Ip_GetInterruptBit/14 (read) Pit_Ip_EnableTimer/5 (read) Pit_Ip_EnableTimer/5 (read) Pit_Ip_SetChainMode/7 (read) Pit_Ip_GetLoadValue/2 (read) Pit_Ip_SetDebugMode/6 (read) Pit_Ip_SetDebugMode/6 (read) Pit_Ip_Reset/8 (read) Pit_Ip_GetLowerLifetimerValue/16 (read) Pit_Ip_Reset/8 (read) Pit_Ip_Reset/8 (read) Pit_Ip_ClearInterruptFlag/13 (read) Pit_Ip_ClearInterruptFlag/13 (read) Pit_Ip_IsChannelRunning/9 (read) Pit_Ip_EnableTimer/5 (read) Pit_Ip_EnableTimer/5 (read) Pit_Ip_EnableInterrupt/12 (read) Pit_Ip_EnableInterrupt/12 (read) Pit_Ip_EnableModule/4 (read) Pit_Ip_EnableModule/4 (read) Pit_Ip_SetDebugMode/6 (read) Pit_Ip_Reset/8 (read) Pit_Ip_Reset/8 (read) Pit_Ip_Reset/8 (read) Pit_Ip_Reset/8 (read) Pit_Ip_SetChainMode/7 (read) Pit_Ip_SetChainMode/7 (read) Pit_Ip_GetInterruptFlags/3 (read) Pit_Ip_GetInterruptFlags/3 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known

;; Function Pit_Ip_GetLoadValue (Pit_Ip_GetLoadValue, funcdef_no=0, decl_uid=5954, cgraph_uid=1, symbol_order=2)

Pit_Ip_GetLoadValue (uint8 instance, uint8 channel)
{
  uint32 periodValue;
  uint32 D.6184;
  int _1;
  struct PIT_Type * _2;
  int _3;
  uint32 _9;

  <bb 2> :
  periodValue_4 = 0;
  _1 = (int) instance_5(D);
  _2 = pitBase[_1];
  _3 = (int) channel_7(D);
  periodValue_8 ={v} _2->TIMER[_3].LDVAL;
  _9 = periodValue_8;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Pit_Ip_GetInterruptFlags (Pit_Ip_GetInterruptFlags, funcdef_no=1, decl_uid=5957, cgraph_uid=2, symbol_order=3)

Pit_Ip_GetInterruptFlags (uint8 instance, uint8 channel)
{
  uint32 returnFlag;
  uint32 D.6189;
  int _1;
  struct PIT_Type * _2;
  long unsigned int _3;
  int _4;
  struct PIT_Type * _5;
  int _6;
  long unsigned int _7;
  uint32 _15;

  <bb 2> :
  returnFlag_9 = 0;
  if (channel_10(D) == 4)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (int) instance_11(D);
  _2 = pitBase[_1];
  _3 ={v} _2->RTI_TFLG;
  returnFlag_14 = _3 & 1;
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = (int) instance_11(D);
  _5 = pitBase[_4];
  _6 = (int) channel_10(D);
  _7 ={v} _5->TIMER[_6].TFLG;
  returnFlag_13 = _7 & 1;

  <bb 5> :
  # returnFlag_8 = PHI <returnFlag_14(3), returnFlag_13(4)>
  _15 = returnFlag_8;

  <bb 6> :
<L3>:
  return _15;

}



;; Function Pit_Ip_EnableModule (Pit_Ip_EnableModule, funcdef_no=2, decl_uid=5999, cgraph_uid=3, symbol_order=4)

Pit_Ip_EnableModule (uint8 instance, uint8 timerType)
{
  int _1;
  struct PIT_Type * _2;
  long unsigned int _3;
  int _4;
  struct PIT_Type * _5;
  long unsigned int _6;

  <bb 2> :
  if (timerType_8(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (int) instance_10(D);
  _2 = pitBase[_1];
  _3 ={v} _2->MCR;
  _4 = (int) instance_10(D);
  _5 = pitBase[_4];
  _6 = _3 & 4294967293;
  _5->MCR ={v} _6;

  <bb 4> :
  return;

}



;; Function Pit_Ip_EnableTimer (Pit_Ip_EnableTimer, funcdef_no=3, decl_uid=6008, cgraph_uid=4, symbol_order=5)

Pit_Ip_EnableTimer (uint8 instance, uint8 channel, boolean enable)
{
  int _1;
  struct PIT_Type * _2;
  int _3;
  long unsigned int _4;
  int _5;
  struct PIT_Type * _6;
  int _7;
  long unsigned int _8;
  int _9;
  struct PIT_Type * _10;
  int _11;
  long unsigned int _12;
  int _13;
  struct PIT_Type * _14;
  int _15;
  long unsigned int _16;

  <bb 2> :
  SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_00 ();
  if (enable_20(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (int) instance_21(D);
  _2 = pitBase[_1];
  _3 = (int) channel_22(D);
  _4 ={v} _2->TIMER[_3].TCTRL;
  _5 = (int) instance_21(D);
  _6 = pitBase[_5];
  _7 = (int) channel_22(D);
  _8 = _4 | 1;
  _6->TIMER[_7].TCTRL ={v} _8;
  goto <bb 5>; [INV]

  <bb 4> :
  _9 = (int) instance_21(D);
  _10 = pitBase[_9];
  _11 = (int) channel_22(D);
  _12 ={v} _10->TIMER[_11].TCTRL;
  _13 = (int) instance_21(D);
  _14 = pitBase[_13];
  _15 = (int) channel_22(D);
  _16 = _12 & 4294967294;
  _14->TIMER[_15].TCTRL ={v} _16;

  <bb 5> :
  SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_00 ();
  return;

}



;; Function Pit_Ip_SetDebugMode (Pit_Ip_SetDebugMode, funcdef_no=4, decl_uid=6011, cgraph_uid=5, symbol_order=6)

Pit_Ip_SetDebugMode (uint8 instance, boolean stopRun)
{
  int _1;
  struct PIT_Type * _2;
  long unsigned int _3;
  int _4;
  struct PIT_Type * _5;
  long unsigned int _6;
  int _7;
  struct PIT_Type * _8;
  long unsigned int _9;
  int _10;
  struct PIT_Type * _11;
  long unsigned int _12;

  <bb 2> :
  if (stopRun_14(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (int) instance_15(D);
  _2 = pitBase[_1];
  _3 ={v} _2->MCR;
  _4 = (int) instance_15(D);
  _5 = pitBase[_4];
  _6 = _3 | 1;
  _5->MCR ={v} _6;
  goto <bb 5>; [INV]

  <bb 4> :
  _7 = (int) instance_15(D);
  _8 = pitBase[_7];
  _9 ={v} _8->MCR;
  _10 = (int) instance_15(D);
  _11 = pitBase[_10];
  _12 = _9 & 4294967294;
  _11->MCR ={v} _12;

  <bb 5> :
  return;

}



;; Function Pit_Ip_SetChainMode (Pit_Ip_SetChainMode, funcdef_no=5, decl_uid=6015, cgraph_uid=6, symbol_order=7)

Pit_Ip_SetChainMode (uint8 instance, uint8 channel, boolean enable)
{
  int _1;
  struct PIT_Type * _2;
  int _3;
  long unsigned int _4;
  int _5;
  struct PIT_Type * _6;
  int _7;
  long unsigned int _8;
  int _9;
  struct PIT_Type * _10;
  int _11;
  long unsigned int _12;
  int _13;
  struct PIT_Type * _14;
  int _15;
  long unsigned int _16;

  <bb 2> :
  SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_01 ();
  if (enable_20(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  if (channel_21(D) != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _1 = (int) instance_22(D);
  _2 = pitBase[_1];
  _3 = (int) channel_21(D);
  _4 ={v} _2->TIMER[_3].TCTRL;
  _5 = (int) instance_22(D);
  _6 = pitBase[_5];
  _7 = (int) channel_21(D);
  _8 = _4 | 4;
  _6->TIMER[_7].TCTRL ={v} _8;
  goto <bb 6>; [INV]

  <bb 5> :
  _9 = (int) instance_22(D);
  _10 = pitBase[_9];
  _11 = (int) channel_21(D);
  _12 ={v} _10->TIMER[_11].TCTRL;
  _13 = (int) instance_22(D);
  _14 = pitBase[_13];
  _15 = (int) channel_21(D);
  _16 = _12 & 4294967291;
  _14->TIMER[_15].TCTRL ={v} _16;

  <bb 6> :
  SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_01 ();
  return;

}



;; Function Pit_Ip_Reset (Pit_Ip_Reset, funcdef_no=6, decl_uid=6004, cgraph_uid=7, symbol_order=8)

Pit_Ip_Reset (uint8 instance, uint8 channelNum, boolean available, boolean bitExists)
{
  uint8 i;
  uint32 channelIndex;
  uint32 mask;
  int _1;
  struct PIT_Type * _2;
  int _3;
  struct PIT_Type * _4;
  int _5;
  struct PIT_Type * _6;
  _Bool _7;
  _Bool _8;
  int _9;
  struct PIT_Type * _10;
  int _11;
  int _12;
  struct PIT_Type * _13;
  int _14;
  int _15;
  struct PIT_Type * _16;
  int _17;
  unsigned char i.0_18;
  long unsigned int _19;
  int _20;
  struct PIT_Type * _21;

  <bb 2> :
  mask_27 = 0;
  channelIndex_29 = (uint32) channelNum_28(D);
  if (available_30(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  channelIndex_35 = channelIndex_29 + 4294967295;
  _1 = (int) instance_36(D);
  _2 = pitBase[_1];
  _2->RTI_TCTRL ={v} 0;
  _3 = (int) instance_36(D);
  _4 = pitBase[_3];
  _4->RTI_LDVAL ={v} 0;
  _5 = (int) instance_36(D);
  _6 = pitBase[_5];
  _6->RTI_TFLG ={v} 1;
  _7 = ~bitExists_31(D);
  if (_7 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  mask_41 = 4;
  goto <bb 9>; [INV]

  <bb 5> :
  mask_40 = 6;
  goto <bb 9>; [INV]

  <bb 6> :
  _8 = ~bitExists_31(D);
  if (_8 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  mask_34 = 0;
  goto <bb 9>; [INV]

  <bb 8> :
  mask_32 = 2;

  <bb 9> :
  # mask_22 = PHI <mask_40(5), mask_34(7), mask_32(8), mask_41(4)>
  # channelIndex_23 = PHI <channelIndex_35(5), channelIndex_29(7), channelIndex_29(8), channelIndex_35(4)>
  i_42 = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  _9 = (int) instance_36(D);
  _10 = pitBase[_9];
  _11 = (int) i_24;
  _10->TIMER[_11].TCTRL ={v} 0;
  _12 = (int) instance_36(D);
  _13 = pitBase[_12];
  _14 = (int) i_24;
  _13->TIMER[_14].LDVAL ={v} 0;
  _15 = (int) instance_36(D);
  _16 = pitBase[_15];
  _17 = (int) i_24;
  _16->TIMER[_17].TFLG ={v} 1;
  i.0_18 = i_24;
  i_47 = i.0_18 + 1;

  <bb 11> :
  # i_24 = PHI <i_42(9), i_47(10)>
  _19 = (long unsigned int) i_24;
  if (channelIndex_23 > _19)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _20 = (int) instance_36(D);
  _21 = pitBase[_20];
  _21->MCR ={v} mask_22;
  return;

}



;; Function Pit_Ip_IsChannelRunning (Pit_Ip_IsChannelRunning, funcdef_no=7, decl_uid=6018, cgraph_uid=8, symbol_order=9)

Pit_Ip_IsChannelRunning (uint8 instance, uint8 channel)
{
  boolean isRunning;
  boolean D.6229;
  int _1;
  struct PIT_Type * _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  boolean _11;

  <bb 2> :
  isRunning_6 = 0;
  _1 = (int) instance_7(D);
  _2 = pitBase[_1];
  _3 = (int) channel_9(D);
  _4 ={v} _2->TIMER[_3].TCTRL;
  _5 = _4 & 1;
  isRunning_10 = _5 == 1;
  _11 = isRunning_10;

  <bb 3> :
<L0>:
  return _11;

}



;; Function Pit_Ip_SetCounterValue (Pit_Ip_SetCounterValue, funcdef_no=8, decl_uid=6022, cgraph_uid=9, symbol_order=10)

Pit_Ip_SetCounterValue (uint8 instance, uint8 channel, uint32 value)
{
  int _1;
  struct PIT_Type * _2;
  int _3;

  <bb 2> :
  _1 = (int) instance_4(D);
  _2 = pitBase[_1];
  _3 = (int) channel_6(D);
  _2->TIMER[_3].LDVAL ={v} value_7(D);
  return;

}



;; Function Pit_Ip_GetCounterValue (Pit_Ip_GetCounterValue, funcdef_no=9, decl_uid=6025, cgraph_uid=10, symbol_order=11)

Pit_Ip_GetCounterValue (uint8 instance, uint8 channel)
{
  uint32 counterValue;
  uint32 D.6233;
  int _1;
  struct PIT_Type * _2;
  int _3;
  uint32 _9;

  <bb 2> :
  counterValue_4 = 0;
  _1 = (int) instance_5(D);
  _2 = pitBase[_1];
  _3 = (int) channel_7(D);
  counterValue_8 ={v} _2->TIMER[_3].CVAL;
  _9 = counterValue_8;

  <bb 3> :
<L0>:
  return _9;

}



;; Function Pit_Ip_EnableInterrupt (Pit_Ip_EnableInterrupt, funcdef_no=10, decl_uid=6029, cgraph_uid=11, symbol_order=12)

Pit_Ip_EnableInterrupt (uint8 instance, uint8 channel, boolean enable)
{
  int _1;
  struct PIT_Type * _2;
  int _3;
  long unsigned int _4;
  int _5;
  struct PIT_Type * _6;
  int _7;
  long unsigned int _8;
  int _9;
  struct PIT_Type * _10;
  int _11;
  long unsigned int _12;
  int _13;
  struct PIT_Type * _14;
  int _15;
  long unsigned int _16;

  <bb 2> :
  SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_02 ();
  if (enable_20(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (int) instance_21(D);
  _2 = pitBase[_1];
  _3 = (int) channel_22(D);
  _4 ={v} _2->TIMER[_3].TCTRL;
  _5 = (int) instance_21(D);
  _6 = pitBase[_5];
  _7 = (int) channel_22(D);
  _8 = _4 | 2;
  _6->TIMER[_7].TCTRL ={v} _8;
  goto <bb 5>; [INV]

  <bb 4> :
  _9 = (int) instance_21(D);
  _10 = pitBase[_9];
  _11 = (int) channel_22(D);
  _12 ={v} _10->TIMER[_11].TCTRL;
  _13 = (int) instance_21(D);
  _14 = pitBase[_13];
  _15 = (int) channel_22(D);
  _16 = _12 & 4294967293;
  _14->TIMER[_15].TCTRL ={v} _16;

  <bb 5> :
  SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_02 ();
  return;

}



;; Function Pit_Ip_ClearInterruptFlag (Pit_Ip_ClearInterruptFlag, funcdef_no=11, decl_uid=6032, cgraph_uid=12, symbol_order=13)

Pit_Ip_ClearInterruptFlag (uint8 instance, uint8 channel)
{
  int _1;
  struct PIT_Type * _2;
  int _3;
  long unsigned int _4;
  int _5;
  struct PIT_Type * _6;
  int _7;
  long unsigned int _8;

  <bb 2> :
  SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_03 ();
  _1 = (int) instance_11(D);
  _2 = pitBase[_1];
  _3 = (int) channel_12(D);
  _4 ={v} _2->TIMER[_3].TFLG;
  _5 = (int) instance_11(D);
  _6 = pitBase[_5];
  _7 = (int) channel_12(D);
  _8 = _4 | 1;
  _6->TIMER[_7].TFLG ={v} _8;
  SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_03 ();
  return;

}



;; Function Pit_Ip_GetInterruptBit (Pit_Ip_GetInterruptBit, funcdef_no=12, decl_uid=5996, cgraph_uid=13, symbol_order=14)

Pit_Ip_GetInterruptBit (uint8 instance, uint8 channel)
{
  uint32 returnFlag;
  uint32 D.6201;
  int _1;
  struct PIT_Type * _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  uint32 _11;

  <bb 2> :
  returnFlag_6 = 0;
  _1 = (int) instance_7(D);
  _2 = pitBase[_1];
  _3 = (int) channel_9(D);
  _4 ={v} _2->TIMER[_3].TCTRL;
  _5 = _4 >> 1;
  returnFlag_10 = _5 & 1;
  _11 = returnFlag_10;

  <bb 3> :
<L0>:
  return _11;

}



;; Function Pit_Ip_GetUpperLifetimerValue (Pit_Ip_GetUpperLifetimerValue, funcdef_no=13, decl_uid=6034, cgraph_uid=14, symbol_order=15)

Pit_Ip_GetUpperLifetimerValue (uint8 instance)
{
  uint32 upperValue;
  uint32 D.6241;
  int _1;
  struct PIT_Type * _2;
  uint32 _7;

  <bb 2> :
  upperValue_3 = 0;
  _1 = (int) instance_4(D);
  _2 = pitBase[_1];
  upperValue_6 ={v} _2->LTMR64H;
  _7 = upperValue_6;

  <bb 3> :
<L0>:
  return _7;

}



;; Function Pit_Ip_GetLowerLifetimerValue (Pit_Ip_GetLowerLifetimerValue, funcdef_no=14, decl_uid=6036, cgraph_uid=15, symbol_order=16)

Pit_Ip_GetLowerLifetimerValue (uint8 instance)
{
  uint32 lowerValue;
  uint32 D.6243;
  int _1;
  struct PIT_Type * _2;
  uint32 _7;

  <bb 2> :
  lowerValue_3 = 0;
  _1 = (int) instance_4(D);
  _2 = pitBase[_1];
  lowerValue_6 ={v} _2->LTMR64L;
  _7 = lowerValue_6;

  <bb 3> :
<L0>:
  return _7;

}



;; Function Pit_Ip_ProcessCommonInterrupt (Pit_Ip_ProcessCommonInterrupt, funcdef_no=15, decl_uid=5993, cgraph_uid=16, symbol_order=17)

Pit_Ip_ProcessCommonInterrupt (uint8 instance, uint8 channel)
{
  uint32 interruptEnable;
  uint32 flagEnable;
  int _1;
  int _2;
  <unnamed type> _3;
  int _4;
  int _5;
  _Bool _6;
  int _7;
  int _8;
  void (*<T4c5>) (uint8) _9;
  int _10;
  int _11;
  void (*<T4c5>) (uint8) _12;
  int _13;
  int _14;
  unsigned char _15;

  <bb 2> :
  flagEnable_18 = 0;
  interruptEnable_19 = 0;
  flagEnable_24 = Pit_Ip_GetInterruptFlags (instance_21(D), channel_22(D));
  interruptEnable_26 = Pit_Ip_GetInterruptBit (instance_21(D), channel_22(D));
  Pit_Ip_ClearInterruptFlag (instance_21(D), channel_22(D));
  if (flagEnable_24 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  if (interruptEnable_26 == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
  _1 = (int) instance_21(D);
  _2 = (int) channel_22(D);
  _3 = Pit_Ip_u32ChState[_1][_2].channelMode;
  if (_3 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  Pit_Ip_StopChannel (instance_21(D), channel_22(D));

  <bb 6> :
  _4 = (int) instance_21(D);
  _5 = (int) channel_22(D);
  _6 = Pit_Ip_u32ChState[_4][_5].chInit;
  if (_6 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  _7 = (int) instance_21(D);
  _8 = (int) channel_22(D);
  _9 = Pit_Ip_u32ChState[_7][_8].callback;
  if (_9 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _10 = (int) instance_21(D);
  _11 = (int) channel_22(D);
  _12 = Pit_Ip_u32ChState[_10][_11].callback;
  _13 = (int) instance_21(D);
  _14 = (int) channel_22(D);
  _15 = Pit_Ip_u32ChState[_13][_14].callbackParam;
  _12 (_15);

  <bb 9> :
  return;

}



;; Function Pit_Ip_Init (Pit_Ip_Init, funcdef_no=16, decl_uid=5961, cgraph_uid=17, symbol_order=18)

Pit_Ip_Init (uint8 instance, const struct Pit_Ip_InstanceConfigType * config)
{
  _Bool _1;
  _Bool _2;

  <bb 2> :
  _1 = config_5(D)->enableStandardTimers;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Pit_Ip_EnableModule (instance_6(D), 0);

  <bb 4> :
  _2 = config_5(D)->stopRunInDebug;
  Pit_Ip_SetDebugMode (instance_6(D), _2);
  return;

}



;; Function Pit_Ip_InitChannel (Pit_Ip_InitChannel, funcdef_no=17, decl_uid=5964, cgraph_uid=18, symbol_order=19)

Pit_Ip_InitChannel (uint8 instance, const struct Pit_Ip_ChannelConfigType * chnlConfig)
{
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  int _4;
  unsigned char _5;
  int _6;
  int _7;
  unsigned char _8;
  int _9;
  void (*<T4c5>) (uint8) _10;
  int _11;
  unsigned char _12;
  int _13;
  unsigned char _14;
  int _15;
  unsigned char _16;
  int _17;
  <unnamed type> _18;

  <bb 2> :
  _1 = chnlConfig_20(D)->hwChannel;
  Pit_Ip_EnableTimer (instance_21(D), _1, 0);
  _2 = chnlConfig_20(D)->hwChannel;
  Pit_Ip_EnableInterrupt (instance_21(D), _2, 0);
  _3 = chnlConfig_20(D)->hwChannel;
  Pit_Ip_ClearInterruptFlag (instance_21(D), _3);
  _4 = (int) instance_21(D);
  _5 = chnlConfig_20(D)->hwChannel;
  _6 = (int) _5;
  Pit_Ip_u32ChState[_4][_6].chInit = 1;
  _7 = (int) instance_21(D);
  _8 = chnlConfig_20(D)->hwChannel;
  _9 = (int) _8;
  _10 = chnlConfig_20(D)->callback;
  Pit_Ip_u32ChState[_7][_9].callback = _10;
  _11 = (int) instance_21(D);
  _12 = chnlConfig_20(D)->hwChannel;
  _13 = (int) _12;
  _14 = chnlConfig_20(D)->callbackParam;
  Pit_Ip_u32ChState[_11][_13].callbackParam = _14;
  _15 = (int) instance_21(D);
  _16 = chnlConfig_20(D)->hwChannel;
  _17 = (int) _16;
  _18 = chnlConfig_20(D)->channelMode;
  Pit_Ip_u32ChState[_15][_17].channelMode = _18;
  return;

}



;; Function Pit_Ip_Deinit (Pit_Ip_Deinit, funcdef_no=18, decl_uid=5966, cgraph_uid=19, symbol_order=20)

Pit_Ip_Deinit (uint8 instance)
{
  boolean mdisBitExists;
  boolean rtiChannelExists;
  uint8 channelNum;
  int _1;

  <bb 2> :
  channelNum_5 = 0;
  rtiChannelExists_6 = 0;
  mdisBitExists_7 = 0;
  _1 = (int) instance_8(D);
  switch (_1) <default: <L3> [INV], case 0: <L0> [INV], case 1: <L1> [INV], case 2: <L2> [INV]>

  <bb 3> :
<L0>:
  channelNum_13 = 5;
  rtiChannelExists_14 = 1;
  mdisBitExists_15 = 1;
  goto <bb 7>; [INV]

  <bb 4> :
<L1>:
  channelNum_11 = 4;
  mdisBitExists_12 = 1;
  goto <bb 7>; [INV]

  <bb 5> :
<L2>:
  channelNum_9 = 4;
  mdisBitExists_10 = 1;
  goto <bb 7>; [INV]

  <bb 6> :
<L3>:

  <bb 7> :
  # channelNum_2 = PHI <channelNum_13(3), channelNum_11(4), channelNum_9(5), channelNum_5(6)>
  # rtiChannelExists_3 = PHI <rtiChannelExists_14(3), rtiChannelExists_6(4), rtiChannelExists_6(5), rtiChannelExists_6(6)>
  # mdisBitExists_4 = PHI <mdisBitExists_15(3), mdisBitExists_12(4), mdisBitExists_10(5), mdisBitExists_7(6)>
  Pit_Ip_Reset (instance_8(D), channelNum_2, rtiChannelExists_3, mdisBitExists_4);
  return;

}



;; Function Pit_Ip_StartChannel (Pit_Ip_StartChannel, funcdef_no=19, decl_uid=5970, cgraph_uid=20, symbol_order=21)

Pit_Ip_StartChannel (uint8 instance, uint8 channel, uint32 countValue)
{
  Pit_Ip_StatusType status;
  boolean isRunning;
  Pit_Ip_StatusType D.6227;
  _Bool _1;
  long unsigned int _2;
  Pit_Ip_StatusType _16;

  <bb 2> :
  isRunning_5 = 0;
  status_6 = 1;
  isRunning_11 = Pit_Ip_IsChannelRunning (instance_8(D), channel_9(D));
  _1 = ~isRunning_11;
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = countValue_12(D) + 4294967295;
  Pit_Ip_SetCounterValue (instance_8(D), channel_9(D), _2);
  Pit_Ip_EnableTimer (instance_8(D), channel_9(D), 1);
  status_15 = 0;

  <bb 4> :
  # status_3 = PHI <status_6(2), status_15(3)>
  _16 = status_3;

  <bb 5> :
<L2>:
  return _16;

}



;; Function Pit_Ip_StopChannel (Pit_Ip_StopChannel, funcdef_no=20, decl_uid=5973, cgraph_uid=21, symbol_order=22)

Pit_Ip_StopChannel (uint8 instance, uint8 channel)
{
  <bb 2> :
  Pit_Ip_EnableTimer (instance_2(D), channel_3(D), 0);
  Pit_Ip_ClearInterruptFlag (instance_2(D), channel_3(D));
  return;

}



;; Function Pit_Ip_GetCurrentTimer (Pit_Ip_GetCurrentTimer, funcdef_no=21, decl_uid=5976, cgraph_uid=22, symbol_order=23)

Pit_Ip_GetCurrentTimer (uint8 instance, uint8 channel)
{
  uint64 counterValue;
  uint64 D.6231;
  long unsigned int _1;
  uint64 _8;

  <bb 2> :
  counterValue_2 = 0;
  _1 = Pit_Ip_GetCounterValue (instance_4(D), channel_5(D));
  counterValue_7 = (uint64) _1;
  _8 = counterValue_7;

  <bb 3> :
<L0>:
  return _8;

}



;; Function Pit_Ip_EnableChannelInterrupt (Pit_Ip_EnableChannelInterrupt, funcdef_no=22, decl_uid=5979, cgraph_uid=23, symbol_order=24)

Pit_Ip_EnableChannelInterrupt (uint8 instance, uint8 channel)
{
  <bb 2> :
  Pit_Ip_ClearInterruptFlag (instance_2(D), channel_3(D));
  Pit_Ip_EnableInterrupt (instance_2(D), channel_3(D), 1);
  return;

}



;; Function Pit_Ip_DisableChannelInterrupt (Pit_Ip_DisableChannelInterrupt, funcdef_no=23, decl_uid=5982, cgraph_uid=24, symbol_order=25)

Pit_Ip_DisableChannelInterrupt (uint8 instance, uint8 channel)
{
  <bb 2> :
  Pit_Ip_EnableInterrupt (instance_2(D), channel_3(D), 0);
  Pit_Ip_ClearInterruptFlag (instance_2(D), channel_3(D));
  return;

}



;; Function Pit_Ip_SetLifetimeTimer (Pit_Ip_SetLifetimeTimer, funcdef_no=24, decl_uid=5984, cgraph_uid=25, symbol_order=26)

Pit_Ip_SetLifetimeTimer (uint8 instance)
{
  <bb 2> :
  Pit_Ip_SetCounterValue (instance_2(D), 1, 4294967295);
  Pit_Ip_EnableInterrupt (instance_2(D), 1, 0);
  Pit_Ip_SetChainMode (instance_2(D), 1, 1);
  Pit_Ip_EnableTimer (instance_2(D), 1, 1);
  Pit_Ip_SetCounterValue (instance_2(D), 0, 4294967295);
  Pit_Ip_EnableTimer (instance_2(D), 0, 1);
  return;

}



;; Function Pit_Ip_GetLifetimeTimer (Pit_Ip_GetLifetimeTimer, funcdef_no=25, decl_uid=5986, cgraph_uid=26, symbol_order=27)

Pit_Ip_GetLifetimeTimer (uint8 instance)
{
  uint32 valueL;
  uint32 valueH;
  uint64 lifeTimeValue;
  uint64 D.6239;
  long long unsigned int _1;
  long long unsigned int _2;
  long long unsigned int _3;
  uint64 _14;

  <bb 2> :
  lifeTimeValue_4 = 0;
  valueH_5 = 0;
  valueL_6 = 0;
  valueH_10 = Pit_Ip_GetUpperLifetimerValue (instance_8(D));
  valueL_12 = Pit_Ip_GetLowerLifetimerValue (instance_8(D));
  _1 = (long long unsigned int) valueH_10;
  _2 = _1 << 32;
  _3 = (long long unsigned int) valueL_12;
  lifeTimeValue_13 = _2 + _3;
  _14 = lifeTimeValue_13;

  <bb 3> :
<L0>:
  return _14;

}



;; Function PIT_0_ISR (PIT_0_ISR, funcdef_no=26, decl_uid=5990, cgraph_uid=27, symbol_order=28)

PIT_0_ISR ()
{
  uint8 channel;
  uint8 instance;
  unsigned char channel.1_1;

  <bb 2> :
  instance_4 = 0;
  channel_5 = 0;
  channel_6 = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  Pit_Ip_ProcessCommonInterrupt (instance_4, channel_2);
  channel.1_1 = channel_2;
  channel_9 = channel.1_1 + 1;

  <bb 4> :
  # channel_2 = PHI <channel_6(2), channel_9(3)>
  if (channel_2 <= 3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}


